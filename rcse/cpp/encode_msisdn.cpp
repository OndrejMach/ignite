//#include "encode_msisdn.h"
#include <stdio.h>
#include <stdlib.h>
//------------------------------------------------------------------------------

	// file: des_static_first.h

	/*-----------------------------------------------------------------------------*/
	/* des_static_first.h                                                          */
	/*                                                                             */
	/* statische Initialisierung der Variablen                                     */
	/* die normalerweise beim ersten Aufruf von desks initialisiert werden         */
	/*                                                                             */
	/* automatisch generiert                                                       */
	/* dafur muss das Makro DO_PRINT_FIRST in des.c definiert sein                 */
	/* (Kommentarzeichen bei #define DO_PRINT_FIRST entfernen)                     */
	/*-----------------------------------------------------------------------------*/
		static unsigned char iperm [16] [16] [8] = {
			{ /* [0x0000] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00 },
				{ /* [0x0004] */ 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00 },
				{ /* [0x0007] */ 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00 },
				{ /* [0x000b] */ 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00 },
				{ /* [0x000c] */ 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00 },
				{ /* [0x000f] */ 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00 }
			},
			{ /* [0x0001] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01 },
				{ /* [0x0004] */ 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01 },
				{ /* [0x0007] */ 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01 },
				{ /* [0x000c] */ 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00 },
				{ /* [0x000d] */ 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00 },
				{ /* [0x000e] */ 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01 },
				{ /* [0x000f] */ 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01 }
			},
			{ /* [0x0002] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00 },
				{ /* [0x0004] */ 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00 },
				{ /* [0x0007] */ 0x02, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x00, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00 },
				{ /* [0x000b] */ 0x00, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00 },
				{ /* [0x000c] */ 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x02, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x02, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00 },
				{ /* [0x000f] */ 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00 }
			},
			{ /* [0x0003] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02 },
				{ /* [0x0004] */ 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02 },
				{ /* [0x0007] */ 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x02 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x02, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x02, 0x02 },
				{ /* [0x000c] */ 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00 },
				{ /* [0x000d] */ 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x00 },
				{ /* [0x000e] */ 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x02 },
				{ /* [0x000f] */ 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02 }
			},
			{ /* [0x0004] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00 },
				{ /* [0x0004] */ 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x04, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00 },
				{ /* [0x0007] */ 0x04, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x00, 0x04, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00 },
				{ /* [0x000b] */ 0x00, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00 },
				{ /* [0x000c] */ 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x04, 0x04, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x04, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00 },
				{ /* [0x000f] */ 0x04, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00 }
			},
			{ /* [0x0005] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04 },
				{ /* [0x0004] */ 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x04 },
				{ /* [0x0007] */ 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x04 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04, 0x04 },
				{ /* [0x000c] */ 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00 },
				{ /* [0x000d] */ 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x00 },
				{ /* [0x000e] */ 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x04 },
				{ /* [0x000f] */ 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x04 }
			},
			{ /* [0x0006] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00 },
				{ /* [0x0004] */ 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x08, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00 },
				{ /* [0x0007] */ 0x08, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00 },
				{ /* [0x000b] */ 0x00, 0x08, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00 },
				{ /* [0x000c] */ 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x08, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x08, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00 },
				{ /* [0x000f] */ 0x08, 0x08, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00 }
			},
			{ /* [0x0007] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08 },
				{ /* [0x0004] */ 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x08 },
				{ /* [0x0007] */ 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x08 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x08 },
				{ /* [0x000c] */ 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00 },
				{ /* [0x000d] */ 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x08, 0x00 },
				{ /* [0x000e] */ 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x08 },
				{ /* [0x000f] */ 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x08, 0x08 }
			},
			{ /* [0x0008] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00 },
				{ /* [0x0004] */ 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x10, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00 },
				{ /* [0x0007] */ 0x10, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00 },
				{ /* [0x000b] */ 0x00, 0x10, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00 },
				{ /* [0x000c] */ 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x10, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x10, 0x00, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00 },
				{ /* [0x000f] */ 0x10, 0x10, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00 }
			},
			{ /* [0x0009] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10 },
				{ /* [0x0004] */ 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x10 },
				{ /* [0x0007] */ 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x00, 0x10 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x10 },
				{ /* [0x000c] */ 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00 },
				{ /* [0x000d] */ 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x10, 0x00 },
				{ /* [0x000e] */ 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x10 },
				{ /* [0x000f] */ 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x10, 0x10 }
			},
			{ /* [0x000a] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00 },
				{ /* [0x0004] */ 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x20, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00 },
				{ /* [0x0007] */ 0x20, 0x20, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x00, 0x20, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x00, 0x00 },
				{ /* [0x000b] */ 0x00, 0x20, 0x00, 0x00, 0x20, 0x20, 0x00, 0x00 },
				{ /* [0x000c] */ 0x20, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x20, 0x20, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x20, 0x00, 0x00, 0x00, 0x20, 0x20, 0x00, 0x00 },
				{ /* [0x000f] */ 0x20, 0x20, 0x00, 0x00, 0x20, 0x20, 0x00, 0x00 }
			},
			{ /* [0x000b] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20 },
				{ /* [0x0004] */ 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x20 },
				{ /* [0x0007] */ 0x00, 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0x20 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 0x20 },
				{ /* [0x000c] */ 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x00 },
				{ /* [0x000d] */ 0x00, 0x00, 0x20, 0x20, 0x00, 0x00, 0x20, 0x00 },
				{ /* [0x000e] */ 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x20 },
				{ /* [0x000f] */ 0x00, 0x00, 0x20, 0x20, 0x00, 0x00, 0x20, 0x20 }
			},
			{ /* [0x000c] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00 },
				{ /* [0x0004] */ 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00 },
				{ /* [0x0007] */ 0x40, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x00, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00 },
				{ /* [0x000b] */ 0x00, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00 },
				{ /* [0x000c] */ 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x40, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00 },
				{ /* [0x000f] */ 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00 }
			},
			{ /* [0x000d] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40 },
				{ /* [0x0004] */ 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40 },
				{ /* [0x0007] */ 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x40 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x40 },
				{ /* [0x000c] */ 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00 },
				{ /* [0x000d] */ 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x00 },
				{ /* [0x000e] */ 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40 },
				{ /* [0x000f] */ 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40 }
			},
			{ /* [0x000e] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00 },
				{ /* [0x0004] */ 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00 },
				{ /* [0x0007] */ 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x00, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00 },
				{ /* [0x000b] */ 0x00, 0x80, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00 },
				{ /* [0x000c] */ 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x80, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00 },
				{ /* [0x000f] */ 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00 }
			},
			{ /* [0x000f] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80 },
				{ /* [0x0004] */ 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80 },
				{ /* [0x0007] */ 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 0x00 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 0x80 },
				{ /* [0x000c] */ 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00 },
				{ /* [0x000d] */ 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x80, 0x00 },
				{ /* [0x000e] */ 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80 },
				{ /* [0x000f] */ 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80 }
			}
		} ; // Ende iperm
		static unsigned char fperm [16] [16] [8] = {
			{ /* [0x0000] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00 },
				{ /* [0x0007] */ 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x40 },
				{ /* [0x000c] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40 },
				{ /* [0x000d] */ 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x40 },
				{ /* [0x000e] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40 },
				{ /* [0x000f] */ 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40 }
			},
			{ /* [0x0001] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0003] */ 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x40, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0007] */ 0x40, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000b] */ 0x40, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000c] */ 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x40, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x00, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000f] */ 0x40, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00 }
			},
			{ /* [0x0002] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x00 },
				{ /* [0x0007] */ 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x00, 0x10 },
				{ /* [0x000c] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10 },
				{ /* [0x000d] */ 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x10 },
				{ /* [0x000e] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10 },
				{ /* [0x000f] */ 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x10 }
			},
			{ /* [0x0003] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0003] */ 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0007] */ 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000b] */ 0x10, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000c] */ 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x10, 0x00, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x00, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000f] */ 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00 }
			},
			{ /* [0x0004] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00 },
				{ /* [0x0007] */ 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x04 },
				{ /* [0x000c] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04 },
				{ /* [0x000d] */ 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04 },
				{ /* [0x000e] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04 },
				{ /* [0x000f] */ 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04 }
			},
			{ /* [0x0005] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0003] */ 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0007] */ 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x04, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000b] */ 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000c] */ 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x04, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x00, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000f] */ 0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00 }
			},
			{ /* [0x0006] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00 },
				{ /* [0x0007] */ 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01 },
				{ /* [0x000c] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01 },
				{ /* [0x000d] */ 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x01 },
				{ /* [0x000e] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01 },
				{ /* [0x000f] */ 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01 }
			},
			{ /* [0x0007] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0003] */ 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0007] */ 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000b] */ 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000c] */ 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000f] */ 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00 }
			},
			{ /* [0x0008] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00 },
				{ /* [0x0007] */ 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x80 },
				{ /* [0x000c] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80 },
				{ /* [0x000d] */ 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x80 },
				{ /* [0x000e] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80 },
				{ /* [0x000f] */ 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80 }
			},
			{ /* [0x0009] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0003] */ 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0007] */ 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000b] */ 0x80, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000c] */ 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x80, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000f] */ 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00 }
			},
			{ /* [0x000a] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x20, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x00 },
				{ /* [0x0007] */ 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x20, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x20 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x20 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x00, 0x20 },
				{ /* [0x000c] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20 },
				{ /* [0x000d] */ 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x20, 0x20 },
				{ /* [0x000e] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x20 },
				{ /* [0x000f] */ 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x20, 0x20 }
			},
			{ /* [0x000b] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0003] */ 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x20, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0007] */ 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x20, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x20, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000b] */ 0x20, 0x20, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000c] */ 0x00, 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x20, 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x00, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000f] */ 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00 }
			},
			{ /* [0x000c] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00 },
				{ /* [0x0007] */ 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x08 },
				{ /* [0x000c] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08 },
				{ /* [0x000d] */ 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x08 },
				{ /* [0x000e] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08 },
				{ /* [0x000f] */ 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08 }
			},
			{ /* [0x000d] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0003] */ 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0007] */ 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000b] */ 0x08, 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000c] */ 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x08, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x00, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000f] */ 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00 }
			},
			{ /* [0x000e] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00 },
				{ /* [0x0003] */ 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00 },
				{ /* [0x0005] */ 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00 },
				{ /* [0x0006] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00 },
				{ /* [0x0007] */ 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02 },
				{ /* [0x0009] */ 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x02 },
				{ /* [0x000a] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02 },
				{ /* [0x000b] */ 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x02 },
				{ /* [0x000c] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02 },
				{ /* [0x000d] */ 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x02 },
				{ /* [0x000e] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02 },
				{ /* [0x000f] */ 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02 }
			},
			{ /* [0x000f] */
				{ /* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0001] */ 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0002] */ 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0003] */ 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0004] */ 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0005] */ 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0006] */ 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0007] */ 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0008] */ 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x0009] */ 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000a] */ 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000b] */ 0x02, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000c] */ 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000d] */ 0x02, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000e] */ 0x00, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00 },
				{ /* [0x000f] */ 0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00 }
			}
		} ; // Ende fperm
		static unsigned char s_anS [0x4000] = {
			/* [0x0000] */ 0xef, 0xe3, 0xe1, 0xed, 0xe8, 0xe4, 0xee, 0xe7, 0xe6, 0xef, 0xeb, 0xe2, 0xe3, 0xe8, 0xe4, 0xee,
			/* [0x0010] */ 0xe9, 0xec, 0xe7, 0xe0, 0xe2, 0xe1, 0xed, 0xea, 0xec, 0xe6, 0xe0, 0xe9, 0xe5, 0xeb, 0xea, 0xe5,
			/* [0x0020] */ 0xe0, 0xed, 0xee, 0xe8, 0xe7, 0xea, 0xeb, 0xe1, 0xea, 0xe3, 0xe4, 0xef, 0xed, 0xe4, 0xe1, 0xe2,
			/* [0x0030] */ 0xe5, 0xeb, 0xe8, 0xe6, 0xec, 0xe7, 0xe6, 0xec, 0xe9, 0xe0, 0xe3, 0xe5, 0xe2, 0xee, 0xef, 0xe9,
			/* [0x0040] */ 0x0f, 0x03, 0x01, 0x0d, 0x08, 0x04, 0x0e, 0x07, 0x06, 0x0f, 0x0b, 0x02, 0x03, 0x08, 0x04, 0x0e,
			/* [0x0050] */ 0x09, 0x0c, 0x07, 0x00, 0x02, 0x01, 0x0d, 0x0a, 0x0c, 0x06, 0x00, 0x09, 0x05, 0x0b, 0x0a, 0x05,
			/* [0x0060] */ 0x00, 0x0d, 0x0e, 0x08, 0x07, 0x0a, 0x0b, 0x01, 0x0a, 0x03, 0x04, 0x0f, 0x0d, 0x04, 0x01, 0x02,
			/* [0x0070] */ 0x05, 0x0b, 0x08, 0x06, 0x0c, 0x07, 0x06, 0x0c, 0x09, 0x00, 0x03, 0x05, 0x02, 0x0e, 0x0f, 0x09,
			/* [0x0080] */ 0x4f, 0x43, 0x41, 0x4d, 0x48, 0x44, 0x4e, 0x47, 0x46, 0x4f, 0x4b, 0x42, 0x43, 0x48, 0x44, 0x4e,
			/* [0x0090] */ 0x49, 0x4c, 0x47, 0x40, 0x42, 0x41, 0x4d, 0x4a, 0x4c, 0x46, 0x40, 0x49, 0x45, 0x4b, 0x4a, 0x45,
			/* [0x00a0] */ 0x40, 0x4d, 0x4e, 0x48, 0x47, 0x4a, 0x4b, 0x41, 0x4a, 0x43, 0x44, 0x4f, 0x4d, 0x44, 0x41, 0x42,
			/* [0x00b0] */ 0x45, 0x4b, 0x48, 0x46, 0x4c, 0x47, 0x46, 0x4c, 0x49, 0x40, 0x43, 0x45, 0x42, 0x4e, 0x4f, 0x49,
			/* [0x00c0] */ 0xff, 0xf3, 0xf1, 0xfd, 0xf8, 0xf4, 0xfe, 0xf7, 0xf6, 0xff, 0xfb, 0xf2, 0xf3, 0xf8, 0xf4, 0xfe,
			/* [0x00d0] */ 0xf9, 0xfc, 0xf7, 0xf0, 0xf2, 0xf1, 0xfd, 0xfa, 0xfc, 0xf6, 0xf0, 0xf9, 0xf5, 0xfb, 0xfa, 0xf5,
			/* [0x00e0] */ 0xf0, 0xfd, 0xfe, 0xf8, 0xf7, 0xfa, 0xfb, 0xf1, 0xfa, 0xf3, 0xf4, 0xff, 0xfd, 0xf4, 0xf1, 0xf2,
			/* [0x00f0] */ 0xf5, 0xfb, 0xf8, 0xf6, 0xfc, 0xf7, 0xf6, 0xfc, 0xf9, 0xf0, 0xf3, 0xf5, 0xf2, 0xfe, 0xff, 0xf9,
			/* [0x0100] */ 0xdf, 0xd3, 0xd1, 0xdd, 0xd8, 0xd4, 0xde, 0xd7, 0xd6, 0xdf, 0xdb, 0xd2, 0xd3, 0xd8, 0xd4, 0xde,
			/* [0x0110] */ 0xd9, 0xdc, 0xd7, 0xd0, 0xd2, 0xd1, 0xdd, 0xda, 0xdc, 0xd6, 0xd0, 0xd9, 0xd5, 0xdb, 0xda, 0xd5,
			/* [0x0120] */ 0xd0, 0xdd, 0xde, 0xd8, 0xd7, 0xda, 0xdb, 0xd1, 0xda, 0xd3, 0xd4, 0xdf, 0xdd, 0xd4, 0xd1, 0xd2,
			/* [0x0130] */ 0xd5, 0xdb, 0xd8, 0xd6, 0xdc, 0xd7, 0xd6, 0xdc, 0xd9, 0xd0, 0xd3, 0xd5, 0xd2, 0xde, 0xdf, 0xd9,
			/* [0x0140] */ 0x7f, 0x73, 0x71, 0x7d, 0x78, 0x74, 0x7e, 0x77, 0x76, 0x7f, 0x7b, 0x72, 0x73, 0x78, 0x74, 0x7e,
			/* [0x0150] */ 0x79, 0x7c, 0x77, 0x70, 0x72, 0x71, 0x7d, 0x7a, 0x7c, 0x76, 0x70, 0x79, 0x75, 0x7b, 0x7a, 0x75,
			/* [0x0160] */ 0x70, 0x7d, 0x7e, 0x78, 0x77, 0x7a, 0x7b, 0x71, 0x7a, 0x73, 0x74, 0x7f, 0x7d, 0x74, 0x71, 0x72,
			/* [0x0170] */ 0x75, 0x7b, 0x78, 0x76, 0x7c, 0x77, 0x76, 0x7c, 0x79, 0x70, 0x73, 0x75, 0x72, 0x7e, 0x7f, 0x79,
			/* [0x0180] */ 0x1f, 0x13, 0x11, 0x1d, 0x18, 0x14, 0x1e, 0x17, 0x16, 0x1f, 0x1b, 0x12, 0x13, 0x18, 0x14, 0x1e,
			/* [0x0190] */ 0x19, 0x1c, 0x17, 0x10, 0x12, 0x11, 0x1d, 0x1a, 0x1c, 0x16, 0x10, 0x19, 0x15, 0x1b, 0x1a, 0x15,
			/* [0x01a0] */ 0x10, 0x1d, 0x1e, 0x18, 0x17, 0x1a, 0x1b, 0x11, 0x1a, 0x13, 0x14, 0x1f, 0x1d, 0x14, 0x11, 0x12,
			/* [0x01b0] */ 0x15, 0x1b, 0x18, 0x16, 0x1c, 0x17, 0x16, 0x1c, 0x19, 0x10, 0x13, 0x15, 0x12, 0x1e, 0x1f, 0x19,
			/* [0x01c0] */ 0x4f, 0x43, 0x41, 0x4d, 0x48, 0x44, 0x4e, 0x47, 0x46, 0x4f, 0x4b, 0x42, 0x43, 0x48, 0x44, 0x4e,
			/* [0x01d0] */ 0x49, 0x4c, 0x47, 0x40, 0x42, 0x41, 0x4d, 0x4a, 0x4c, 0x46, 0x40, 0x49, 0x45, 0x4b, 0x4a, 0x45,
			/* [0x01e0] */ 0x40, 0x4d, 0x4e, 0x48, 0x47, 0x4a, 0x4b, 0x41, 0x4a, 0x43, 0x44, 0x4f, 0x4d, 0x44, 0x41, 0x42,
			/* [0x01f0] */ 0x45, 0x4b, 0x48, 0x46, 0x4c, 0x47, 0x46, 0x4c, 0x49, 0x40, 0x43, 0x45, 0x42, 0x4e, 0x4f, 0x49,
			/* [0x0200] */ 0x2f, 0x23, 0x21, 0x2d, 0x28, 0x24, 0x2e, 0x27, 0x26, 0x2f, 0x2b, 0x22, 0x23, 0x28, 0x24, 0x2e,
			/* [0x0210] */ 0x29, 0x2c, 0x27, 0x20, 0x22, 0x21, 0x2d, 0x2a, 0x2c, 0x26, 0x20, 0x29, 0x25, 0x2b, 0x2a, 0x25,
			/* [0x0220] */ 0x20, 0x2d, 0x2e, 0x28, 0x27, 0x2a, 0x2b, 0x21, 0x2a, 0x23, 0x24, 0x2f, 0x2d, 0x24, 0x21, 0x22,
			/* [0x0230] */ 0x25, 0x2b, 0x28, 0x26, 0x2c, 0x27, 0x26, 0x2c, 0x29, 0x20, 0x23, 0x25, 0x22, 0x2e, 0x2f, 0x29,
			/* [0x0240] */ 0xef, 0xe3, 0xe1, 0xed, 0xe8, 0xe4, 0xee, 0xe7, 0xe6, 0xef, 0xeb, 0xe2, 0xe3, 0xe8, 0xe4, 0xee,
			/* [0x0250] */ 0xe9, 0xec, 0xe7, 0xe0, 0xe2, 0xe1, 0xed, 0xea, 0xec, 0xe6, 0xe0, 0xe9, 0xe5, 0xeb, 0xea, 0xe5,
			/* [0x0260] */ 0xe0, 0xed, 0xee, 0xe8, 0xe7, 0xea, 0xeb, 0xe1, 0xea, 0xe3, 0xe4, 0xef, 0xed, 0xe4, 0xe1, 0xe2,
			/* [0x0270] */ 0xe5, 0xeb, 0xe8, 0xe6, 0xec, 0xe7, 0xe6, 0xec, 0xe9, 0xe0, 0xe3, 0xe5, 0xe2, 0xee, 0xef, 0xe9,
			/* [0x0280] */ 0xff, 0xf3, 0xf1, 0xfd, 0xf8, 0xf4, 0xfe, 0xf7, 0xf6, 0xff, 0xfb, 0xf2, 0xf3, 0xf8, 0xf4, 0xfe,
			/* [0x0290] */ 0xf9, 0xfc, 0xf7, 0xf0, 0xf2, 0xf1, 0xfd, 0xfa, 0xfc, 0xf6, 0xf0, 0xf9, 0xf5, 0xfb, 0xfa, 0xf5,
			/* [0x02a0] */ 0xf0, 0xfd, 0xfe, 0xf8, 0xf7, 0xfa, 0xfb, 0xf1, 0xfa, 0xf3, 0xf4, 0xff, 0xfd, 0xf4, 0xf1, 0xf2,
			/* [0x02b0] */ 0xf5, 0xfb, 0xf8, 0xf6, 0xfc, 0xf7, 0xf6, 0xfc, 0xf9, 0xf0, 0xf3, 0xf5, 0xf2, 0xfe, 0xff, 0xf9,
			/* [0x02c0] */ 0x2f, 0x23, 0x21, 0x2d, 0x28, 0x24, 0x2e, 0x27, 0x26, 0x2f, 0x2b, 0x22, 0x23, 0x28, 0x24, 0x2e,
			/* [0x02d0] */ 0x29, 0x2c, 0x27, 0x20, 0x22, 0x21, 0x2d, 0x2a, 0x2c, 0x26, 0x20, 0x29, 0x25, 0x2b, 0x2a, 0x25,
			/* [0x02e0] */ 0x20, 0x2d, 0x2e, 0x28, 0x27, 0x2a, 0x2b, 0x21, 0x2a, 0x23, 0x24, 0x2f, 0x2d, 0x24, 0x21, 0x22,
			/* [0x02f0] */ 0x25, 0x2b, 0x28, 0x26, 0x2c, 0x27, 0x26, 0x2c, 0x29, 0x20, 0x23, 0x25, 0x22, 0x2e, 0x2f, 0x29,
			/* [0x0300] */ 0xbf, 0xb3, 0xb1, 0xbd, 0xb8, 0xb4, 0xbe, 0xb7, 0xb6, 0xbf, 0xbb, 0xb2, 0xb3, 0xb8, 0xb4, 0xbe,
			/* [0x0310] */ 0xb9, 0xbc, 0xb7, 0xb0, 0xb2, 0xb1, 0xbd, 0xba, 0xbc, 0xb6, 0xb0, 0xb9, 0xb5, 0xbb, 0xba, 0xb5,
			/* [0x0320] */ 0xb0, 0xbd, 0xbe, 0xb8, 0xb7, 0xba, 0xbb, 0xb1, 0xba, 0xb3, 0xb4, 0xbf, 0xbd, 0xb4, 0xb1, 0xb2,
			/* [0x0330] */ 0xb5, 0xbb, 0xb8, 0xb6, 0xbc, 0xb7, 0xb6, 0xbc, 0xb9, 0xb0, 0xb3, 0xb5, 0xb2, 0xbe, 0xbf, 0xb9,
			/* [0x0340] */ 0xdf, 0xd3, 0xd1, 0xdd, 0xd8, 0xd4, 0xde, 0xd7, 0xd6, 0xdf, 0xdb, 0xd2, 0xd3, 0xd8, 0xd4, 0xde,
			/* [0x0350] */ 0xd9, 0xdc, 0xd7, 0xd0, 0xd2, 0xd1, 0xdd, 0xda, 0xdc, 0xd6, 0xd0, 0xd9, 0xd5, 0xdb, 0xda, 0xd5,
			/* [0x0360] */ 0xd0, 0xdd, 0xde, 0xd8, 0xd7, 0xda, 0xdb, 0xd1, 0xda, 0xd3, 0xd4, 0xdf, 0xdd, 0xd4, 0xd1, 0xd2,
			/* [0x0370] */ 0xd5, 0xdb, 0xd8, 0xd6, 0xdc, 0xd7, 0xd6, 0xdc, 0xd9, 0xd0, 0xd3, 0xd5, 0xd2, 0xde, 0xdf, 0xd9,
			/* [0x0380] */ 0x8f, 0x83, 0x81, 0x8d, 0x88, 0x84, 0x8e, 0x87, 0x86, 0x8f, 0x8b, 0x82, 0x83, 0x88, 0x84, 0x8e,
			/* [0x0390] */ 0x89, 0x8c, 0x87, 0x80, 0x82, 0x81, 0x8d, 0x8a, 0x8c, 0x86, 0x80, 0x89, 0x85, 0x8b, 0x8a, 0x85,
			/* [0x03a0] */ 0x80, 0x8d, 0x8e, 0x88, 0x87, 0x8a, 0x8b, 0x81, 0x8a, 0x83, 0x84, 0x8f, 0x8d, 0x84, 0x81, 0x82,
			/* [0x03b0] */ 0x85, 0x8b, 0x88, 0x86, 0x8c, 0x87, 0x86, 0x8c, 0x89, 0x80, 0x83, 0x85, 0x82, 0x8e, 0x8f, 0x89,
			/* [0x03c0] */ 0x1f, 0x13, 0x11, 0x1d, 0x18, 0x14, 0x1e, 0x17, 0x16, 0x1f, 0x1b, 0x12, 0x13, 0x18, 0x14, 0x1e,
			/* [0x03d0] */ 0x19, 0x1c, 0x17, 0x10, 0x12, 0x11, 0x1d, 0x1a, 0x1c, 0x16, 0x10, 0x19, 0x15, 0x1b, 0x1a, 0x15,
			/* [0x03e0] */ 0x10, 0x1d, 0x1e, 0x18, 0x17, 0x1a, 0x1b, 0x11, 0x1a, 0x13, 0x14, 0x1f, 0x1d, 0x14, 0x11, 0x12,
			/* [0x03f0] */ 0x15, 0x1b, 0x18, 0x16, 0x1c, 0x17, 0x16, 0x1c, 0x19, 0x10, 0x13, 0x15, 0x12, 0x1e, 0x1f, 0x19,
			/* [0x0400] */ 0x3f, 0x33, 0x31, 0x3d, 0x38, 0x34, 0x3e, 0x37, 0x36, 0x3f, 0x3b, 0x32, 0x33, 0x38, 0x34, 0x3e,
			/* [0x0410] */ 0x39, 0x3c, 0x37, 0x30, 0x32, 0x31, 0x3d, 0x3a, 0x3c, 0x36, 0x30, 0x39, 0x35, 0x3b, 0x3a, 0x35,
			/* [0x0420] */ 0x30, 0x3d, 0x3e, 0x38, 0x37, 0x3a, 0x3b, 0x31, 0x3a, 0x33, 0x34, 0x3f, 0x3d, 0x34, 0x31, 0x32,
			/* [0x0430] */ 0x35, 0x3b, 0x38, 0x36, 0x3c, 0x37, 0x36, 0x3c, 0x39, 0x30, 0x33, 0x35, 0x32, 0x3e, 0x3f, 0x39,
			/* [0x0440] */ 0xaf, 0xa3, 0xa1, 0xad, 0xa8, 0xa4, 0xae, 0xa7, 0xa6, 0xaf, 0xab, 0xa2, 0xa3, 0xa8, 0xa4, 0xae,
			/* [0x0450] */ 0xa9, 0xac, 0xa7, 0xa0, 0xa2, 0xa1, 0xad, 0xaa, 0xac, 0xa6, 0xa0, 0xa9, 0xa5, 0xab, 0xaa, 0xa5,
			/* [0x0460] */ 0xa0, 0xad, 0xae, 0xa8, 0xa7, 0xaa, 0xab, 0xa1, 0xaa, 0xa3, 0xa4, 0xaf, 0xad, 0xa4, 0xa1, 0xa2,
			/* [0x0470] */ 0xa5, 0xab, 0xa8, 0xa6, 0xac, 0xa7, 0xa6, 0xac, 0xa9, 0xa0, 0xa3, 0xa5, 0xa2, 0xae, 0xaf, 0xa9,
			/* [0x0480] */ 0xaf, 0xa3, 0xa1, 0xad, 0xa8, 0xa4, 0xae, 0xa7, 0xa6, 0xaf, 0xab, 0xa2, 0xa3, 0xa8, 0xa4, 0xae,
			/* [0x0490] */ 0xa9, 0xac, 0xa7, 0xa0, 0xa2, 0xa1, 0xad, 0xaa, 0xac, 0xa6, 0xa0, 0xa9, 0xa5, 0xab, 0xaa, 0xa5,
			/* [0x04a0] */ 0xa0, 0xad, 0xae, 0xa8, 0xa7, 0xaa, 0xab, 0xa1, 0xaa, 0xa3, 0xa4, 0xaf, 0xad, 0xa4, 0xa1, 0xa2,
			/* [0x04b0] */ 0xa5, 0xab, 0xa8, 0xa6, 0xac, 0xa7, 0xa6, 0xac, 0xa9, 0xa0, 0xa3, 0xa5, 0xa2, 0xae, 0xaf, 0xa9,
			/* [0x04c0] */ 0x6f, 0x63, 0x61, 0x6d, 0x68, 0x64, 0x6e, 0x67, 0x66, 0x6f, 0x6b, 0x62, 0x63, 0x68, 0x64, 0x6e,
			/* [0x04d0] */ 0x69, 0x6c, 0x67, 0x60, 0x62, 0x61, 0x6d, 0x6a, 0x6c, 0x66, 0x60, 0x69, 0x65, 0x6b, 0x6a, 0x65,
			/* [0x04e0] */ 0x60, 0x6d, 0x6e, 0x68, 0x67, 0x6a, 0x6b, 0x61, 0x6a, 0x63, 0x64, 0x6f, 0x6d, 0x64, 0x61, 0x62,
			/* [0x04f0] */ 0x65, 0x6b, 0x68, 0x66, 0x6c, 0x67, 0x66, 0x6c, 0x69, 0x60, 0x63, 0x65, 0x62, 0x6e, 0x6f, 0x69,
			/* [0x0500] */ 0x6f, 0x63, 0x61, 0x6d, 0x68, 0x64, 0x6e, 0x67, 0x66, 0x6f, 0x6b, 0x62, 0x63, 0x68, 0x64, 0x6e,
			/* [0x0510] */ 0x69, 0x6c, 0x67, 0x60, 0x62, 0x61, 0x6d, 0x6a, 0x6c, 0x66, 0x60, 0x69, 0x65, 0x6b, 0x6a, 0x65,
			/* [0x0520] */ 0x60, 0x6d, 0x6e, 0x68, 0x67, 0x6a, 0x6b, 0x61, 0x6a, 0x63, 0x64, 0x6f, 0x6d, 0x64, 0x61, 0x62,
			/* [0x0530] */ 0x65, 0x6b, 0x68, 0x66, 0x6c, 0x67, 0x66, 0x6c, 0x69, 0x60, 0x63, 0x65, 0x62, 0x6e, 0x6f, 0x69,
			/* [0x0540] */ 0xcf, 0xc3, 0xc1, 0xcd, 0xc8, 0xc4, 0xce, 0xc7, 0xc6, 0xcf, 0xcb, 0xc2, 0xc3, 0xc8, 0xc4, 0xce,
			/* [0x0550] */ 0xc9, 0xcc, 0xc7, 0xc0, 0xc2, 0xc1, 0xcd, 0xca, 0xcc, 0xc6, 0xc0, 0xc9, 0xc5, 0xcb, 0xca, 0xc5,
			/* [0x0560] */ 0xc0, 0xcd, 0xce, 0xc8, 0xc7, 0xca, 0xcb, 0xc1, 0xca, 0xc3, 0xc4, 0xcf, 0xcd, 0xc4, 0xc1, 0xc2,
			/* [0x0570] */ 0xc5, 0xcb, 0xc8, 0xc6, 0xcc, 0xc7, 0xc6, 0xcc, 0xc9, 0xc0, 0xc3, 0xc5, 0xc2, 0xce, 0xcf, 0xc9,
			/* [0x0580] */ 0xcf, 0xc3, 0xc1, 0xcd, 0xc8, 0xc4, 0xce, 0xc7, 0xc6, 0xcf, 0xcb, 0xc2, 0xc3, 0xc8, 0xc4, 0xce,
			/* [0x0590] */ 0xc9, 0xcc, 0xc7, 0xc0, 0xc2, 0xc1, 0xcd, 0xca, 0xcc, 0xc6, 0xc0, 0xc9, 0xc5, 0xcb, 0xca, 0xc5,
			/* [0x05a0] */ 0xc0, 0xcd, 0xce, 0xc8, 0xc7, 0xca, 0xcb, 0xc1, 0xca, 0xc3, 0xc4, 0xcf, 0xcd, 0xc4, 0xc1, 0xc2,
			/* [0x05b0] */ 0xc5, 0xcb, 0xc8, 0xc6, 0xcc, 0xc7, 0xc6, 0xcc, 0xc9, 0xc0, 0xc3, 0xc5, 0xc2, 0xce, 0xcf, 0xc9,
			/* [0x05c0] */ 0xbf, 0xb3, 0xb1, 0xbd, 0xb8, 0xb4, 0xbe, 0xb7, 0xb6, 0xbf, 0xbb, 0xb2, 0xb3, 0xb8, 0xb4, 0xbe,
			/* [0x05d0] */ 0xb9, 0xbc, 0xb7, 0xb0, 0xb2, 0xb1, 0xbd, 0xba, 0xbc, 0xb6, 0xb0, 0xb9, 0xb5, 0xbb, 0xba, 0xb5,
			/* [0x05e0] */ 0xb0, 0xbd, 0xbe, 0xb8, 0xb7, 0xba, 0xbb, 0xb1, 0xba, 0xb3, 0xb4, 0xbf, 0xbd, 0xb4, 0xb1, 0xb2,
			/* [0x05f0] */ 0xb5, 0xbb, 0xb8, 0xb6, 0xbc, 0xb7, 0xb6, 0xbc, 0xb9, 0xb0, 0xb3, 0xb5, 0xb2, 0xbe, 0xbf, 0xb9,
			/* [0x0600] */ 0x5f, 0x53, 0x51, 0x5d, 0x58, 0x54, 0x5e, 0x57, 0x56, 0x5f, 0x5b, 0x52, 0x53, 0x58, 0x54, 0x5e,
			/* [0x0610] */ 0x59, 0x5c, 0x57, 0x50, 0x52, 0x51, 0x5d, 0x5a, 0x5c, 0x56, 0x50, 0x59, 0x55, 0x5b, 0x5a, 0x55,
			/* [0x0620] */ 0x50, 0x5d, 0x5e, 0x58, 0x57, 0x5a, 0x5b, 0x51, 0x5a, 0x53, 0x54, 0x5f, 0x5d, 0x54, 0x51, 0x52,
			/* [0x0630] */ 0x55, 0x5b, 0x58, 0x56, 0x5c, 0x57, 0x56, 0x5c, 0x59, 0x50, 0x53, 0x55, 0x52, 0x5e, 0x5f, 0x59,
			/* [0x0640] */ 0x9f, 0x93, 0x91, 0x9d, 0x98, 0x94, 0x9e, 0x97, 0x96, 0x9f, 0x9b, 0x92, 0x93, 0x98, 0x94, 0x9e,
			/* [0x0650] */ 0x99, 0x9c, 0x97, 0x90, 0x92, 0x91, 0x9d, 0x9a, 0x9c, 0x96, 0x90, 0x99, 0x95, 0x9b, 0x9a, 0x95,
			/* [0x0660] */ 0x90, 0x9d, 0x9e, 0x98, 0x97, 0x9a, 0x9b, 0x91, 0x9a, 0x93, 0x94, 0x9f, 0x9d, 0x94, 0x91, 0x92,
			/* [0x0670] */ 0x95, 0x9b, 0x98, 0x96, 0x9c, 0x97, 0x96, 0x9c, 0x99, 0x90, 0x93, 0x95, 0x92, 0x9e, 0x9f, 0x99,
			/* [0x0680] */ 0x9f, 0x93, 0x91, 0x9d, 0x98, 0x94, 0x9e, 0x97, 0x96, 0x9f, 0x9b, 0x92, 0x93, 0x98, 0x94, 0x9e,
			/* [0x0690] */ 0x99, 0x9c, 0x97, 0x90, 0x92, 0x91, 0x9d, 0x9a, 0x9c, 0x96, 0x90, 0x99, 0x95, 0x9b, 0x9a, 0x95,
			/* [0x06a0] */ 0x90, 0x9d, 0x9e, 0x98, 0x97, 0x9a, 0x9b, 0x91, 0x9a, 0x93, 0x94, 0x9f, 0x9d, 0x94, 0x91, 0x92,
			/* [0x06b0] */ 0x95, 0x9b, 0x98, 0x96, 0x9c, 0x97, 0x96, 0x9c, 0x99, 0x90, 0x93, 0x95, 0x92, 0x9e, 0x9f, 0x99,
			/* [0x06c0] */ 0x5f, 0x53, 0x51, 0x5d, 0x58, 0x54, 0x5e, 0x57, 0x56, 0x5f, 0x5b, 0x52, 0x53, 0x58, 0x54, 0x5e,
			/* [0x06d0] */ 0x59, 0x5c, 0x57, 0x50, 0x52, 0x51, 0x5d, 0x5a, 0x5c, 0x56, 0x50, 0x59, 0x55, 0x5b, 0x5a, 0x55,
			/* [0x06e0] */ 0x50, 0x5d, 0x5e, 0x58, 0x57, 0x5a, 0x5b, 0x51, 0x5a, 0x53, 0x54, 0x5f, 0x5d, 0x54, 0x51, 0x52,
			/* [0x06f0] */ 0x55, 0x5b, 0x58, 0x56, 0x5c, 0x57, 0x56, 0x5c, 0x59, 0x50, 0x53, 0x55, 0x52, 0x5e, 0x5f, 0x59,
			/* [0x0700] */ 0x0f, 0x03, 0x01, 0x0d, 0x08, 0x04, 0x0e, 0x07, 0x06, 0x0f, 0x0b, 0x02, 0x03, 0x08, 0x04, 0x0e,
			/* [0x0710] */ 0x09, 0x0c, 0x07, 0x00, 0x02, 0x01, 0x0d, 0x0a, 0x0c, 0x06, 0x00, 0x09, 0x05, 0x0b, 0x0a, 0x05,
			/* [0x0720] */ 0x00, 0x0d, 0x0e, 0x08, 0x07, 0x0a, 0x0b, 0x01, 0x0a, 0x03, 0x04, 0x0f, 0x0d, 0x04, 0x01, 0x02,
			/* [0x0730] */ 0x05, 0x0b, 0x08, 0x06, 0x0c, 0x07, 0x06, 0x0c, 0x09, 0x00, 0x03, 0x05, 0x02, 0x0e, 0x0f, 0x09,
			/* [0x0740] */ 0x3f, 0x33, 0x31, 0x3d, 0x38, 0x34, 0x3e, 0x37, 0x36, 0x3f, 0x3b, 0x32, 0x33, 0x38, 0x34, 0x3e,
			/* [0x0750] */ 0x39, 0x3c, 0x37, 0x30, 0x32, 0x31, 0x3d, 0x3a, 0x3c, 0x36, 0x30, 0x39, 0x35, 0x3b, 0x3a, 0x35,
			/* [0x0760] */ 0x30, 0x3d, 0x3e, 0x38, 0x37, 0x3a, 0x3b, 0x31, 0x3a, 0x33, 0x34, 0x3f, 0x3d, 0x34, 0x31, 0x32,
			/* [0x0770] */ 0x35, 0x3b, 0x38, 0x36, 0x3c, 0x37, 0x36, 0x3c, 0x39, 0x30, 0x33, 0x35, 0x32, 0x3e, 0x3f, 0x39,
			/* [0x0780] */ 0x7f, 0x73, 0x71, 0x7d, 0x78, 0x74, 0x7e, 0x77, 0x76, 0x7f, 0x7b, 0x72, 0x73, 0x78, 0x74, 0x7e,
			/* [0x0790] */ 0x79, 0x7c, 0x77, 0x70, 0x72, 0x71, 0x7d, 0x7a, 0x7c, 0x76, 0x70, 0x79, 0x75, 0x7b, 0x7a, 0x75,
			/* [0x07a0] */ 0x70, 0x7d, 0x7e, 0x78, 0x77, 0x7a, 0x7b, 0x71, 0x7a, 0x73, 0x74, 0x7f, 0x7d, 0x74, 0x71, 0x72,
			/* [0x07b0] */ 0x75, 0x7b, 0x78, 0x76, 0x7c, 0x77, 0x76, 0x7c, 0x79, 0x70, 0x73, 0x75, 0x72, 0x7e, 0x7f, 0x79,
			/* [0x07c0] */ 0x8f, 0x83, 0x81, 0x8d, 0x88, 0x84, 0x8e, 0x87, 0x86, 0x8f, 0x8b, 0x82, 0x83, 0x88, 0x84, 0x8e,
			/* [0x07d0] */ 0x89, 0x8c, 0x87, 0x80, 0x82, 0x81, 0x8d, 0x8a, 0x8c, 0x86, 0x80, 0x89, 0x85, 0x8b, 0x8a, 0x85,
			/* [0x07e0] */ 0x80, 0x8d, 0x8e, 0x88, 0x87, 0x8a, 0x8b, 0x81, 0x8a, 0x83, 0x84, 0x8f, 0x8d, 0x84, 0x81, 0x82,
			/* [0x07f0] */ 0x85, 0x8b, 0x88, 0x86, 0x8c, 0x87, 0x86, 0x8c, 0x89, 0x80, 0x83, 0x85, 0x82, 0x8e, 0x8f, 0x89,
			/* [0x0800] */ 0x4f, 0x43, 0x41, 0x4d, 0x48, 0x44, 0x4e, 0x47, 0x46, 0x4f, 0x4b, 0x42, 0x43, 0x48, 0x44, 0x4e,
			/* [0x0810] */ 0x49, 0x4c, 0x47, 0x40, 0x42, 0x41, 0x4d, 0x4a, 0x4c, 0x46, 0x40, 0x49, 0x45, 0x4b, 0x4a, 0x45,
			/* [0x0820] */ 0x40, 0x4d, 0x4e, 0x48, 0x47, 0x4a, 0x4b, 0x41, 0x4a, 0x43, 0x44, 0x4f, 0x4d, 0x44, 0x41, 0x42,
			/* [0x0830] */ 0x45, 0x4b, 0x48, 0x46, 0x4c, 0x47, 0x46, 0x4c, 0x49, 0x40, 0x43, 0x45, 0x42, 0x4e, 0x4f, 0x49,
			/* [0x0840] */ 0xff, 0xf3, 0xf1, 0xfd, 0xf8, 0xf4, 0xfe, 0xf7, 0xf6, 0xff, 0xfb, 0xf2, 0xf3, 0xf8, 0xf4, 0xfe,
			/* [0x0850] */ 0xf9, 0xfc, 0xf7, 0xf0, 0xf2, 0xf1, 0xfd, 0xfa, 0xfc, 0xf6, 0xf0, 0xf9, 0xf5, 0xfb, 0xfa, 0xf5,
			/* [0x0860] */ 0xf0, 0xfd, 0xfe, 0xf8, 0xf7, 0xfa, 0xfb, 0xf1, 0xfa, 0xf3, 0xf4, 0xff, 0xfd, 0xf4, 0xf1, 0xf2,
			/* [0x0870] */ 0xf5, 0xfb, 0xf8, 0xf6, 0xfc, 0xf7, 0xf6, 0xfc, 0xf9, 0xf0, 0xf3, 0xf5, 0xf2, 0xfe, 0xff, 0xf9,
			/* [0x0880] */ 0x1f, 0x13, 0x11, 0x1d, 0x18, 0x14, 0x1e, 0x17, 0x16, 0x1f, 0x1b, 0x12, 0x13, 0x18, 0x14, 0x1e,
			/* [0x0890] */ 0x19, 0x1c, 0x17, 0x10, 0x12, 0x11, 0x1d, 0x1a, 0x1c, 0x16, 0x10, 0x19, 0x15, 0x1b, 0x1a, 0x15,
			/* [0x08a0] */ 0x10, 0x1d, 0x1e, 0x18, 0x17, 0x1a, 0x1b, 0x11, 0x1a, 0x13, 0x14, 0x1f, 0x1d, 0x14, 0x11, 0x12,
			/* [0x08b0] */ 0x15, 0x1b, 0x18, 0x16, 0x1c, 0x17, 0x16, 0x1c, 0x19, 0x10, 0x13, 0x15, 0x12, 0x1e, 0x1f, 0x19,
			/* [0x08c0] */ 0xcf, 0xc3, 0xc1, 0xcd, 0xc8, 0xc4, 0xce, 0xc7, 0xc6, 0xcf, 0xcb, 0xc2, 0xc3, 0xc8, 0xc4, 0xce,
			/* [0x08d0] */ 0xc9, 0xcc, 0xc7, 0xc0, 0xc2, 0xc1, 0xcd, 0xca, 0xcc, 0xc6, 0xc0, 0xc9, 0xc5, 0xcb, 0xca, 0xc5,
			/* [0x08e0] */ 0xc0, 0xcd, 0xce, 0xc8, 0xc7, 0xca, 0xcb, 0xc1, 0xca, 0xc3, 0xc4, 0xcf, 0xcd, 0xc4, 0xc1, 0xc2,
			/* [0x08f0] */ 0xc5, 0xcb, 0xc8, 0xc6, 0xcc, 0xc7, 0xc6, 0xcc, 0xc9, 0xc0, 0xc3, 0xc5, 0xc2, 0xce, 0xcf, 0xc9,
			/* [0x0900] */ 0xef, 0xe3, 0xe1, 0xed, 0xe8, 0xe4, 0xee, 0xe7, 0xe6, 0xef, 0xeb, 0xe2, 0xe3, 0xe8, 0xe4, 0xee,
			/* [0x0910] */ 0xe9, 0xec, 0xe7, 0xe0, 0xe2, 0xe1, 0xed, 0xea, 0xec, 0xe6, 0xe0, 0xe9, 0xe5, 0xeb, 0xea, 0xe5,
			/* [0x0920] */ 0xe0, 0xed, 0xee, 0xe8, 0xe7, 0xea, 0xeb, 0xe1, 0xea, 0xe3, 0xe4, 0xef, 0xed, 0xe4, 0xe1, 0xe2,
			/* [0x0930] */ 0xe5, 0xeb, 0xe8, 0xe6, 0xec, 0xe7, 0xe6, 0xec, 0xe9, 0xe0, 0xe3, 0xe5, 0xe2, 0xee, 0xef, 0xe9,
			/* [0x0940] */ 0x8f, 0x83, 0x81, 0x8d, 0x88, 0x84, 0x8e, 0x87, 0x86, 0x8f, 0x8b, 0x82, 0x83, 0x88, 0x84, 0x8e,
			/* [0x0950] */ 0x89, 0x8c, 0x87, 0x80, 0x82, 0x81, 0x8d, 0x8a, 0x8c, 0x86, 0x80, 0x89, 0x85, 0x8b, 0x8a, 0x85,
			/* [0x0960] */ 0x80, 0x8d, 0x8e, 0x88, 0x87, 0x8a, 0x8b, 0x81, 0x8a, 0x83, 0x84, 0x8f, 0x8d, 0x84, 0x81, 0x82,
			/* [0x0970] */ 0x85, 0x8b, 0x88, 0x86, 0x8c, 0x87, 0x86, 0x8c, 0x89, 0x80, 0x83, 0x85, 0x82, 0x8e, 0x8f, 0x89,
			/* [0x0980] */ 0x8f, 0x83, 0x81, 0x8d, 0x88, 0x84, 0x8e, 0x87, 0x86, 0x8f, 0x8b, 0x82, 0x83, 0x88, 0x84, 0x8e,
			/* [0x0990] */ 0x89, 0x8c, 0x87, 0x80, 0x82, 0x81, 0x8d, 0x8a, 0x8c, 0x86, 0x80, 0x89, 0x85, 0x8b, 0x8a, 0x85,
			/* [0x09a0] */ 0x80, 0x8d, 0x8e, 0x88, 0x87, 0x8a, 0x8b, 0x81, 0x8a, 0x83, 0x84, 0x8f, 0x8d, 0x84, 0x81, 0x82,
			/* [0x09b0] */ 0x85, 0x8b, 0x88, 0x86, 0x8c, 0x87, 0x86, 0x8c, 0x89, 0x80, 0x83, 0x85, 0x82, 0x8e, 0x8f, 0x89,
			/* [0x09c0] */ 0x2f, 0x23, 0x21, 0x2d, 0x28, 0x24, 0x2e, 0x27, 0x26, 0x2f, 0x2b, 0x22, 0x23, 0x28, 0x24, 0x2e,
			/* [0x09d0] */ 0x29, 0x2c, 0x27, 0x20, 0x22, 0x21, 0x2d, 0x2a, 0x2c, 0x26, 0x20, 0x29, 0x25, 0x2b, 0x2a, 0x25,
			/* [0x09e0] */ 0x20, 0x2d, 0x2e, 0x28, 0x27, 0x2a, 0x2b, 0x21, 0x2a, 0x23, 0x24, 0x2f, 0x2d, 0x24, 0x21, 0x22,
			/* [0x09f0] */ 0x25, 0x2b, 0x28, 0x26, 0x2c, 0x27, 0x26, 0x2c, 0x29, 0x20, 0x23, 0x25, 0x22, 0x2e, 0x2f, 0x29,
			/* [0x0a00] */ 0xdf, 0xd3, 0xd1, 0xdd, 0xd8, 0xd4, 0xde, 0xd7, 0xd6, 0xdf, 0xdb, 0xd2, 0xd3, 0xd8, 0xd4, 0xde,
			/* [0x0a10] */ 0xd9, 0xdc, 0xd7, 0xd0, 0xd2, 0xd1, 0xdd, 0xda, 0xdc, 0xd6, 0xd0, 0xd9, 0xd5, 0xdb, 0xda, 0xd5,
			/* [0x0a20] */ 0xd0, 0xdd, 0xde, 0xd8, 0xd7, 0xda, 0xdb, 0xd1, 0xda, 0xd3, 0xd4, 0xdf, 0xdd, 0xd4, 0xd1, 0xd2,
			/* [0x0a30] */ 0xd5, 0xdb, 0xd8, 0xd6, 0xdc, 0xd7, 0xd6, 0xdc, 0xd9, 0xd0, 0xd3, 0xd5, 0xd2, 0xde, 0xdf, 0xd9,
			/* [0x0a40] */ 0x4f, 0x43, 0x41, 0x4d, 0x48, 0x44, 0x4e, 0x47, 0x46, 0x4f, 0x4b, 0x42, 0x43, 0x48, 0x44, 0x4e,
			/* [0x0a50] */ 0x49, 0x4c, 0x47, 0x40, 0x42, 0x41, 0x4d, 0x4a, 0x4c, 0x46, 0x40, 0x49, 0x45, 0x4b, 0x4a, 0x45,
			/* [0x0a60] */ 0x40, 0x4d, 0x4e, 0x48, 0x47, 0x4a, 0x4b, 0x41, 0x4a, 0x43, 0x44, 0x4f, 0x4d, 0x44, 0x41, 0x42,
			/* [0x0a70] */ 0x45, 0x4b, 0x48, 0x46, 0x4c, 0x47, 0x46, 0x4c, 0x49, 0x40, 0x43, 0x45, 0x42, 0x4e, 0x4f, 0x49,
			/* [0x0a80] */ 0x6f, 0x63, 0x61, 0x6d, 0x68, 0x64, 0x6e, 0x67, 0x66, 0x6f, 0x6b, 0x62, 0x63, 0x68, 0x64, 0x6e,
			/* [0x0a90] */ 0x69, 0x6c, 0x67, 0x60, 0x62, 0x61, 0x6d, 0x6a, 0x6c, 0x66, 0x60, 0x69, 0x65, 0x6b, 0x6a, 0x65,
			/* [0x0aa0] */ 0x60, 0x6d, 0x6e, 0x68, 0x67, 0x6a, 0x6b, 0x61, 0x6a, 0x63, 0x64, 0x6f, 0x6d, 0x64, 0x61, 0x62,
			/* [0x0ab0] */ 0x65, 0x6b, 0x68, 0x66, 0x6c, 0x67, 0x66, 0x6c, 0x69, 0x60, 0x63, 0x65, 0x62, 0x6e, 0x6f, 0x69,
			/* [0x0ac0] */ 0x9f, 0x93, 0x91, 0x9d, 0x98, 0x94, 0x9e, 0x97, 0x96, 0x9f, 0x9b, 0x92, 0x93, 0x98, 0x94, 0x9e,
			/* [0x0ad0] */ 0x99, 0x9c, 0x97, 0x90, 0x92, 0x91, 0x9d, 0x9a, 0x9c, 0x96, 0x90, 0x99, 0x95, 0x9b, 0x9a, 0x95,
			/* [0x0ae0] */ 0x90, 0x9d, 0x9e, 0x98, 0x97, 0x9a, 0x9b, 0x91, 0x9a, 0x93, 0x94, 0x9f, 0x9d, 0x94, 0x91, 0x92,
			/* [0x0af0] */ 0x95, 0x9b, 0x98, 0x96, 0x9c, 0x97, 0x96, 0x9c, 0x99, 0x90, 0x93, 0x95, 0x92, 0x9e, 0x9f, 0x99,
			/* [0x0b00] */ 0x2f, 0x23, 0x21, 0x2d, 0x28, 0x24, 0x2e, 0x27, 0x26, 0x2f, 0x2b, 0x22, 0x23, 0x28, 0x24, 0x2e,
			/* [0x0b10] */ 0x29, 0x2c, 0x27, 0x20, 0x22, 0x21, 0x2d, 0x2a, 0x2c, 0x26, 0x20, 0x29, 0x25, 0x2b, 0x2a, 0x25,
			/* [0x0b20] */ 0x20, 0x2d, 0x2e, 0x28, 0x27, 0x2a, 0x2b, 0x21, 0x2a, 0x23, 0x24, 0x2f, 0x2d, 0x24, 0x21, 0x22,
			/* [0x0b30] */ 0x25, 0x2b, 0x28, 0x26, 0x2c, 0x27, 0x26, 0x2c, 0x29, 0x20, 0x23, 0x25, 0x22, 0x2e, 0x2f, 0x29,
			/* [0x0b40] */ 0x1f, 0x13, 0x11, 0x1d, 0x18, 0x14, 0x1e, 0x17, 0x16, 0x1f, 0x1b, 0x12, 0x13, 0x18, 0x14, 0x1e,
			/* [0x0b50] */ 0x19, 0x1c, 0x17, 0x10, 0x12, 0x11, 0x1d, 0x1a, 0x1c, 0x16, 0x10, 0x19, 0x15, 0x1b, 0x1a, 0x15,
			/* [0x0b60] */ 0x10, 0x1d, 0x1e, 0x18, 0x17, 0x1a, 0x1b, 0x11, 0x1a, 0x13, 0x14, 0x1f, 0x1d, 0x14, 0x11, 0x12,
			/* [0x0b70] */ 0x15, 0x1b, 0x18, 0x16, 0x1c, 0x17, 0x16, 0x1c, 0x19, 0x10, 0x13, 0x15, 0x12, 0x1e, 0x1f, 0x19,
			/* [0x0b80] */ 0xbf, 0xb3, 0xb1, 0xbd, 0xb8, 0xb4, 0xbe, 0xb7, 0xb6, 0xbf, 0xbb, 0xb2, 0xb3, 0xb8, 0xb4, 0xbe,
			/* [0x0b90] */ 0xb9, 0xbc, 0xb7, 0xb0, 0xb2, 0xb1, 0xbd, 0xba, 0xbc, 0xb6, 0xb0, 0xb9, 0xb5, 0xbb, 0xba, 0xb5,
			/* [0x0ba0] */ 0xb0, 0xbd, 0xbe, 0xb8, 0xb7, 0xba, 0xbb, 0xb1, 0xba, 0xb3, 0xb4, 0xbf, 0xbd, 0xb4, 0xb1, 0xb2,
			/* [0x0bb0] */ 0xb5, 0xbb, 0xb8, 0xb6, 0xbc, 0xb7, 0xb6, 0xbc, 0xb9, 0xb0, 0xb3, 0xb5, 0xb2, 0xbe, 0xbf, 0xb9,
			/* [0x0bc0] */ 0x7f, 0x73, 0x71, 0x7d, 0x78, 0x74, 0x7e, 0x77, 0x76, 0x7f, 0x7b, 0x72, 0x73, 0x78, 0x74, 0x7e,
			/* [0x0bd0] */ 0x79, 0x7c, 0x77, 0x70, 0x72, 0x71, 0x7d, 0x7a, 0x7c, 0x76, 0x70, 0x79, 0x75, 0x7b, 0x7a, 0x75,
			/* [0x0be0] */ 0x70, 0x7d, 0x7e, 0x78, 0x77, 0x7a, 0x7b, 0x71, 0x7a, 0x73, 0x74, 0x7f, 0x7d, 0x74, 0x71, 0x72,
			/* [0x0bf0] */ 0x75, 0x7b, 0x78, 0x76, 0x7c, 0x77, 0x76, 0x7c, 0x79, 0x70, 0x73, 0x75, 0x72, 0x7e, 0x7f, 0x79,
			/* [0x0c00] */ 0xff, 0xf3, 0xf1, 0xfd, 0xf8, 0xf4, 0xfe, 0xf7, 0xf6, 0xff, 0xfb, 0xf2, 0xf3, 0xf8, 0xf4, 0xfe,
			/* [0x0c10] */ 0xf9, 0xfc, 0xf7, 0xf0, 0xf2, 0xf1, 0xfd, 0xfa, 0xfc, 0xf6, 0xf0, 0xf9, 0xf5, 0xfb, 0xfa, 0xf5,
			/* [0x0c20] */ 0xf0, 0xfd, 0xfe, 0xf8, 0xf7, 0xfa, 0xfb, 0xf1, 0xfa, 0xf3, 0xf4, 0xff, 0xfd, 0xf4, 0xf1, 0xf2,
			/* [0x0c30] */ 0xf5, 0xfb, 0xf8, 0xf6, 0xfc, 0xf7, 0xf6, 0xfc, 0xf9, 0xf0, 0xf3, 0xf5, 0xf2, 0xfe, 0xff, 0xf9,
			/* [0x0c40] */ 0x5f, 0x53, 0x51, 0x5d, 0x58, 0x54, 0x5e, 0x57, 0x56, 0x5f, 0x5b, 0x52, 0x53, 0x58, 0x54, 0x5e,
			/* [0x0c50] */ 0x59, 0x5c, 0x57, 0x50, 0x52, 0x51, 0x5d, 0x5a, 0x5c, 0x56, 0x50, 0x59, 0x55, 0x5b, 0x5a, 0x55,
			/* [0x0c60] */ 0x50, 0x5d, 0x5e, 0x58, 0x57, 0x5a, 0x5b, 0x51, 0x5a, 0x53, 0x54, 0x5f, 0x5d, 0x54, 0x51, 0x52,
			/* [0x0c70] */ 0x55, 0x5b, 0x58, 0x56, 0x5c, 0x57, 0x56, 0x5c, 0x59, 0x50, 0x53, 0x55, 0x52, 0x5e, 0x5f, 0x59,
			/* [0x0c80] */ 0xcf, 0xc3, 0xc1, 0xcd, 0xc8, 0xc4, 0xce, 0xc7, 0xc6, 0xcf, 0xcb, 0xc2, 0xc3, 0xc8, 0xc4, 0xce,
			/* [0x0c90] */ 0xc9, 0xcc, 0xc7, 0xc0, 0xc2, 0xc1, 0xcd, 0xca, 0xcc, 0xc6, 0xc0, 0xc9, 0xc5, 0xcb, 0xca, 0xc5,
			/* [0x0ca0] */ 0xc0, 0xcd, 0xce, 0xc8, 0xc7, 0xca, 0xcb, 0xc1, 0xca, 0xc3, 0xc4, 0xcf, 0xcd, 0xc4, 0xc1, 0xc2,
			/* [0x0cb0] */ 0xc5, 0xcb, 0xc8, 0xc6, 0xcc, 0xc7, 0xc6, 0xcc, 0xc9, 0xc0, 0xc3, 0xc5, 0xc2, 0xce, 0xcf, 0xc9,
			/* [0x0cc0] */ 0xbf, 0xb3, 0xb1, 0xbd, 0xb8, 0xb4, 0xbe, 0xb7, 0xb6, 0xbf, 0xbb, 0xb2, 0xb3, 0xb8, 0xb4, 0xbe,
			/* [0x0cd0] */ 0xb9, 0xbc, 0xb7, 0xb0, 0xb2, 0xb1, 0xbd, 0xba, 0xbc, 0xb6, 0xb0, 0xb9, 0xb5, 0xbb, 0xba, 0xb5,
			/* [0x0ce0] */ 0xb0, 0xbd, 0xbe, 0xb8, 0xb7, 0xba, 0xbb, 0xb1, 0xba, 0xb3, 0xb4, 0xbf, 0xbd, 0xb4, 0xb1, 0xb2,
			/* [0x0cf0] */ 0xb5, 0xbb, 0xb8, 0xb6, 0xbc, 0xb7, 0xb6, 0xbc, 0xb9, 0xb0, 0xb3, 0xb5, 0xb2, 0xbe, 0xbf, 0xb9,
			/* [0x0d00] */ 0x9f, 0x93, 0x91, 0x9d, 0x98, 0x94, 0x9e, 0x97, 0x96, 0x9f, 0x9b, 0x92, 0x93, 0x98, 0x94, 0x9e,
			/* [0x0d10] */ 0x99, 0x9c, 0x97, 0x90, 0x92, 0x91, 0x9d, 0x9a, 0x9c, 0x96, 0x90, 0x99, 0x95, 0x9b, 0x9a, 0x95,
			/* [0x0d20] */ 0x90, 0x9d, 0x9e, 0x98, 0x97, 0x9a, 0x9b, 0x91, 0x9a, 0x93, 0x94, 0x9f, 0x9d, 0x94, 0x91, 0x92,
			/* [0x0d30] */ 0x95, 0x9b, 0x98, 0x96, 0x9c, 0x97, 0x96, 0x9c, 0x99, 0x90, 0x93, 0x95, 0x92, 0x9e, 0x9f, 0x99,
			/* [0x0d40] */ 0x3f, 0x33, 0x31, 0x3d, 0x38, 0x34, 0x3e, 0x37, 0x36, 0x3f, 0x3b, 0x32, 0x33, 0x38, 0x34, 0x3e,
			/* [0x0d50] */ 0x39, 0x3c, 0x37, 0x30, 0x32, 0x31, 0x3d, 0x3a, 0x3c, 0x36, 0x30, 0x39, 0x35, 0x3b, 0x3a, 0x35,
			/* [0x0d60] */ 0x30, 0x3d, 0x3e, 0x38, 0x37, 0x3a, 0x3b, 0x31, 0x3a, 0x33, 0x34, 0x3f, 0x3d, 0x34, 0x31, 0x32,
			/* [0x0d70] */ 0x35, 0x3b, 0x38, 0x36, 0x3c, 0x37, 0x36, 0x3c, 0x39, 0x30, 0x33, 0x35, 0x32, 0x3e, 0x3f, 0x39,
			/* [0x0d80] */ 0x7f, 0x73, 0x71, 0x7d, 0x78, 0x74, 0x7e, 0x77, 0x76, 0x7f, 0x7b, 0x72, 0x73, 0x78, 0x74, 0x7e,
			/* [0x0d90] */ 0x79, 0x7c, 0x77, 0x70, 0x72, 0x71, 0x7d, 0x7a, 0x7c, 0x76, 0x70, 0x79, 0x75, 0x7b, 0x7a, 0x75,
			/* [0x0da0] */ 0x70, 0x7d, 0x7e, 0x78, 0x77, 0x7a, 0x7b, 0x71, 0x7a, 0x73, 0x74, 0x7f, 0x7d, 0x74, 0x71, 0x72,
			/* [0x0db0] */ 0x75, 0x7b, 0x78, 0x76, 0x7c, 0x77, 0x76, 0x7c, 0x79, 0x70, 0x73, 0x75, 0x72, 0x7e, 0x7f, 0x79,
			/* [0x0dc0] */ 0xef, 0xe3, 0xe1, 0xed, 0xe8, 0xe4, 0xee, 0xe7, 0xe6, 0xef, 0xeb, 0xe2, 0xe3, 0xe8, 0xe4, 0xee,
			/* [0x0dd0] */ 0xe9, 0xec, 0xe7, 0xe0, 0xe2, 0xe1, 0xed, 0xea, 0xec, 0xe6, 0xe0, 0xe9, 0xe5, 0xeb, 0xea, 0xe5,
			/* [0x0de0] */ 0xe0, 0xed, 0xee, 0xe8, 0xe7, 0xea, 0xeb, 0xe1, 0xea, 0xe3, 0xe4, 0xef, 0xed, 0xe4, 0xe1, 0xe2,
			/* [0x0df0] */ 0xe5, 0xeb, 0xe8, 0xe6, 0xec, 0xe7, 0xe6, 0xec, 0xe9, 0xe0, 0xe3, 0xe5, 0xe2, 0xee, 0xef, 0xe9,
			/* [0x0e00] */ 0x3f, 0x33, 0x31, 0x3d, 0x38, 0x34, 0x3e, 0x37, 0x36, 0x3f, 0x3b, 0x32, 0x33, 0x38, 0x34, 0x3e,
			/* [0x0e10] */ 0x39, 0x3c, 0x37, 0x30, 0x32, 0x31, 0x3d, 0x3a, 0x3c, 0x36, 0x30, 0x39, 0x35, 0x3b, 0x3a, 0x35,
			/* [0x0e20] */ 0x30, 0x3d, 0x3e, 0x38, 0x37, 0x3a, 0x3b, 0x31, 0x3a, 0x33, 0x34, 0x3f, 0x3d, 0x34, 0x31, 0x32,
			/* [0x0e30] */ 0x35, 0x3b, 0x38, 0x36, 0x3c, 0x37, 0x36, 0x3c, 0x39, 0x30, 0x33, 0x35, 0x32, 0x3e, 0x3f, 0x39,
			/* [0x0e40] */ 0xaf, 0xa3, 0xa1, 0xad, 0xa8, 0xa4, 0xae, 0xa7, 0xa6, 0xaf, 0xab, 0xa2, 0xa3, 0xa8, 0xa4, 0xae,
			/* [0x0e50] */ 0xa9, 0xac, 0xa7, 0xa0, 0xa2, 0xa1, 0xad, 0xaa, 0xac, 0xa6, 0xa0, 0xa9, 0xa5, 0xab, 0xaa, 0xa5,
			/* [0x0e60] */ 0xa0, 0xad, 0xae, 0xa8, 0xa7, 0xaa, 0xab, 0xa1, 0xaa, 0xa3, 0xa4, 0xaf, 0xad, 0xa4, 0xa1, 0xa2,
			/* [0x0e70] */ 0xa5, 0xab, 0xa8, 0xa6, 0xac, 0xa7, 0xa6, 0xac, 0xa9, 0xa0, 0xa3, 0xa5, 0xa2, 0xae, 0xaf, 0xa9,
			/* [0x0e80] */ 0xaf, 0xa3, 0xa1, 0xad, 0xa8, 0xa4, 0xae, 0xa7, 0xa6, 0xaf, 0xab, 0xa2, 0xa3, 0xa8, 0xa4, 0xae,
			/* [0x0e90] */ 0xa9, 0xac, 0xa7, 0xa0, 0xa2, 0xa1, 0xad, 0xaa, 0xac, 0xa6, 0xa0, 0xa9, 0xa5, 0xab, 0xaa, 0xa5,
			/* [0x0ea0] */ 0xa0, 0xad, 0xae, 0xa8, 0xa7, 0xaa, 0xab, 0xa1, 0xaa, 0xa3, 0xa4, 0xaf, 0xad, 0xa4, 0xa1, 0xa2,
			/* [0x0eb0] */ 0xa5, 0xab, 0xa8, 0xa6, 0xac, 0xa7, 0xa6, 0xac, 0xa9, 0xa0, 0xa3, 0xa5, 0xa2, 0xae, 0xaf, 0xa9,
			/* [0x0ec0] */ 0x0f, 0x03, 0x01, 0x0d, 0x08, 0x04, 0x0e, 0x07, 0x06, 0x0f, 0x0b, 0x02, 0x03, 0x08, 0x04, 0x0e,
			/* [0x0ed0] */ 0x09, 0x0c, 0x07, 0x00, 0x02, 0x01, 0x0d, 0x0a, 0x0c, 0x06, 0x00, 0x09, 0x05, 0x0b, 0x0a, 0x05,
			/* [0x0ee0] */ 0x00, 0x0d, 0x0e, 0x08, 0x07, 0x0a, 0x0b, 0x01, 0x0a, 0x03, 0x04, 0x0f, 0x0d, 0x04, 0x01, 0x02,
			/* [0x0ef0] */ 0x05, 0x0b, 0x08, 0x06, 0x0c, 0x07, 0x06, 0x0c, 0x09, 0x00, 0x03, 0x05, 0x02, 0x0e, 0x0f, 0x09,
			/* [0x0f00] */ 0x5f, 0x53, 0x51, 0x5d, 0x58, 0x54, 0x5e, 0x57, 0x56, 0x5f, 0x5b, 0x52, 0x53, 0x58, 0x54, 0x5e,
			/* [0x0f10] */ 0x59, 0x5c, 0x57, 0x50, 0x52, 0x51, 0x5d, 0x5a, 0x5c, 0x56, 0x50, 0x59, 0x55, 0x5b, 0x5a, 0x55,
			/* [0x0f20] */ 0x50, 0x5d, 0x5e, 0x58, 0x57, 0x5a, 0x5b, 0x51, 0x5a, 0x53, 0x54, 0x5f, 0x5d, 0x54, 0x51, 0x52,
			/* [0x0f30] */ 0x55, 0x5b, 0x58, 0x56, 0x5c, 0x57, 0x56, 0x5c, 0x59, 0x50, 0x53, 0x55, 0x52, 0x5e, 0x5f, 0x59,
			/* [0x0f40] */ 0x6f, 0x63, 0x61, 0x6d, 0x68, 0x64, 0x6e, 0x67, 0x66, 0x6f, 0x6b, 0x62, 0x63, 0x68, 0x64, 0x6e,
			/* [0x0f50] */ 0x69, 0x6c, 0x67, 0x60, 0x62, 0x61, 0x6d, 0x6a, 0x6c, 0x66, 0x60, 0x69, 0x65, 0x6b, 0x6a, 0x65,
			/* [0x0f60] */ 0x60, 0x6d, 0x6e, 0x68, 0x67, 0x6a, 0x6b, 0x61, 0x6a, 0x63, 0x64, 0x6f, 0x6d, 0x64, 0x61, 0x62,
			/* [0x0f70] */ 0x65, 0x6b, 0x68, 0x66, 0x6c, 0x67, 0x66, 0x6c, 0x69, 0x60, 0x63, 0x65, 0x62, 0x6e, 0x6f, 0x69,
			/* [0x0f80] */ 0x0f, 0x03, 0x01, 0x0d, 0x08, 0x04, 0x0e, 0x07, 0x06, 0x0f, 0x0b, 0x02, 0x03, 0x08, 0x04, 0x0e,
			/* [0x0f90] */ 0x09, 0x0c, 0x07, 0x00, 0x02, 0x01, 0x0d, 0x0a, 0x0c, 0x06, 0x00, 0x09, 0x05, 0x0b, 0x0a, 0x05,
			/* [0x0fa0] */ 0x00, 0x0d, 0x0e, 0x08, 0x07, 0x0a, 0x0b, 0x01, 0x0a, 0x03, 0x04, 0x0f, 0x0d, 0x04, 0x01, 0x02,
			/* [0x0fb0] */ 0x05, 0x0b, 0x08, 0x06, 0x0c, 0x07, 0x06, 0x0c, 0x09, 0x00, 0x03, 0x05, 0x02, 0x0e, 0x0f, 0x09,
			/* [0x0fc0] */ 0xdf, 0xd3, 0xd1, 0xdd, 0xd8, 0xd4, 0xde, 0xd7, 0xd6, 0xdf, 0xdb, 0xd2, 0xd3, 0xd8, 0xd4, 0xde,
			/* [0x0fd0] */ 0xd9, 0xdc, 0xd7, 0xd0, 0xd2, 0xd1, 0xdd, 0xda, 0xdc, 0xd6, 0xd0, 0xd9, 0xd5, 0xdb, 0xda, 0xd5,
			/* [0x0fe0] */ 0xd0, 0xdd, 0xde, 0xd8, 0xd7, 0xda, 0xdb, 0xd1, 0xda, 0xd3, 0xd4, 0xdf, 0xdd, 0xd4, 0xd1, 0xd2,
			/* [0x0ff0] */ 0xd5, 0xdb, 0xd8, 0xd6, 0xdc, 0xd7, 0xd6, 0xdc, 0xd9, 0xd0, 0xd3, 0xd5, 0xd2, 0xde, 0xdf, 0xd9,
			/* [0x1000] */ 0xa7, 0xad, 0xad, 0xa8, 0xae, 0xab, 0xa3, 0xa5, 0xa0, 0xa6, 0xa6, 0xaf, 0xa9, 0xa0, 0xaa, 0xa3,
			/* [0x1010] */ 0xa1, 0xa4, 0xa2, 0xa7, 0xa8, 0xa2, 0xa5, 0xac, 0xab, 0xa1, 0xac, 0xaa, 0xa4, 0xae, 0xaf, 0xa9,
			/* [0x1020] */ 0xaa, 0xa3, 0xa6, 0xaf, 0xa9, 0xa0, 0xa0, 0xa6, 0xac, 0xaa, 0xab, 0xa1, 0xa7, 0xad, 0xad, 0xa8,
			/* [0x1030] */ 0xaf, 0xa9, 0xa1, 0xa4, 0xa3, 0xa5, 0xae, 0xab, 0xa5, 0xac, 0xa2, 0xa7, 0xa8, 0xa2, 0xa4, 0xae,
			/* [0x1040] */ 0xd7, 0xdd, 0xdd, 0xd8, 0xde, 0xdb, 0xd3, 0xd5, 0xd0, 0xd6, 0xd6, 0xdf, 0xd9, 0xd0, 0xda, 0xd3,
			/* [0x1050] */ 0xd1, 0xd4, 0xd2, 0xd7, 0xd8, 0xd2, 0xd5, 0xdc, 0xdb, 0xd1, 0xdc, 0xda, 0xd4, 0xde, 0xdf, 0xd9,
			/* [0x1060] */ 0xda, 0xd3, 0xd6, 0xdf, 0xd9, 0xd0, 0xd0, 0xd6, 0xdc, 0xda, 0xdb, 0xd1, 0xd7, 0xdd, 0xdd, 0xd8,
			/* [0x1070] */ 0xdf, 0xd9, 0xd1, 0xd4, 0xd3, 0xd5, 0xde, 0xdb, 0xd5, 0xdc, 0xd2, 0xd7, 0xd8, 0xd2, 0xd4, 0xde,
			/* [0x1080] */ 0x07, 0x0d, 0x0d, 0x08, 0x0e, 0x0b, 0x03, 0x05, 0x00, 0x06, 0x06, 0x0f, 0x09, 0x00, 0x0a, 0x03,
			/* [0x1090] */ 0x01, 0x04, 0x02, 0x07, 0x08, 0x02, 0x05, 0x0c, 0x0b, 0x01, 0x0c, 0x0a, 0x04, 0x0e, 0x0f, 0x09,
			/* [0x10a0] */ 0x0a, 0x03, 0x06, 0x0f, 0x09, 0x00, 0x00, 0x06, 0x0c, 0x0a, 0x0b, 0x01, 0x07, 0x0d, 0x0d, 0x08,
			/* [0x10b0] */ 0x0f, 0x09, 0x01, 0x04, 0x03, 0x05, 0x0e, 0x0b, 0x05, 0x0c, 0x02, 0x07, 0x08, 0x02, 0x04, 0x0e,
			/* [0x10c0] */ 0x77, 0x7d, 0x7d, 0x78, 0x7e, 0x7b, 0x73, 0x75, 0x70, 0x76, 0x76, 0x7f, 0x79, 0x70, 0x7a, 0x73,
			/* [0x10d0] */ 0x71, 0x74, 0x72, 0x77, 0x78, 0x72, 0x75, 0x7c, 0x7b, 0x71, 0x7c, 0x7a, 0x74, 0x7e, 0x7f, 0x79,
			/* [0x10e0] */ 0x7a, 0x73, 0x76, 0x7f, 0x79, 0x70, 0x70, 0x76, 0x7c, 0x7a, 0x7b, 0x71, 0x77, 0x7d, 0x7d, 0x78,
			/* [0x10f0] */ 0x7f, 0x79, 0x71, 0x74, 0x73, 0x75, 0x7e, 0x7b, 0x75, 0x7c, 0x72, 0x77, 0x78, 0x72, 0x74, 0x7e,
			/* [0x1100] */ 0x97, 0x9d, 0x9d, 0x98, 0x9e, 0x9b, 0x93, 0x95, 0x90, 0x96, 0x96, 0x9f, 0x99, 0x90, 0x9a, 0x93,
			/* [0x1110] */ 0x91, 0x94, 0x92, 0x97, 0x98, 0x92, 0x95, 0x9c, 0x9b, 0x91, 0x9c, 0x9a, 0x94, 0x9e, 0x9f, 0x99,
			/* [0x1120] */ 0x9a, 0x93, 0x96, 0x9f, 0x99, 0x90, 0x90, 0x96, 0x9c, 0x9a, 0x9b, 0x91, 0x97, 0x9d, 0x9d, 0x98,
			/* [0x1130] */ 0x9f, 0x99, 0x91, 0x94, 0x93, 0x95, 0x9e, 0x9b, 0x95, 0x9c, 0x92, 0x97, 0x98, 0x92, 0x94, 0x9e,
			/* [0x1140] */ 0x07, 0x0d, 0x0d, 0x08, 0x0e, 0x0b, 0x03, 0x05, 0x00, 0x06, 0x06, 0x0f, 0x09, 0x00, 0x0a, 0x03,
			/* [0x1150] */ 0x01, 0x04, 0x02, 0x07, 0x08, 0x02, 0x05, 0x0c, 0x0b, 0x01, 0x0c, 0x0a, 0x04, 0x0e, 0x0f, 0x09,
			/* [0x1160] */ 0x0a, 0x03, 0x06, 0x0f, 0x09, 0x00, 0x00, 0x06, 0x0c, 0x0a, 0x0b, 0x01, 0x07, 0x0d, 0x0d, 0x08,
			/* [0x1170] */ 0x0f, 0x09, 0x01, 0x04, 0x03, 0x05, 0x0e, 0x0b, 0x05, 0x0c, 0x02, 0x07, 0x08, 0x02, 0x04, 0x0e,
			/* [0x1180] */ 0xe7, 0xed, 0xed, 0xe8, 0xee, 0xeb, 0xe3, 0xe5, 0xe0, 0xe6, 0xe6, 0xef, 0xe9, 0xe0, 0xea, 0xe3,
			/* [0x1190] */ 0xe1, 0xe4, 0xe2, 0xe7, 0xe8, 0xe2, 0xe5, 0xec, 0xeb, 0xe1, 0xec, 0xea, 0xe4, 0xee, 0xef, 0xe9,
			/* [0x11a0] */ 0xea, 0xe3, 0xe6, 0xef, 0xe9, 0xe0, 0xe0, 0xe6, 0xec, 0xea, 0xeb, 0xe1, 0xe7, 0xed, 0xed, 0xe8,
			/* [0x11b0] */ 0xef, 0xe9, 0xe1, 0xe4, 0xe3, 0xe5, 0xee, 0xeb, 0xe5, 0xec, 0xe2, 0xe7, 0xe8, 0xe2, 0xe4, 0xee,
			/* [0x11c0] */ 0x97, 0x9d, 0x9d, 0x98, 0x9e, 0x9b, 0x93, 0x95, 0x90, 0x96, 0x96, 0x9f, 0x99, 0x90, 0x9a, 0x93,
			/* [0x11d0] */ 0x91, 0x94, 0x92, 0x97, 0x98, 0x92, 0x95, 0x9c, 0x9b, 0x91, 0x9c, 0x9a, 0x94, 0x9e, 0x9f, 0x99,
			/* [0x11e0] */ 0x9a, 0x93, 0x96, 0x9f, 0x99, 0x90, 0x90, 0x96, 0x9c, 0x9a, 0x9b, 0x91, 0x97, 0x9d, 0x9d, 0x98,
			/* [0x11f0] */ 0x9f, 0x99, 0x91, 0x94, 0x93, 0x95, 0x9e, 0x9b, 0x95, 0x9c, 0x92, 0x97, 0x98, 0x92, 0x94, 0x9e,
			/* [0x1200] */ 0x67, 0x6d, 0x6d, 0x68, 0x6e, 0x6b, 0x63, 0x65, 0x60, 0x66, 0x66, 0x6f, 0x69, 0x60, 0x6a, 0x63,
			/* [0x1210] */ 0x61, 0x64, 0x62, 0x67, 0x68, 0x62, 0x65, 0x6c, 0x6b, 0x61, 0x6c, 0x6a, 0x64, 0x6e, 0x6f, 0x69,
			/* [0x1220] */ 0x6a, 0x63, 0x66, 0x6f, 0x69, 0x60, 0x60, 0x66, 0x6c, 0x6a, 0x6b, 0x61, 0x67, 0x6d, 0x6d, 0x68,
			/* [0x1230] */ 0x6f, 0x69, 0x61, 0x64, 0x63, 0x65, 0x6e, 0x6b, 0x65, 0x6c, 0x62, 0x67, 0x68, 0x62, 0x64, 0x6e,
			/* [0x1240] */ 0x37, 0x3d, 0x3d, 0x38, 0x3e, 0x3b, 0x33, 0x35, 0x30, 0x36, 0x36, 0x3f, 0x39, 0x30, 0x3a, 0x33,
			/* [0x1250] */ 0x31, 0x34, 0x32, 0x37, 0x38, 0x32, 0x35, 0x3c, 0x3b, 0x31, 0x3c, 0x3a, 0x34, 0x3e, 0x3f, 0x39,
			/* [0x1260] */ 0x3a, 0x33, 0x36, 0x3f, 0x39, 0x30, 0x30, 0x36, 0x3c, 0x3a, 0x3b, 0x31, 0x37, 0x3d, 0x3d, 0x38,
			/* [0x1270] */ 0x3f, 0x39, 0x31, 0x34, 0x33, 0x35, 0x3e, 0x3b, 0x35, 0x3c, 0x32, 0x37, 0x38, 0x32, 0x34, 0x3e,
			/* [0x1280] */ 0x37, 0x3d, 0x3d, 0x38, 0x3e, 0x3b, 0x33, 0x35, 0x30, 0x36, 0x36, 0x3f, 0x39, 0x30, 0x3a, 0x33,
			/* [0x1290] */ 0x31, 0x34, 0x32, 0x37, 0x38, 0x32, 0x35, 0x3c, 0x3b, 0x31, 0x3c, 0x3a, 0x34, 0x3e, 0x3f, 0x39,
			/* [0x12a0] */ 0x3a, 0x33, 0x36, 0x3f, 0x39, 0x30, 0x30, 0x36, 0x3c, 0x3a, 0x3b, 0x31, 0x37, 0x3d, 0x3d, 0x38,
			/* [0x12b0] */ 0x3f, 0x39, 0x31, 0x34, 0x33, 0x35, 0x3e, 0x3b, 0x35, 0x3c, 0x32, 0x37, 0x38, 0x32, 0x34, 0x3e,
			/* [0x12c0] */ 0x47, 0x4d, 0x4d, 0x48, 0x4e, 0x4b, 0x43, 0x45, 0x40, 0x46, 0x46, 0x4f, 0x49, 0x40, 0x4a, 0x43,
			/* [0x12d0] */ 0x41, 0x44, 0x42, 0x47, 0x48, 0x42, 0x45, 0x4c, 0x4b, 0x41, 0x4c, 0x4a, 0x44, 0x4e, 0x4f, 0x49,
			/* [0x12e0] */ 0x4a, 0x43, 0x46, 0x4f, 0x49, 0x40, 0x40, 0x46, 0x4c, 0x4a, 0x4b, 0x41, 0x47, 0x4d, 0x4d, 0x48,
			/* [0x12f0] */ 0x4f, 0x49, 0x41, 0x44, 0x43, 0x45, 0x4e, 0x4b, 0x45, 0x4c, 0x42, 0x47, 0x48, 0x42, 0x44, 0x4e,
			/* [0x1300] */ 0xf7, 0xfd, 0xfd, 0xf8, 0xfe, 0xfb, 0xf3, 0xf5, 0xf0, 0xf6, 0xf6, 0xff, 0xf9, 0xf0, 0xfa, 0xf3,
			/* [0x1310] */ 0xf1, 0xf4, 0xf2, 0xf7, 0xf8, 0xf2, 0xf5, 0xfc, 0xfb, 0xf1, 0xfc, 0xfa, 0xf4, 0xfe, 0xff, 0xf9,
			/* [0x1320] */ 0xfa, 0xf3, 0xf6, 0xff, 0xf9, 0xf0, 0xf0, 0xf6, 0xfc, 0xfa, 0xfb, 0xf1, 0xf7, 0xfd, 0xfd, 0xf8,
			/* [0x1330] */ 0xff, 0xf9, 0xf1, 0xf4, 0xf3, 0xf5, 0xfe, 0xfb, 0xf5, 0xfc, 0xf2, 0xf7, 0xf8, 0xf2, 0xf4, 0xfe,
			/* [0x1340] */ 0x67, 0x6d, 0x6d, 0x68, 0x6e, 0x6b, 0x63, 0x65, 0x60, 0x66, 0x66, 0x6f, 0x69, 0x60, 0x6a, 0x63,
			/* [0x1350] */ 0x61, 0x64, 0x62, 0x67, 0x68, 0x62, 0x65, 0x6c, 0x6b, 0x61, 0x6c, 0x6a, 0x64, 0x6e, 0x6f, 0x69,
			/* [0x1360] */ 0x6a, 0x63, 0x66, 0x6f, 0x69, 0x60, 0x60, 0x66, 0x6c, 0x6a, 0x6b, 0x61, 0x67, 0x6d, 0x6d, 0x68,
			/* [0x1370] */ 0x6f, 0x69, 0x61, 0x64, 0x63, 0x65, 0x6e, 0x6b, 0x65, 0x6c, 0x62, 0x67, 0x68, 0x62, 0x64, 0x6e,
			/* [0x1380] */ 0x57, 0x5d, 0x5d, 0x58, 0x5e, 0x5b, 0x53, 0x55, 0x50, 0x56, 0x56, 0x5f, 0x59, 0x50, 0x5a, 0x53,
			/* [0x1390] */ 0x51, 0x54, 0x52, 0x57, 0x58, 0x52, 0x55, 0x5c, 0x5b, 0x51, 0x5c, 0x5a, 0x54, 0x5e, 0x5f, 0x59,
			/* [0x13a0] */ 0x5a, 0x53, 0x56, 0x5f, 0x59, 0x50, 0x50, 0x56, 0x5c, 0x5a, 0x5b, 0x51, 0x57, 0x5d, 0x5d, 0x58,
			/* [0x13b0] */ 0x5f, 0x59, 0x51, 0x54, 0x53, 0x55, 0x5e, 0x5b, 0x55, 0x5c, 0x52, 0x57, 0x58, 0x52, 0x54, 0x5e,
			/* [0x13c0] */ 0xa7, 0xad, 0xad, 0xa8, 0xae, 0xab, 0xa3, 0xa5, 0xa0, 0xa6, 0xa6, 0xaf, 0xa9, 0xa0, 0xaa, 0xa3,
			/* [0x13d0] */ 0xa1, 0xa4, 0xa2, 0xa7, 0xa8, 0xa2, 0xa5, 0xac, 0xab, 0xa1, 0xac, 0xaa, 0xa4, 0xae, 0xaf, 0xa9,
			/* [0x13e0] */ 0xaa, 0xa3, 0xa6, 0xaf, 0xa9, 0xa0, 0xa0, 0xa6, 0xac, 0xaa, 0xab, 0xa1, 0xa7, 0xad, 0xad, 0xa8,
			/* [0x13f0] */ 0xaf, 0xa9, 0xa1, 0xa4, 0xa3, 0xa5, 0xae, 0xab, 0xa5, 0xac, 0xa2, 0xa7, 0xa8, 0xa2, 0xa4, 0xae,
			/* [0x1400] */ 0x17, 0x1d, 0x1d, 0x18, 0x1e, 0x1b, 0x13, 0x15, 0x10, 0x16, 0x16, 0x1f, 0x19, 0x10, 0x1a, 0x13,
			/* [0x1410] */ 0x11, 0x14, 0x12, 0x17, 0x18, 0x12, 0x15, 0x1c, 0x1b, 0x11, 0x1c, 0x1a, 0x14, 0x1e, 0x1f, 0x19,
			/* [0x1420] */ 0x1a, 0x13, 0x16, 0x1f, 0x19, 0x10, 0x10, 0x16, 0x1c, 0x1a, 0x1b, 0x11, 0x17, 0x1d, 0x1d, 0x18,
			/* [0x1430] */ 0x1f, 0x19, 0x11, 0x14, 0x13, 0x15, 0x1e, 0x1b, 0x15, 0x1c, 0x12, 0x17, 0x18, 0x12, 0x14, 0x1e,
			/* [0x1440] */ 0x27, 0x2d, 0x2d, 0x28, 0x2e, 0x2b, 0x23, 0x25, 0x20, 0x26, 0x26, 0x2f, 0x29, 0x20, 0x2a, 0x23,
			/* [0x1450] */ 0x21, 0x24, 0x22, 0x27, 0x28, 0x22, 0x25, 0x2c, 0x2b, 0x21, 0x2c, 0x2a, 0x24, 0x2e, 0x2f, 0x29,
			/* [0x1460] */ 0x2a, 0x23, 0x26, 0x2f, 0x29, 0x20, 0x20, 0x26, 0x2c, 0x2a, 0x2b, 0x21, 0x27, 0x2d, 0x2d, 0x28,
			/* [0x1470] */ 0x2f, 0x29, 0x21, 0x24, 0x23, 0x25, 0x2e, 0x2b, 0x25, 0x2c, 0x22, 0x27, 0x28, 0x22, 0x24, 0x2e,
			/* [0x1480] */ 0xd7, 0xdd, 0xdd, 0xd8, 0xde, 0xdb, 0xd3, 0xd5, 0xd0, 0xd6, 0xd6, 0xdf, 0xd9, 0xd0, 0xda, 0xd3,
			/* [0x1490] */ 0xd1, 0xd4, 0xd2, 0xd7, 0xd8, 0xd2, 0xd5, 0xdc, 0xdb, 0xd1, 0xdc, 0xda, 0xd4, 0xde, 0xdf, 0xd9,
			/* [0x14a0] */ 0xda, 0xd3, 0xd6, 0xdf, 0xd9, 0xd0, 0xd0, 0xd6, 0xdc, 0xda, 0xdb, 0xd1, 0xd7, 0xdd, 0xdd, 0xd8,
			/* [0x14b0] */ 0xdf, 0xd9, 0xd1, 0xd4, 0xd3, 0xd5, 0xde, 0xdb, 0xd5, 0xdc, 0xd2, 0xd7, 0xd8, 0xd2, 0xd4, 0xde,
			/* [0x14c0] */ 0x87, 0x8d, 0x8d, 0x88, 0x8e, 0x8b, 0x83, 0x85, 0x80, 0x86, 0x86, 0x8f, 0x89, 0x80, 0x8a, 0x83,
			/* [0x14d0] */ 0x81, 0x84, 0x82, 0x87, 0x88, 0x82, 0x85, 0x8c, 0x8b, 0x81, 0x8c, 0x8a, 0x84, 0x8e, 0x8f, 0x89,
			/* [0x14e0] */ 0x8a, 0x83, 0x86, 0x8f, 0x89, 0x80, 0x80, 0x86, 0x8c, 0x8a, 0x8b, 0x81, 0x87, 0x8d, 0x8d, 0x88,
			/* [0x14f0] */ 0x8f, 0x89, 0x81, 0x84, 0x83, 0x85, 0x8e, 0x8b, 0x85, 0x8c, 0x82, 0x87, 0x88, 0x82, 0x84, 0x8e,
			/* [0x1500] */ 0xc7, 0xcd, 0xcd, 0xc8, 0xce, 0xcb, 0xc3, 0xc5, 0xc0, 0xc6, 0xc6, 0xcf, 0xc9, 0xc0, 0xca, 0xc3,
			/* [0x1510] */ 0xc1, 0xc4, 0xc2, 0xc7, 0xc8, 0xc2, 0xc5, 0xcc, 0xcb, 0xc1, 0xcc, 0xca, 0xc4, 0xce, 0xcf, 0xc9,
			/* [0x1520] */ 0xca, 0xc3, 0xc6, 0xcf, 0xc9, 0xc0, 0xc0, 0xc6, 0xcc, 0xca, 0xcb, 0xc1, 0xc7, 0xcd, 0xcd, 0xc8,
			/* [0x1530] */ 0xcf, 0xc9, 0xc1, 0xc4, 0xc3, 0xc5, 0xce, 0xcb, 0xc5, 0xcc, 0xc2, 0xc7, 0xc8, 0xc2, 0xc4, 0xce,
			/* [0x1540] */ 0x57, 0x5d, 0x5d, 0x58, 0x5e, 0x5b, 0x53, 0x55, 0x50, 0x56, 0x56, 0x5f, 0x59, 0x50, 0x5a, 0x53,
			/* [0x1550] */ 0x51, 0x54, 0x52, 0x57, 0x58, 0x52, 0x55, 0x5c, 0x5b, 0x51, 0x5c, 0x5a, 0x54, 0x5e, 0x5f, 0x59,
			/* [0x1560] */ 0x5a, 0x53, 0x56, 0x5f, 0x59, 0x50, 0x50, 0x56, 0x5c, 0x5a, 0x5b, 0x51, 0x57, 0x5d, 0x5d, 0x58,
			/* [0x1570] */ 0x5f, 0x59, 0x51, 0x54, 0x53, 0x55, 0x5e, 0x5b, 0x55, 0x5c, 0x52, 0x57, 0x58, 0x52, 0x54, 0x5e,
			/* [0x1580] */ 0x77, 0x7d, 0x7d, 0x78, 0x7e, 0x7b, 0x73, 0x75, 0x70, 0x76, 0x76, 0x7f, 0x79, 0x70, 0x7a, 0x73,
			/* [0x1590] */ 0x71, 0x74, 0x72, 0x77, 0x78, 0x72, 0x75, 0x7c, 0x7b, 0x71, 0x7c, 0x7a, 0x74, 0x7e, 0x7f, 0x79,
			/* [0x15a0] */ 0x7a, 0x73, 0x76, 0x7f, 0x79, 0x70, 0x70, 0x76, 0x7c, 0x7a, 0x7b, 0x71, 0x77, 0x7d, 0x7d, 0x78,
			/* [0x15b0] */ 0x7f, 0x79, 0x71, 0x74, 0x73, 0x75, 0x7e, 0x7b, 0x75, 0x7c, 0x72, 0x77, 0x78, 0x72, 0x74, 0x7e,
			/* [0x15c0] */ 0xe7, 0xed, 0xed, 0xe8, 0xee, 0xeb, 0xe3, 0xe5, 0xe0, 0xe6, 0xe6, 0xef, 0xe9, 0xe0, 0xea, 0xe3,
			/* [0x15d0] */ 0xe1, 0xe4, 0xe2, 0xe7, 0xe8, 0xe2, 0xe5, 0xec, 0xeb, 0xe1, 0xec, 0xea, 0xe4, 0xee, 0xef, 0xe9,
			/* [0x15e0] */ 0xea, 0xe3, 0xe6, 0xef, 0xe9, 0xe0, 0xe0, 0xe6, 0xec, 0xea, 0xeb, 0xe1, 0xe7, 0xed, 0xed, 0xe8,
			/* [0x15f0] */ 0xef, 0xe9, 0xe1, 0xe4, 0xe3, 0xe5, 0xee, 0xeb, 0xe5, 0xec, 0xe2, 0xe7, 0xe8, 0xe2, 0xe4, 0xee,
			/* [0x1600] */ 0xb7, 0xbd, 0xbd, 0xb8, 0xbe, 0xbb, 0xb3, 0xb5, 0xb0, 0xb6, 0xb6, 0xbf, 0xb9, 0xb0, 0xba, 0xb3,
			/* [0x1610] */ 0xb1, 0xb4, 0xb2, 0xb7, 0xb8, 0xb2, 0xb5, 0xbc, 0xbb, 0xb1, 0xbc, 0xba, 0xb4, 0xbe, 0xbf, 0xb9,
			/* [0x1620] */ 0xba, 0xb3, 0xb6, 0xbf, 0xb9, 0xb0, 0xb0, 0xb6, 0xbc, 0xba, 0xbb, 0xb1, 0xb7, 0xbd, 0xbd, 0xb8,
			/* [0x1630] */ 0xbf, 0xb9, 0xb1, 0xb4, 0xb3, 0xb5, 0xbe, 0xbb, 0xb5, 0xbc, 0xb2, 0xb7, 0xb8, 0xb2, 0xb4, 0xbe,
			/* [0x1640] */ 0xc7, 0xcd, 0xcd, 0xc8, 0xce, 0xcb, 0xc3, 0xc5, 0xc0, 0xc6, 0xc6, 0xcf, 0xc9, 0xc0, 0xca, 0xc3,
			/* [0x1650] */ 0xc1, 0xc4, 0xc2, 0xc7, 0xc8, 0xc2, 0xc5, 0xcc, 0xcb, 0xc1, 0xcc, 0xca, 0xc4, 0xce, 0xcf, 0xc9,
			/* [0x1660] */ 0xca, 0xc3, 0xc6, 0xcf, 0xc9, 0xc0, 0xc0, 0xc6, 0xcc, 0xca, 0xcb, 0xc1, 0xc7, 0xcd, 0xcd, 0xc8,
			/* [0x1670] */ 0xcf, 0xc9, 0xc1, 0xc4, 0xc3, 0xc5, 0xce, 0xcb, 0xc5, 0xcc, 0xc2, 0xc7, 0xc8, 0xc2, 0xc4, 0xce,
			/* [0x1680] */ 0x47, 0x4d, 0x4d, 0x48, 0x4e, 0x4b, 0x43, 0x45, 0x40, 0x46, 0x46, 0x4f, 0x49, 0x40, 0x4a, 0x43,
			/* [0x1690] */ 0x41, 0x44, 0x42, 0x47, 0x48, 0x42, 0x45, 0x4c, 0x4b, 0x41, 0x4c, 0x4a, 0x44, 0x4e, 0x4f, 0x49,
			/* [0x16a0] */ 0x4a, 0x43, 0x46, 0x4f, 0x49, 0x40, 0x40, 0x46, 0x4c, 0x4a, 0x4b, 0x41, 0x47, 0x4d, 0x4d, 0x48,
			/* [0x16b0] */ 0x4f, 0x49, 0x41, 0x44, 0x43, 0x45, 0x4e, 0x4b, 0x45, 0x4c, 0x42, 0x47, 0x48, 0x42, 0x44, 0x4e,
			/* [0x16c0] */ 0xb7, 0xbd, 0xbd, 0xb8, 0xbe, 0xbb, 0xb3, 0xb5, 0xb0, 0xb6, 0xb6, 0xbf, 0xb9, 0xb0, 0xba, 0xb3,
			/* [0x16d0] */ 0xb1, 0xb4, 0xb2, 0xb7, 0xb8, 0xb2, 0xb5, 0xbc, 0xbb, 0xb1, 0xbc, 0xba, 0xb4, 0xbe, 0xbf, 0xb9,
			/* [0x16e0] */ 0xba, 0xb3, 0xb6, 0xbf, 0xb9, 0xb0, 0xb0, 0xb6, 0xbc, 0xba, 0xbb, 0xb1, 0xb7, 0xbd, 0xbd, 0xb8,
			/* [0x16f0] */ 0xbf, 0xb9, 0xb1, 0xb4, 0xb3, 0xb5, 0xbe, 0xbb, 0xb5, 0xbc, 0xb2, 0xb7, 0xb8, 0xb2, 0xb4, 0xbe,
			/* [0x1700] */ 0x27, 0x2d, 0x2d, 0x28, 0x2e, 0x2b, 0x23, 0x25, 0x20, 0x26, 0x26, 0x2f, 0x29, 0x20, 0x2a, 0x23,
			/* [0x1710] */ 0x21, 0x24, 0x22, 0x27, 0x28, 0x22, 0x25, 0x2c, 0x2b, 0x21, 0x2c, 0x2a, 0x24, 0x2e, 0x2f, 0x29,
			/* [0x1720] */ 0x2a, 0x23, 0x26, 0x2f, 0x29, 0x20, 0x20, 0x26, 0x2c, 0x2a, 0x2b, 0x21, 0x27, 0x2d, 0x2d, 0x28,
			/* [0x1730] */ 0x2f, 0x29, 0x21, 0x24, 0x23, 0x25, 0x2e, 0x2b, 0x25, 0x2c, 0x22, 0x27, 0x28, 0x22, 0x24, 0x2e,
			/* [0x1740] */ 0xf7, 0xfd, 0xfd, 0xf8, 0xfe, 0xfb, 0xf3, 0xf5, 0xf0, 0xf6, 0xf6, 0xff, 0xf9, 0xf0, 0xfa, 0xf3,
			/* [0x1750] */ 0xf1, 0xf4, 0xf2, 0xf7, 0xf8, 0xf2, 0xf5, 0xfc, 0xfb, 0xf1, 0xfc, 0xfa, 0xf4, 0xfe, 0xff, 0xf9,
			/* [0x1760] */ 0xfa, 0xf3, 0xf6, 0xff, 0xf9, 0xf0, 0xf0, 0xf6, 0xfc, 0xfa, 0xfb, 0xf1, 0xf7, 0xfd, 0xfd, 0xf8,
			/* [0x1770] */ 0xff, 0xf9, 0xf1, 0xf4, 0xf3, 0xf5, 0xfe, 0xfb, 0xf5, 0xfc, 0xf2, 0xf7, 0xf8, 0xf2, 0xf4, 0xfe,
			/* [0x1780] */ 0x87, 0x8d, 0x8d, 0x88, 0x8e, 0x8b, 0x83, 0x85, 0x80, 0x86, 0x86, 0x8f, 0x89, 0x80, 0x8a, 0x83,
			/* [0x1790] */ 0x81, 0x84, 0x82, 0x87, 0x88, 0x82, 0x85, 0x8c, 0x8b, 0x81, 0x8c, 0x8a, 0x84, 0x8e, 0x8f, 0x89,
			/* [0x17a0] */ 0x8a, 0x83, 0x86, 0x8f, 0x89, 0x80, 0x80, 0x86, 0x8c, 0x8a, 0x8b, 0x81, 0x87, 0x8d, 0x8d, 0x88,
			/* [0x17b0] */ 0x8f, 0x89, 0x81, 0x84, 0x83, 0x85, 0x8e, 0x8b, 0x85, 0x8c, 0x82, 0x87, 0x88, 0x82, 0x84, 0x8e,
			/* [0x17c0] */ 0x17, 0x1d, 0x1d, 0x18, 0x1e, 0x1b, 0x13, 0x15, 0x10, 0x16, 0x16, 0x1f, 0x19, 0x10, 0x1a, 0x13,
			/* [0x17d0] */ 0x11, 0x14, 0x12, 0x17, 0x18, 0x12, 0x15, 0x1c, 0x1b, 0x11, 0x1c, 0x1a, 0x14, 0x1e, 0x1f, 0x19,
			/* [0x17e0] */ 0x1a, 0x13, 0x16, 0x1f, 0x19, 0x10, 0x10, 0x16, 0x1c, 0x1a, 0x1b, 0x11, 0x17, 0x1d, 0x1d, 0x18,
			/* [0x17f0] */ 0x1f, 0x19, 0x11, 0x14, 0x13, 0x15, 0x1e, 0x1b, 0x15, 0x1c, 0x12, 0x17, 0x18, 0x12, 0x14, 0x1e,
			/* [0x1800] */ 0xd7, 0xdd, 0xdd, 0xd8, 0xde, 0xdb, 0xd3, 0xd5, 0xd0, 0xd6, 0xd6, 0xdf, 0xd9, 0xd0, 0xda, 0xd3,
			/* [0x1810] */ 0xd1, 0xd4, 0xd2, 0xd7, 0xd8, 0xd2, 0xd5, 0xdc, 0xdb, 0xd1, 0xdc, 0xda, 0xd4, 0xde, 0xdf, 0xd9,
			/* [0x1820] */ 0xda, 0xd3, 0xd6, 0xdf, 0xd9, 0xd0, 0xd0, 0xd6, 0xdc, 0xda, 0xdb, 0xd1, 0xd7, 0xdd, 0xdd, 0xd8,
			/* [0x1830] */ 0xdf, 0xd9, 0xd1, 0xd4, 0xd3, 0xd5, 0xde, 0xdb, 0xd5, 0xdc, 0xd2, 0xd7, 0xd8, 0xd2, 0xd4, 0xde,
			/* [0x1840] */ 0x17, 0x1d, 0x1d, 0x18, 0x1e, 0x1b, 0x13, 0x15, 0x10, 0x16, 0x16, 0x1f, 0x19, 0x10, 0x1a, 0x13,
			/* [0x1850] */ 0x11, 0x14, 0x12, 0x17, 0x18, 0x12, 0x15, 0x1c, 0x1b, 0x11, 0x1c, 0x1a, 0x14, 0x1e, 0x1f, 0x19,
			/* [0x1860] */ 0x1a, 0x13, 0x16, 0x1f, 0x19, 0x10, 0x10, 0x16, 0x1c, 0x1a, 0x1b, 0x11, 0x17, 0x1d, 0x1d, 0x18,
			/* [0x1870] */ 0x1f, 0x19, 0x11, 0x14, 0x13, 0x15, 0x1e, 0x1b, 0x15, 0x1c, 0x12, 0x17, 0x18, 0x12, 0x14, 0x1e,
			/* [0x1880] */ 0x67, 0x6d, 0x6d, 0x68, 0x6e, 0x6b, 0x63, 0x65, 0x60, 0x66, 0x66, 0x6f, 0x69, 0x60, 0x6a, 0x63,
			/* [0x1890] */ 0x61, 0x64, 0x62, 0x67, 0x68, 0x62, 0x65, 0x6c, 0x6b, 0x61, 0x6c, 0x6a, 0x64, 0x6e, 0x6f, 0x69,
			/* [0x18a0] */ 0x6a, 0x63, 0x66, 0x6f, 0x69, 0x60, 0x60, 0x66, 0x6c, 0x6a, 0x6b, 0x61, 0x67, 0x6d, 0x6d, 0x68,
			/* [0x18b0] */ 0x6f, 0x69, 0x61, 0x64, 0x63, 0x65, 0x6e, 0x6b, 0x65, 0x6c, 0x62, 0x67, 0x68, 0x62, 0x64, 0x6e,
			/* [0x18c0] */ 0xa7, 0xad, 0xad, 0xa8, 0xae, 0xab, 0xa3, 0xa5, 0xa0, 0xa6, 0xa6, 0xaf, 0xa9, 0xa0, 0xaa, 0xa3,
			/* [0x18d0] */ 0xa1, 0xa4, 0xa2, 0xa7, 0xa8, 0xa2, 0xa5, 0xac, 0xab, 0xa1, 0xac, 0xaa, 0xa4, 0xae, 0xaf, 0xa9,
			/* [0x18e0] */ 0xaa, 0xa3, 0xa6, 0xaf, 0xa9, 0xa0, 0xa0, 0xa6, 0xac, 0xaa, 0xab, 0xa1, 0xa7, 0xad, 0xad, 0xa8,
			/* [0x18f0] */ 0xaf, 0xa9, 0xa1, 0xa4, 0xa3, 0xa5, 0xae, 0xab, 0xa5, 0xac, 0xa2, 0xa7, 0xa8, 0xa2, 0xa4, 0xae,
			/* [0x1900] */ 0x47, 0x4d, 0x4d, 0x48, 0x4e, 0x4b, 0x43, 0x45, 0x40, 0x46, 0x46, 0x4f, 0x49, 0x40, 0x4a, 0x43,
			/* [0x1910] */ 0x41, 0x44, 0x42, 0x47, 0x48, 0x42, 0x45, 0x4c, 0x4b, 0x41, 0x4c, 0x4a, 0x44, 0x4e, 0x4f, 0x49,
			/* [0x1920] */ 0x4a, 0x43, 0x46, 0x4f, 0x49, 0x40, 0x40, 0x46, 0x4c, 0x4a, 0x4b, 0x41, 0x47, 0x4d, 0x4d, 0x48,
			/* [0x1930] */ 0x4f, 0x49, 0x41, 0x44, 0x43, 0x45, 0x4e, 0x4b, 0x45, 0x4c, 0x42, 0x47, 0x48, 0x42, 0x44, 0x4e,
			/* [0x1940] */ 0xd7, 0xdd, 0xdd, 0xd8, 0xde, 0xdb, 0xd3, 0xd5, 0xd0, 0xd6, 0xd6, 0xdf, 0xd9, 0xd0, 0xda, 0xd3,
			/* [0x1950] */ 0xd1, 0xd4, 0xd2, 0xd7, 0xd8, 0xd2, 0xd5, 0xdc, 0xdb, 0xd1, 0xdc, 0xda, 0xd4, 0xde, 0xdf, 0xd9,
			/* [0x1960] */ 0xda, 0xd3, 0xd6, 0xdf, 0xd9, 0xd0, 0xd0, 0xd6, 0xdc, 0xda, 0xdb, 0xd1, 0xd7, 0xdd, 0xdd, 0xd8,
			/* [0x1970] */ 0xdf, 0xd9, 0xd1, 0xd4, 0xd3, 0xd5, 0xde, 0xdb, 0xd5, 0xdc, 0xd2, 0xd7, 0xd8, 0xd2, 0xd4, 0xde,
			/* [0x1980] */ 0x97, 0x9d, 0x9d, 0x98, 0x9e, 0x9b, 0x93, 0x95, 0x90, 0x96, 0x96, 0x9f, 0x99, 0x90, 0x9a, 0x93,
			/* [0x1990] */ 0x91, 0x94, 0x92, 0x97, 0x98, 0x92, 0x95, 0x9c, 0x9b, 0x91, 0x9c, 0x9a, 0x94, 0x9e, 0x9f, 0x99,
			/* [0x19a0] */ 0x9a, 0x93, 0x96, 0x9f, 0x99, 0x90, 0x90, 0x96, 0x9c, 0x9a, 0x9b, 0x91, 0x97, 0x9d, 0x9d, 0x98,
			/* [0x19b0] */ 0x9f, 0x99, 0x91, 0x94, 0x93, 0x95, 0x9e, 0x9b, 0x95, 0x9c, 0x92, 0x97, 0x98, 0x92, 0x94, 0x9e,
			/* [0x19c0] */ 0x07, 0x0d, 0x0d, 0x08, 0x0e, 0x0b, 0x03, 0x05, 0x00, 0x06, 0x06, 0x0f, 0x09, 0x00, 0x0a, 0x03,
			/* [0x19d0] */ 0x01, 0x04, 0x02, 0x07, 0x08, 0x02, 0x05, 0x0c, 0x0b, 0x01, 0x0c, 0x0a, 0x04, 0x0e, 0x0f, 0x09,
			/* [0x19e0] */ 0x0a, 0x03, 0x06, 0x0f, 0x09, 0x00, 0x00, 0x06, 0x0c, 0x0a, 0x0b, 0x01, 0x07, 0x0d, 0x0d, 0x08,
			/* [0x19f0] */ 0x0f, 0x09, 0x01, 0x04, 0x03, 0x05, 0x0e, 0x0b, 0x05, 0x0c, 0x02, 0x07, 0x08, 0x02, 0x04, 0x0e,
			/* [0x1a00] */ 0x87, 0x8d, 0x8d, 0x88, 0x8e, 0x8b, 0x83, 0x85, 0x80, 0x86, 0x86, 0x8f, 0x89, 0x80, 0x8a, 0x83,
			/* [0x1a10] */ 0x81, 0x84, 0x82, 0x87, 0x88, 0x82, 0x85, 0x8c, 0x8b, 0x81, 0x8c, 0x8a, 0x84, 0x8e, 0x8f, 0x89,
			/* [0x1a20] */ 0x8a, 0x83, 0x86, 0x8f, 0x89, 0x80, 0x80, 0x86, 0x8c, 0x8a, 0x8b, 0x81, 0x87, 0x8d, 0x8d, 0x88,
			/* [0x1a30] */ 0x8f, 0x89, 0x81, 0x84, 0x83, 0x85, 0x8e, 0x8b, 0x85, 0x8c, 0x82, 0x87, 0x88, 0x82, 0x84, 0x8e,
			/* [0x1a40] */ 0x67, 0x6d, 0x6d, 0x68, 0x6e, 0x6b, 0x63, 0x65, 0x60, 0x66, 0x66, 0x6f, 0x69, 0x60, 0x6a, 0x63,
			/* [0x1a50] */ 0x61, 0x64, 0x62, 0x67, 0x68, 0x62, 0x65, 0x6c, 0x6b, 0x61, 0x6c, 0x6a, 0x64, 0x6e, 0x6f, 0x69,
			/* [0x1a60] */ 0x6a, 0x63, 0x66, 0x6f, 0x69, 0x60, 0x60, 0x66, 0x6c, 0x6a, 0x6b, 0x61, 0x67, 0x6d, 0x6d, 0x68,
			/* [0x1a70] */ 0x6f, 0x69, 0x61, 0x64, 0x63, 0x65, 0x6e, 0x6b, 0x65, 0x6c, 0x62, 0x67, 0x68, 0x62, 0x64, 0x6e,
			/* [0x1a80] */ 0xf7, 0xfd, 0xfd, 0xf8, 0xfe, 0xfb, 0xf3, 0xf5, 0xf0, 0xf6, 0xf6, 0xff, 0xf9, 0xf0, 0xfa, 0xf3,
			/* [0x1a90] */ 0xf1, 0xf4, 0xf2, 0xf7, 0xf8, 0xf2, 0xf5, 0xfc, 0xfb, 0xf1, 0xfc, 0xfa, 0xf4, 0xfe, 0xff, 0xf9,
			/* [0x1aa0] */ 0xfa, 0xf3, 0xf6, 0xff, 0xf9, 0xf0, 0xf0, 0xf6, 0xfc, 0xfa, 0xfb, 0xf1, 0xf7, 0xfd, 0xfd, 0xf8,
			/* [0x1ab0] */ 0xff, 0xf9, 0xf1, 0xf4, 0xf3, 0xf5, 0xfe, 0xfb, 0xf5, 0xfc, 0xf2, 0xf7, 0xf8, 0xf2, 0xf4, 0xfe,
			/* [0x1ac0] */ 0x97, 0x9d, 0x9d, 0x98, 0x9e, 0x9b, 0x93, 0x95, 0x90, 0x96, 0x96, 0x9f, 0x99, 0x90, 0x9a, 0x93,
			/* [0x1ad0] */ 0x91, 0x94, 0x92, 0x97, 0x98, 0x92, 0x95, 0x9c, 0x9b, 0x91, 0x9c, 0x9a, 0x94, 0x9e, 0x9f, 0x99,
			/* [0x1ae0] */ 0x9a, 0x93, 0x96, 0x9f, 0x99, 0x90, 0x90, 0x96, 0x9c, 0x9a, 0x9b, 0x91, 0x97, 0x9d, 0x9d, 0x98,
			/* [0x1af0] */ 0x9f, 0x99, 0x91, 0x94, 0x93, 0x95, 0x9e, 0x9b, 0x95, 0x9c, 0x92, 0x97, 0x98, 0x92, 0x94, 0x9e,
			/* [0x1b00] */ 0x37, 0x3d, 0x3d, 0x38, 0x3e, 0x3b, 0x33, 0x35, 0x30, 0x36, 0x36, 0x3f, 0x39, 0x30, 0x3a, 0x33,
			/* [0x1b10] */ 0x31, 0x34, 0x32, 0x37, 0x38, 0x32, 0x35, 0x3c, 0x3b, 0x31, 0x3c, 0x3a, 0x34, 0x3e, 0x3f, 0x39,
			/* [0x1b20] */ 0x3a, 0x33, 0x36, 0x3f, 0x39, 0x30, 0x30, 0x36, 0x3c, 0x3a, 0x3b, 0x31, 0x37, 0x3d, 0x3d, 0x38,
			/* [0x1b30] */ 0x3f, 0x39, 0x31, 0x34, 0x33, 0x35, 0x3e, 0x3b, 0x35, 0x3c, 0x32, 0x37, 0x38, 0x32, 0x34, 0x3e,
			/* [0x1b40] */ 0x87, 0x8d, 0x8d, 0x88, 0x8e, 0x8b, 0x83, 0x85, 0x80, 0x86, 0x86, 0x8f, 0x89, 0x80, 0x8a, 0x83,
			/* [0x1b50] */ 0x81, 0x84, 0x82, 0x87, 0x88, 0x82, 0x85, 0x8c, 0x8b, 0x81, 0x8c, 0x8a, 0x84, 0x8e, 0x8f, 0x89,
			/* [0x1b60] */ 0x8a, 0x83, 0x86, 0x8f, 0x89, 0x80, 0x80, 0x86, 0x8c, 0x8a, 0x8b, 0x81, 0x87, 0x8d, 0x8d, 0x88,
			/* [0x1b70] */ 0x8f, 0x89, 0x81, 0x84, 0x83, 0x85, 0x8e, 0x8b, 0x85, 0x8c, 0x82, 0x87, 0x88, 0x82, 0x84, 0x8e,
			/* [0x1b80] */ 0x07, 0x0d, 0x0d, 0x08, 0x0e, 0x0b, 0x03, 0x05, 0x00, 0x06, 0x06, 0x0f, 0x09, 0x00, 0x0a, 0x03,
			/* [0x1b90] */ 0x01, 0x04, 0x02, 0x07, 0x08, 0x02, 0x05, 0x0c, 0x0b, 0x01, 0x0c, 0x0a, 0x04, 0x0e, 0x0f, 0x09,
			/* [0x1ba0] */ 0x0a, 0x03, 0x06, 0x0f, 0x09, 0x00, 0x00, 0x06, 0x0c, 0x0a, 0x0b, 0x01, 0x07, 0x0d, 0x0d, 0x08,
			/* [0x1bb0] */ 0x0f, 0x09, 0x01, 0x04, 0x03, 0x05, 0x0e, 0x0b, 0x05, 0x0c, 0x02, 0x07, 0x08, 0x02, 0x04, 0x0e,
			/* [0x1bc0] */ 0x77, 0x7d, 0x7d, 0x78, 0x7e, 0x7b, 0x73, 0x75, 0x70, 0x76, 0x76, 0x7f, 0x79, 0x70, 0x7a, 0x73,
			/* [0x1bd0] */ 0x71, 0x74, 0x72, 0x77, 0x78, 0x72, 0x75, 0x7c, 0x7b, 0x71, 0x7c, 0x7a, 0x74, 0x7e, 0x7f, 0x79,
			/* [0x1be0] */ 0x7a, 0x73, 0x76, 0x7f, 0x79, 0x70, 0x70, 0x76, 0x7c, 0x7a, 0x7b, 0x71, 0x77, 0x7d, 0x7d, 0x78,
			/* [0x1bf0] */ 0x7f, 0x79, 0x71, 0x74, 0x73, 0x75, 0x7e, 0x7b, 0x75, 0x7c, 0x72, 0x77, 0x78, 0x72, 0x74, 0x7e,
			/* [0x1c00] */ 0xb7, 0xbd, 0xbd, 0xb8, 0xbe, 0xbb, 0xb3, 0xb5, 0xb0, 0xb6, 0xb6, 0xbf, 0xb9, 0xb0, 0xba, 0xb3,
			/* [0x1c10] */ 0xb1, 0xb4, 0xb2, 0xb7, 0xb8, 0xb2, 0xb5, 0xbc, 0xbb, 0xb1, 0xbc, 0xba, 0xb4, 0xbe, 0xbf, 0xb9,
			/* [0x1c20] */ 0xba, 0xb3, 0xb6, 0xbf, 0xb9, 0xb0, 0xb0, 0xb6, 0xbc, 0xba, 0xbb, 0xb1, 0xb7, 0xbd, 0xbd, 0xb8,
			/* [0x1c30] */ 0xbf, 0xb9, 0xb1, 0xb4, 0xb3, 0xb5, 0xbe, 0xbb, 0xb5, 0xbc, 0xb2, 0xb7, 0xb8, 0xb2, 0xb4, 0xbe,
			/* [0x1c40] */ 0x47, 0x4d, 0x4d, 0x48, 0x4e, 0x4b, 0x43, 0x45, 0x40, 0x46, 0x46, 0x4f, 0x49, 0x40, 0x4a, 0x43,
			/* [0x1c50] */ 0x41, 0x44, 0x42, 0x47, 0x48, 0x42, 0x45, 0x4c, 0x4b, 0x41, 0x4c, 0x4a, 0x44, 0x4e, 0x4f, 0x49,
			/* [0x1c60] */ 0x4a, 0x43, 0x46, 0x4f, 0x49, 0x40, 0x40, 0x46, 0x4c, 0x4a, 0x4b, 0x41, 0x47, 0x4d, 0x4d, 0x48,
			/* [0x1c70] */ 0x4f, 0x49, 0x41, 0x44, 0x43, 0x45, 0x4e, 0x4b, 0x45, 0x4c, 0x42, 0x47, 0x48, 0x42, 0x44, 0x4e,
			/* [0x1c80] */ 0x17, 0x1d, 0x1d, 0x18, 0x1e, 0x1b, 0x13, 0x15, 0x10, 0x16, 0x16, 0x1f, 0x19, 0x10, 0x1a, 0x13,
			/* [0x1c90] */ 0x11, 0x14, 0x12, 0x17, 0x18, 0x12, 0x15, 0x1c, 0x1b, 0x11, 0x1c, 0x1a, 0x14, 0x1e, 0x1f, 0x19,
			/* [0x1ca0] */ 0x1a, 0x13, 0x16, 0x1f, 0x19, 0x10, 0x10, 0x16, 0x1c, 0x1a, 0x1b, 0x11, 0x17, 0x1d, 0x1d, 0x18,
			/* [0x1cb0] */ 0x1f, 0x19, 0x11, 0x14, 0x13, 0x15, 0x1e, 0x1b, 0x15, 0x1c, 0x12, 0x17, 0x18, 0x12, 0x14, 0x1e,
			/* [0x1cc0] */ 0xf7, 0xfd, 0xfd, 0xf8, 0xfe, 0xfb, 0xf3, 0xf5, 0xf0, 0xf6, 0xf6, 0xff, 0xf9, 0xf0, 0xfa, 0xf3,
			/* [0x1cd0] */ 0xf1, 0xf4, 0xf2, 0xf7, 0xf8, 0xf2, 0xf5, 0xfc, 0xfb, 0xf1, 0xfc, 0xfa, 0xf4, 0xfe, 0xff, 0xf9,
			/* [0x1ce0] */ 0xfa, 0xf3, 0xf6, 0xff, 0xf9, 0xf0, 0xf0, 0xf6, 0xfc, 0xfa, 0xfb, 0xf1, 0xf7, 0xfd, 0xfd, 0xf8,
			/* [0x1cf0] */ 0xff, 0xf9, 0xf1, 0xf4, 0xf3, 0xf5, 0xfe, 0xfb, 0xf5, 0xfc, 0xf2, 0xf7, 0xf8, 0xf2, 0xf4, 0xfe,
			/* [0x1d00] */ 0x27, 0x2d, 0x2d, 0x28, 0x2e, 0x2b, 0x23, 0x25, 0x20, 0x26, 0x26, 0x2f, 0x29, 0x20, 0x2a, 0x23,
			/* [0x1d10] */ 0x21, 0x24, 0x22, 0x27, 0x28, 0x22, 0x25, 0x2c, 0x2b, 0x21, 0x2c, 0x2a, 0x24, 0x2e, 0x2f, 0x29,
			/* [0x1d20] */ 0x2a, 0x23, 0x26, 0x2f, 0x29, 0x20, 0x20, 0x26, 0x2c, 0x2a, 0x2b, 0x21, 0x27, 0x2d, 0x2d, 0x28,
			/* [0x1d30] */ 0x2f, 0x29, 0x21, 0x24, 0x23, 0x25, 0x2e, 0x2b, 0x25, 0x2c, 0x22, 0x27, 0x28, 0x22, 0x24, 0x2e,
			/* [0x1d40] */ 0xe7, 0xed, 0xed, 0xe8, 0xee, 0xeb, 0xe3, 0xe5, 0xe0, 0xe6, 0xe6, 0xef, 0xe9, 0xe0, 0xea, 0xe3,
			/* [0x1d50] */ 0xe1, 0xe4, 0xe2, 0xe7, 0xe8, 0xe2, 0xe5, 0xec, 0xeb, 0xe1, 0xec, 0xea, 0xe4, 0xee, 0xef, 0xe9,
			/* [0x1d60] */ 0xea, 0xe3, 0xe6, 0xef, 0xe9, 0xe0, 0xe0, 0xe6, 0xec, 0xea, 0xeb, 0xe1, 0xe7, 0xed, 0xed, 0xe8,
			/* [0x1d70] */ 0xef, 0xe9, 0xe1, 0xe4, 0xe3, 0xe5, 0xee, 0xeb, 0xe5, 0xec, 0xe2, 0xe7, 0xe8, 0xe2, 0xe4, 0xee,
			/* [0x1d80] */ 0xc7, 0xcd, 0xcd, 0xc8, 0xce, 0xcb, 0xc3, 0xc5, 0xc0, 0xc6, 0xc6, 0xcf, 0xc9, 0xc0, 0xca, 0xc3,
			/* [0x1d90] */ 0xc1, 0xc4, 0xc2, 0xc7, 0xc8, 0xc2, 0xc5, 0xcc, 0xcb, 0xc1, 0xcc, 0xca, 0xc4, 0xce, 0xcf, 0xc9,
			/* [0x1da0] */ 0xca, 0xc3, 0xc6, 0xcf, 0xc9, 0xc0, 0xc0, 0xc6, 0xcc, 0xca, 0xcb, 0xc1, 0xc7, 0xcd, 0xcd, 0xc8,
			/* [0x1db0] */ 0xcf, 0xc9, 0xc1, 0xc4, 0xc3, 0xc5, 0xce, 0xcb, 0xc5, 0xcc, 0xc2, 0xc7, 0xc8, 0xc2, 0xc4, 0xce,
			/* [0x1dc0] */ 0x37, 0x3d, 0x3d, 0x38, 0x3e, 0x3b, 0x33, 0x35, 0x30, 0x36, 0x36, 0x3f, 0x39, 0x30, 0x3a, 0x33,
			/* [0x1dd0] */ 0x31, 0x34, 0x32, 0x37, 0x38, 0x32, 0x35, 0x3c, 0x3b, 0x31, 0x3c, 0x3a, 0x34, 0x3e, 0x3f, 0x39,
			/* [0x1de0] */ 0x3a, 0x33, 0x36, 0x3f, 0x39, 0x30, 0x30, 0x36, 0x3c, 0x3a, 0x3b, 0x31, 0x37, 0x3d, 0x3d, 0x38,
			/* [0x1df0] */ 0x3f, 0x39, 0x31, 0x34, 0x33, 0x35, 0x3e, 0x3b, 0x35, 0x3c, 0x32, 0x37, 0x38, 0x32, 0x34, 0x3e,
			/* [0x1e00] */ 0x57, 0x5d, 0x5d, 0x58, 0x5e, 0x5b, 0x53, 0x55, 0x50, 0x56, 0x56, 0x5f, 0x59, 0x50, 0x5a, 0x53,
			/* [0x1e10] */ 0x51, 0x54, 0x52, 0x57, 0x58, 0x52, 0x55, 0x5c, 0x5b, 0x51, 0x5c, 0x5a, 0x54, 0x5e, 0x5f, 0x59,
			/* [0x1e20] */ 0x5a, 0x53, 0x56, 0x5f, 0x59, 0x50, 0x50, 0x56, 0x5c, 0x5a, 0x5b, 0x51, 0x57, 0x5d, 0x5d, 0x58,
			/* [0x1e30] */ 0x5f, 0x59, 0x51, 0x54, 0x53, 0x55, 0x5e, 0x5b, 0x55, 0x5c, 0x52, 0x57, 0x58, 0x52, 0x54, 0x5e,
			/* [0x1e40] */ 0xb7, 0xbd, 0xbd, 0xb8, 0xbe, 0xbb, 0xb3, 0xb5, 0xb0, 0xb6, 0xb6, 0xbf, 0xb9, 0xb0, 0xba, 0xb3,
			/* [0x1e50] */ 0xb1, 0xb4, 0xb2, 0xb7, 0xb8, 0xb2, 0xb5, 0xbc, 0xbb, 0xb1, 0xbc, 0xba, 0xb4, 0xbe, 0xbf, 0xb9,
			/* [0x1e60] */ 0xba, 0xb3, 0xb6, 0xbf, 0xb9, 0xb0, 0xb0, 0xb6, 0xbc, 0xba, 0xbb, 0xb1, 0xb7, 0xbd, 0xbd, 0xb8,
			/* [0x1e70] */ 0xbf, 0xb9, 0xb1, 0xb4, 0xb3, 0xb5, 0xbe, 0xbb, 0xb5, 0xbc, 0xb2, 0xb7, 0xb8, 0xb2, 0xb4, 0xbe,
			/* [0x1e80] */ 0xa7, 0xad, 0xad, 0xa8, 0xae, 0xab, 0xa3, 0xa5, 0xa0, 0xa6, 0xa6, 0xaf, 0xa9, 0xa0, 0xaa, 0xa3,
			/* [0x1e90] */ 0xa1, 0xa4, 0xa2, 0xa7, 0xa8, 0xa2, 0xa5, 0xac, 0xab, 0xa1, 0xac, 0xaa, 0xa4, 0xae, 0xaf, 0xa9,
			/* [0x1ea0] */ 0xaa, 0xa3, 0xa6, 0xaf, 0xa9, 0xa0, 0xa0, 0xa6, 0xac, 0xaa, 0xab, 0xa1, 0xa7, 0xad, 0xad, 0xa8,
			/* [0x1eb0] */ 0xaf, 0xa9, 0xa1, 0xa4, 0xa3, 0xa5, 0xae, 0xab, 0xa5, 0xac, 0xa2, 0xa7, 0xa8, 0xa2, 0xa4, 0xae,
			/* [0x1ec0] */ 0x57, 0x5d, 0x5d, 0x58, 0x5e, 0x5b, 0x53, 0x55, 0x50, 0x56, 0x56, 0x5f, 0x59, 0x50, 0x5a, 0x53,
			/* [0x1ed0] */ 0x51, 0x54, 0x52, 0x57, 0x58, 0x52, 0x55, 0x5c, 0x5b, 0x51, 0x5c, 0x5a, 0x54, 0x5e, 0x5f, 0x59,
			/* [0x1ee0] */ 0x5a, 0x53, 0x56, 0x5f, 0x59, 0x50, 0x50, 0x56, 0x5c, 0x5a, 0x5b, 0x51, 0x57, 0x5d, 0x5d, 0x58,
			/* [0x1ef0] */ 0x5f, 0x59, 0x51, 0x54, 0x53, 0x55, 0x5e, 0x5b, 0x55, 0x5c, 0x52, 0x57, 0x58, 0x52, 0x54, 0x5e,
			/* [0x1f00] */ 0xe7, 0xed, 0xed, 0xe8, 0xee, 0xeb, 0xe3, 0xe5, 0xe0, 0xe6, 0xe6, 0xef, 0xe9, 0xe0, 0xea, 0xe3,
			/* [0x1f10] */ 0xe1, 0xe4, 0xe2, 0xe7, 0xe8, 0xe2, 0xe5, 0xec, 0xeb, 0xe1, 0xec, 0xea, 0xe4, 0xee, 0xef, 0xe9,
			/* [0x1f20] */ 0xea, 0xe3, 0xe6, 0xef, 0xe9, 0xe0, 0xe0, 0xe6, 0xec, 0xea, 0xeb, 0xe1, 0xe7, 0xed, 0xed, 0xe8,
			/* [0x1f30] */ 0xef, 0xe9, 0xe1, 0xe4, 0xe3, 0xe5, 0xee, 0xeb, 0xe5, 0xec, 0xe2, 0xe7, 0xe8, 0xe2, 0xe4, 0xee,
			/* [0x1f40] */ 0x27, 0x2d, 0x2d, 0x28, 0x2e, 0x2b, 0x23, 0x25, 0x20, 0x26, 0x26, 0x2f, 0x29, 0x20, 0x2a, 0x23,
			/* [0x1f50] */ 0x21, 0x24, 0x22, 0x27, 0x28, 0x22, 0x25, 0x2c, 0x2b, 0x21, 0x2c, 0x2a, 0x24, 0x2e, 0x2f, 0x29,
			/* [0x1f60] */ 0x2a, 0x23, 0x26, 0x2f, 0x29, 0x20, 0x20, 0x26, 0x2c, 0x2a, 0x2b, 0x21, 0x27, 0x2d, 0x2d, 0x28,
			/* [0x1f70] */ 0x2f, 0x29, 0x21, 0x24, 0x23, 0x25, 0x2e, 0x2b, 0x25, 0x2c, 0x22, 0x27, 0x28, 0x22, 0x24, 0x2e,
			/* [0x1f80] */ 0x77, 0x7d, 0x7d, 0x78, 0x7e, 0x7b, 0x73, 0x75, 0x70, 0x76, 0x76, 0x7f, 0x79, 0x70, 0x7a, 0x73,
			/* [0x1f90] */ 0x71, 0x74, 0x72, 0x77, 0x78, 0x72, 0x75, 0x7c, 0x7b, 0x71, 0x7c, 0x7a, 0x74, 0x7e, 0x7f, 0x79,
			/* [0x1fa0] */ 0x7a, 0x73, 0x76, 0x7f, 0x79, 0x70, 0x70, 0x76, 0x7c, 0x7a, 0x7b, 0x71, 0x77, 0x7d, 0x7d, 0x78,
			/* [0x1fb0] */ 0x7f, 0x79, 0x71, 0x74, 0x73, 0x75, 0x7e, 0x7b, 0x75, 0x7c, 0x72, 0x77, 0x78, 0x72, 0x74, 0x7e,
			/* [0x1fc0] */ 0xc7, 0xcd, 0xcd, 0xc8, 0xce, 0xcb, 0xc3, 0xc5, 0xc0, 0xc6, 0xc6, 0xcf, 0xc9, 0xc0, 0xca, 0xc3,
			/* [0x1fd0] */ 0xc1, 0xc4, 0xc2, 0xc7, 0xc8, 0xc2, 0xc5, 0xcc, 0xcb, 0xc1, 0xcc, 0xca, 0xc4, 0xce, 0xcf, 0xc9,
			/* [0x1fe0] */ 0xca, 0xc3, 0xc6, 0xcf, 0xc9, 0xc0, 0xc0, 0xc6, 0xcc, 0xca, 0xcb, 0xc1, 0xc7, 0xcd, 0xcd, 0xc8,
			/* [0x1ff0] */ 0xcf, 0xc9, 0xc1, 0xc4, 0xc3, 0xc5, 0xce, 0xcb, 0xc5, 0xcc, 0xc2, 0xc7, 0xc8, 0xc2, 0xc4, 0xce,
			/* [0x2000] */ 0x2c, 0x2a, 0x21, 0x2f, 0x2a, 0x24, 0x2f, 0x22, 0x29, 0x27, 0x22, 0x2c, 0x26, 0x29, 0x28, 0x25,
			/* [0x2010] */ 0x20, 0x26, 0x2d, 0x21, 0x23, 0x2d, 0x24, 0x2e, 0x2e, 0x20, 0x27, 0x2b, 0x25, 0x23, 0x2b, 0x28,
			/* [0x2020] */ 0x29, 0x24, 0x2e, 0x23, 0x2f, 0x22, 0x25, 0x2c, 0x22, 0x29, 0x28, 0x25, 0x2c, 0x2f, 0x23, 0x2a,
			/* [0x2030] */ 0x27, 0x2b, 0x20, 0x2e, 0x24, 0x21, 0x2a, 0x27, 0x21, 0x26, 0x2d, 0x20, 0x2b, 0x28, 0x26, 0x2d,
			/* [0x2040] */ 0xec, 0xea, 0xe1, 0xef, 0xea, 0xe4, 0xef, 0xe2, 0xe9, 0xe7, 0xe2, 0xec, 0xe6, 0xe9, 0xe8, 0xe5,
			/* [0x2050] */ 0xe0, 0xe6, 0xed, 0xe1, 0xe3, 0xed, 0xe4, 0xee, 0xee, 0xe0, 0xe7, 0xeb, 0xe5, 0xe3, 0xeb, 0xe8,
			/* [0x2060] */ 0xe9, 0xe4, 0xee, 0xe3, 0xef, 0xe2, 0xe5, 0xec, 0xe2, 0xe9, 0xe8, 0xe5, 0xec, 0xef, 0xe3, 0xea,
			/* [0x2070] */ 0xe7, 0xeb, 0xe0, 0xee, 0xe4, 0xe1, 0xea, 0xe7, 0xe1, 0xe6, 0xed, 0xe0, 0xeb, 0xe8, 0xe6, 0xed,
			/* [0x2080] */ 0xcc, 0xca, 0xc1, 0xcf, 0xca, 0xc4, 0xcf, 0xc2, 0xc9, 0xc7, 0xc2, 0xcc, 0xc6, 0xc9, 0xc8, 0xc5,
			/* [0x2090] */ 0xc0, 0xc6, 0xcd, 0xc1, 0xc3, 0xcd, 0xc4, 0xce, 0xce, 0xc0, 0xc7, 0xcb, 0xc5, 0xc3, 0xcb, 0xc8,
			/* [0x20a0] */ 0xc9, 0xc4, 0xce, 0xc3, 0xcf, 0xc2, 0xc5, 0xcc, 0xc2, 0xc9, 0xc8, 0xc5, 0xcc, 0xcf, 0xc3, 0xca,
			/* [0x20b0] */ 0xc7, 0xcb, 0xc0, 0xce, 0xc4, 0xc1, 0xca, 0xc7, 0xc1, 0xc6, 0xcd, 0xc0, 0xcb, 0xc8, 0xc6, 0xcd,
			/* [0x20c0] */ 0xbc, 0xba, 0xb1, 0xbf, 0xba, 0xb4, 0xbf, 0xb2, 0xb9, 0xb7, 0xb2, 0xbc, 0xb6, 0xb9, 0xb8, 0xb5,
			/* [0x20d0] */ 0xb0, 0xb6, 0xbd, 0xb1, 0xb3, 0xbd, 0xb4, 0xbe, 0xbe, 0xb0, 0xb7, 0xbb, 0xb5, 0xb3, 0xbb, 0xb8,
			/* [0x20e0] */ 0xb9, 0xb4, 0xbe, 0xb3, 0xbf, 0xb2, 0xb5, 0xbc, 0xb2, 0xb9, 0xb8, 0xb5, 0xbc, 0xbf, 0xb3, 0xba,
			/* [0x20f0] */ 0xb7, 0xbb, 0xb0, 0xbe, 0xb4, 0xb1, 0xba, 0xb7, 0xb1, 0xb6, 0xbd, 0xb0, 0xbb, 0xb8, 0xb6, 0xbd,
			/* [0x2100] */ 0x4c, 0x4a, 0x41, 0x4f, 0x4a, 0x44, 0x4f, 0x42, 0x49, 0x47, 0x42, 0x4c, 0x46, 0x49, 0x48, 0x45,
			/* [0x2110] */ 0x40, 0x46, 0x4d, 0x41, 0x43, 0x4d, 0x44, 0x4e, 0x4e, 0x40, 0x47, 0x4b, 0x45, 0x43, 0x4b, 0x48,
			/* [0x2120] */ 0x49, 0x44, 0x4e, 0x43, 0x4f, 0x42, 0x45, 0x4c, 0x42, 0x49, 0x48, 0x45, 0x4c, 0x4f, 0x43, 0x4a,
			/* [0x2130] */ 0x47, 0x4b, 0x40, 0x4e, 0x44, 0x41, 0x4a, 0x47, 0x41, 0x46, 0x4d, 0x40, 0x4b, 0x48, 0x46, 0x4d,
			/* [0x2140] */ 0x2c, 0x2a, 0x21, 0x2f, 0x2a, 0x24, 0x2f, 0x22, 0x29, 0x27, 0x22, 0x2c, 0x26, 0x29, 0x28, 0x25,
			/* [0x2150] */ 0x20, 0x26, 0x2d, 0x21, 0x23, 0x2d, 0x24, 0x2e, 0x2e, 0x20, 0x27, 0x2b, 0x25, 0x23, 0x2b, 0x28,
			/* [0x2160] */ 0x29, 0x24, 0x2e, 0x23, 0x2f, 0x22, 0x25, 0x2c, 0x22, 0x29, 0x28, 0x25, 0x2c, 0x2f, 0x23, 0x2a,
			/* [0x2170] */ 0x27, 0x2b, 0x20, 0x2e, 0x24, 0x21, 0x2a, 0x27, 0x21, 0x26, 0x2d, 0x20, 0x2b, 0x28, 0x26, 0x2d,
			/* [0x2180] */ 0x1c, 0x1a, 0x11, 0x1f, 0x1a, 0x14, 0x1f, 0x12, 0x19, 0x17, 0x12, 0x1c, 0x16, 0x19, 0x18, 0x15,
			/* [0x2190] */ 0x10, 0x16, 0x1d, 0x11, 0x13, 0x1d, 0x14, 0x1e, 0x1e, 0x10, 0x17, 0x1b, 0x15, 0x13, 0x1b, 0x18,
			/* [0x21a0] */ 0x19, 0x14, 0x1e, 0x13, 0x1f, 0x12, 0x15, 0x1c, 0x12, 0x19, 0x18, 0x15, 0x1c, 0x1f, 0x13, 0x1a,
			/* [0x21b0] */ 0x17, 0x1b, 0x10, 0x1e, 0x14, 0x11, 0x1a, 0x17, 0x11, 0x16, 0x1d, 0x10, 0x1b, 0x18, 0x16, 0x1d,
			/* [0x21c0] */ 0xcc, 0xca, 0xc1, 0xcf, 0xca, 0xc4, 0xcf, 0xc2, 0xc9, 0xc7, 0xc2, 0xcc, 0xc6, 0xc9, 0xc8, 0xc5,
			/* [0x21d0] */ 0xc0, 0xc6, 0xcd, 0xc1, 0xc3, 0xcd, 0xc4, 0xce, 0xce, 0xc0, 0xc7, 0xcb, 0xc5, 0xc3, 0xcb, 0xc8,
			/* [0x21e0] */ 0xc9, 0xc4, 0xce, 0xc3, 0xcf, 0xc2, 0xc5, 0xcc, 0xc2, 0xc9, 0xc8, 0xc5, 0xcc, 0xcf, 0xc3, 0xca,
			/* [0x21f0] */ 0xc7, 0xcb, 0xc0, 0xce, 0xc4, 0xc1, 0xca, 0xc7, 0xc1, 0xc6, 0xcd, 0xc0, 0xcb, 0xc8, 0xc6, 0xcd,
			/* [0x2200] */ 0x7c, 0x7a, 0x71, 0x7f, 0x7a, 0x74, 0x7f, 0x72, 0x79, 0x77, 0x72, 0x7c, 0x76, 0x79, 0x78, 0x75,
			/* [0x2210] */ 0x70, 0x76, 0x7d, 0x71, 0x73, 0x7d, 0x74, 0x7e, 0x7e, 0x70, 0x77, 0x7b, 0x75, 0x73, 0x7b, 0x78,
			/* [0x2220] */ 0x79, 0x74, 0x7e, 0x73, 0x7f, 0x72, 0x75, 0x7c, 0x72, 0x79, 0x78, 0x75, 0x7c, 0x7f, 0x73, 0x7a,
			/* [0x2230] */ 0x77, 0x7b, 0x70, 0x7e, 0x74, 0x71, 0x7a, 0x77, 0x71, 0x76, 0x7d, 0x70, 0x7b, 0x78, 0x76, 0x7d,
			/* [0x2240] */ 0x4c, 0x4a, 0x41, 0x4f, 0x4a, 0x44, 0x4f, 0x42, 0x49, 0x47, 0x42, 0x4c, 0x46, 0x49, 0x48, 0x45,
			/* [0x2250] */ 0x40, 0x46, 0x4d, 0x41, 0x43, 0x4d, 0x44, 0x4e, 0x4e, 0x40, 0x47, 0x4b, 0x45, 0x43, 0x4b, 0x48,
			/* [0x2260] */ 0x49, 0x44, 0x4e, 0x43, 0x4f, 0x42, 0x45, 0x4c, 0x42, 0x49, 0x48, 0x45, 0x4c, 0x4f, 0x43, 0x4a,
			/* [0x2270] */ 0x47, 0x4b, 0x40, 0x4e, 0x44, 0x41, 0x4a, 0x47, 0x41, 0x46, 0x4d, 0x40, 0x4b, 0x48, 0x46, 0x4d,
			/* [0x2280] */ 0xac, 0xaa, 0xa1, 0xaf, 0xaa, 0xa4, 0xaf, 0xa2, 0xa9, 0xa7, 0xa2, 0xac, 0xa6, 0xa9, 0xa8, 0xa5,
			/* [0x2290] */ 0xa0, 0xa6, 0xad, 0xa1, 0xa3, 0xad, 0xa4, 0xae, 0xae, 0xa0, 0xa7, 0xab, 0xa5, 0xa3, 0xab, 0xa8,
			/* [0x22a0] */ 0xa9, 0xa4, 0xae, 0xa3, 0xaf, 0xa2, 0xa5, 0xac, 0xa2, 0xa9, 0xa8, 0xa5, 0xac, 0xaf, 0xa3, 0xaa,
			/* [0x22b0] */ 0xa7, 0xab, 0xa0, 0xae, 0xa4, 0xa1, 0xaa, 0xa7, 0xa1, 0xa6, 0xad, 0xa0, 0xab, 0xa8, 0xa6, 0xad,
			/* [0x22c0] */ 0x7c, 0x7a, 0x71, 0x7f, 0x7a, 0x74, 0x7f, 0x72, 0x79, 0x77, 0x72, 0x7c, 0x76, 0x79, 0x78, 0x75,
			/* [0x22d0] */ 0x70, 0x76, 0x7d, 0x71, 0x73, 0x7d, 0x74, 0x7e, 0x7e, 0x70, 0x77, 0x7b, 0x75, 0x73, 0x7b, 0x78,
			/* [0x22e0] */ 0x79, 0x74, 0x7e, 0x73, 0x7f, 0x72, 0x75, 0x7c, 0x72, 0x79, 0x78, 0x75, 0x7c, 0x7f, 0x73, 0x7a,
			/* [0x22f0] */ 0x77, 0x7b, 0x70, 0x7e, 0x74, 0x71, 0x7a, 0x77, 0x71, 0x76, 0x7d, 0x70, 0x7b, 0x78, 0x76, 0x7d,
			/* [0x2300] */ 0xbc, 0xba, 0xb1, 0xbf, 0xba, 0xb4, 0xbf, 0xb2, 0xb9, 0xb7, 0xb2, 0xbc, 0xb6, 0xb9, 0xb8, 0xb5,
			/* [0x2310] */ 0xb0, 0xb6, 0xbd, 0xb1, 0xb3, 0xbd, 0xb4, 0xbe, 0xbe, 0xb0, 0xb7, 0xbb, 0xb5, 0xb3, 0xbb, 0xb8,
			/* [0x2320] */ 0xb9, 0xb4, 0xbe, 0xb3, 0xbf, 0xb2, 0xb5, 0xbc, 0xb2, 0xb9, 0xb8, 0xb5, 0xbc, 0xbf, 0xb3, 0xba,
			/* [0x2330] */ 0xb7, 0xbb, 0xb0, 0xbe, 0xb4, 0xb1, 0xba, 0xb7, 0xb1, 0xb6, 0xbd, 0xb0, 0xbb, 0xb8, 0xb6, 0xbd,
			/* [0x2340] */ 0xdc, 0xda, 0xd1, 0xdf, 0xda, 0xd4, 0xdf, 0xd2, 0xd9, 0xd7, 0xd2, 0xdc, 0xd6, 0xd9, 0xd8, 0xd5,
			/* [0x2350] */ 0xd0, 0xd6, 0xdd, 0xd1, 0xd3, 0xdd, 0xd4, 0xde, 0xde, 0xd0, 0xd7, 0xdb, 0xd5, 0xd3, 0xdb, 0xd8,
			/* [0x2360] */ 0xd9, 0xd4, 0xde, 0xd3, 0xdf, 0xd2, 0xd5, 0xdc, 0xd2, 0xd9, 0xd8, 0xd5, 0xdc, 0xdf, 0xd3, 0xda,
			/* [0x2370] */ 0xd7, 0xdb, 0xd0, 0xde, 0xd4, 0xd1, 0xda, 0xd7, 0xd1, 0xd6, 0xdd, 0xd0, 0xdb, 0xd8, 0xd6, 0xdd,
			/* [0x2380] */ 0x6c, 0x6a, 0x61, 0x6f, 0x6a, 0x64, 0x6f, 0x62, 0x69, 0x67, 0x62, 0x6c, 0x66, 0x69, 0x68, 0x65,
			/* [0x2390] */ 0x60, 0x66, 0x6d, 0x61, 0x63, 0x6d, 0x64, 0x6e, 0x6e, 0x60, 0x67, 0x6b, 0x65, 0x63, 0x6b, 0x68,
			/* [0x23a0] */ 0x69, 0x64, 0x6e, 0x63, 0x6f, 0x62, 0x65, 0x6c, 0x62, 0x69, 0x68, 0x65, 0x6c, 0x6f, 0x63, 0x6a,
			/* [0x23b0] */ 0x67, 0x6b, 0x60, 0x6e, 0x64, 0x61, 0x6a, 0x67, 0x61, 0x66, 0x6d, 0x60, 0x6b, 0x68, 0x66, 0x6d,
			/* [0x23c0] */ 0x1c, 0x1a, 0x11, 0x1f, 0x1a, 0x14, 0x1f, 0x12, 0x19, 0x17, 0x12, 0x1c, 0x16, 0x19, 0x18, 0x15,
			/* [0x23d0] */ 0x10, 0x16, 0x1d, 0x11, 0x13, 0x1d, 0x14, 0x1e, 0x1e, 0x10, 0x17, 0x1b, 0x15, 0x13, 0x1b, 0x18,
			/* [0x23e0] */ 0x19, 0x14, 0x1e, 0x13, 0x1f, 0x12, 0x15, 0x1c, 0x12, 0x19, 0x18, 0x15, 0x1c, 0x1f, 0x13, 0x1a,
			/* [0x23f0] */ 0x17, 0x1b, 0x10, 0x1e, 0x14, 0x11, 0x1a, 0x17, 0x11, 0x16, 0x1d, 0x10, 0x1b, 0x18, 0x16, 0x1d,
			/* [0x2400] */ 0x8c, 0x8a, 0x81, 0x8f, 0x8a, 0x84, 0x8f, 0x82, 0x89, 0x87, 0x82, 0x8c, 0x86, 0x89, 0x88, 0x85,
			/* [0x2410] */ 0x80, 0x86, 0x8d, 0x81, 0x83, 0x8d, 0x84, 0x8e, 0x8e, 0x80, 0x87, 0x8b, 0x85, 0x83, 0x8b, 0x88,
			/* [0x2420] */ 0x89, 0x84, 0x8e, 0x83, 0x8f, 0x82, 0x85, 0x8c, 0x82, 0x89, 0x88, 0x85, 0x8c, 0x8f, 0x83, 0x8a,
			/* [0x2430] */ 0x87, 0x8b, 0x80, 0x8e, 0x84, 0x81, 0x8a, 0x87, 0x81, 0x86, 0x8d, 0x80, 0x8b, 0x88, 0x86, 0x8d,
			/* [0x2440] */ 0x5c, 0x5a, 0x51, 0x5f, 0x5a, 0x54, 0x5f, 0x52, 0x59, 0x57, 0x52, 0x5c, 0x56, 0x59, 0x58, 0x55,
			/* [0x2450] */ 0x50, 0x56, 0x5d, 0x51, 0x53, 0x5d, 0x54, 0x5e, 0x5e, 0x50, 0x57, 0x5b, 0x55, 0x53, 0x5b, 0x58,
			/* [0x2460] */ 0x59, 0x54, 0x5e, 0x53, 0x5f, 0x52, 0x55, 0x5c, 0x52, 0x59, 0x58, 0x55, 0x5c, 0x5f, 0x53, 0x5a,
			/* [0x2470] */ 0x57, 0x5b, 0x50, 0x5e, 0x54, 0x51, 0x5a, 0x57, 0x51, 0x56, 0x5d, 0x50, 0x5b, 0x58, 0x56, 0x5d,
			/* [0x2480] */ 0x5c, 0x5a, 0x51, 0x5f, 0x5a, 0x54, 0x5f, 0x52, 0x59, 0x57, 0x52, 0x5c, 0x56, 0x59, 0x58, 0x55,
			/* [0x2490] */ 0x50, 0x56, 0x5d, 0x51, 0x53, 0x5d, 0x54, 0x5e, 0x5e, 0x50, 0x57, 0x5b, 0x55, 0x53, 0x5b, 0x58,
			/* [0x24a0] */ 0x59, 0x54, 0x5e, 0x53, 0x5f, 0x52, 0x55, 0x5c, 0x52, 0x59, 0x58, 0x55, 0x5c, 0x5f, 0x53, 0x5a,
			/* [0x24b0] */ 0x57, 0x5b, 0x50, 0x5e, 0x54, 0x51, 0x5a, 0x57, 0x51, 0x56, 0x5d, 0x50, 0x5b, 0x58, 0x56, 0x5d,
			/* [0x24c0] */ 0x0c, 0x0a, 0x01, 0x0f, 0x0a, 0x04, 0x0f, 0x02, 0x09, 0x07, 0x02, 0x0c, 0x06, 0x09, 0x08, 0x05,
			/* [0x24d0] */ 0x00, 0x06, 0x0d, 0x01, 0x03, 0x0d, 0x04, 0x0e, 0x0e, 0x00, 0x07, 0x0b, 0x05, 0x03, 0x0b, 0x08,
			/* [0x24e0] */ 0x09, 0x04, 0x0e, 0x03, 0x0f, 0x02, 0x05, 0x0c, 0x02, 0x09, 0x08, 0x05, 0x0c, 0x0f, 0x03, 0x0a,
			/* [0x24f0] */ 0x07, 0x0b, 0x00, 0x0e, 0x04, 0x01, 0x0a, 0x07, 0x01, 0x06, 0x0d, 0x00, 0x0b, 0x08, 0x06, 0x0d,
			/* [0x2500] */ 0x3c, 0x3a, 0x31, 0x3f, 0x3a, 0x34, 0x3f, 0x32, 0x39, 0x37, 0x32, 0x3c, 0x36, 0x39, 0x38, 0x35,
			/* [0x2510] */ 0x30, 0x36, 0x3d, 0x31, 0x33, 0x3d, 0x34, 0x3e, 0x3e, 0x30, 0x37, 0x3b, 0x35, 0x33, 0x3b, 0x38,
			/* [0x2520] */ 0x39, 0x34, 0x3e, 0x33, 0x3f, 0x32, 0x35, 0x3c, 0x32, 0x39, 0x38, 0x35, 0x3c, 0x3f, 0x33, 0x3a,
			/* [0x2530] */ 0x37, 0x3b, 0x30, 0x3e, 0x34, 0x31, 0x3a, 0x37, 0x31, 0x36, 0x3d, 0x30, 0x3b, 0x38, 0x36, 0x3d,
			/* [0x2540] */ 0xfc, 0xfa, 0xf1, 0xff, 0xfa, 0xf4, 0xff, 0xf2, 0xf9, 0xf7, 0xf2, 0xfc, 0xf6, 0xf9, 0xf8, 0xf5,
			/* [0x2550] */ 0xf0, 0xf6, 0xfd, 0xf1, 0xf3, 0xfd, 0xf4, 0xfe, 0xfe, 0xf0, 0xf7, 0xfb, 0xf5, 0xf3, 0xfb, 0xf8,
			/* [0x2560] */ 0xf9, 0xf4, 0xfe, 0xf3, 0xff, 0xf2, 0xf5, 0xfc, 0xf2, 0xf9, 0xf8, 0xf5, 0xfc, 0xff, 0xf3, 0xfa,
			/* [0x2570] */ 0xf7, 0xfb, 0xf0, 0xfe, 0xf4, 0xf1, 0xfa, 0xf7, 0xf1, 0xf6, 0xfd, 0xf0, 0xfb, 0xf8, 0xf6, 0xfd,
			/* [0x2580] */ 0xfc, 0xfa, 0xf1, 0xff, 0xfa, 0xf4, 0xff, 0xf2, 0xf9, 0xf7, 0xf2, 0xfc, 0xf6, 0xf9, 0xf8, 0xf5,
			/* [0x2590] */ 0xf0, 0xf6, 0xfd, 0xf1, 0xf3, 0xfd, 0xf4, 0xfe, 0xfe, 0xf0, 0xf7, 0xfb, 0xf5, 0xf3, 0xfb, 0xf8,
			/* [0x25a0] */ 0xf9, 0xf4, 0xfe, 0xf3, 0xff, 0xf2, 0xf5, 0xfc, 0xf2, 0xf9, 0xf8, 0xf5, 0xfc, 0xff, 0xf3, 0xfa,
			/* [0x25b0] */ 0xf7, 0xfb, 0xf0, 0xfe, 0xf4, 0xf1, 0xfa, 0xf7, 0xf1, 0xf6, 0xfd, 0xf0, 0xfb, 0xf8, 0xf6, 0xfd,
			/* [0x25c0] */ 0xac, 0xaa, 0xa1, 0xaf, 0xaa, 0xa4, 0xaf, 0xa2, 0xa9, 0xa7, 0xa2, 0xac, 0xa6, 0xa9, 0xa8, 0xa5,
			/* [0x25d0] */ 0xa0, 0xa6, 0xad, 0xa1, 0xa3, 0xad, 0xa4, 0xae, 0xae, 0xa0, 0xa7, 0xab, 0xa5, 0xa3, 0xab, 0xa8,
			/* [0x25e0] */ 0xa9, 0xa4, 0xae, 0xa3, 0xaf, 0xa2, 0xa5, 0xac, 0xa2, 0xa9, 0xa8, 0xa5, 0xac, 0xaf, 0xa3, 0xaa,
			/* [0x25f0] */ 0xa7, 0xab, 0xa0, 0xae, 0xa4, 0xa1, 0xaa, 0xa7, 0xa1, 0xa6, 0xad, 0xa0, 0xab, 0xa8, 0xa6, 0xad,
			/* [0x2600] */ 0xdc, 0xda, 0xd1, 0xdf, 0xda, 0xd4, 0xdf, 0xd2, 0xd9, 0xd7, 0xd2, 0xdc, 0xd6, 0xd9, 0xd8, 0xd5,
			/* [0x2610] */ 0xd0, 0xd6, 0xdd, 0xd1, 0xd3, 0xdd, 0xd4, 0xde, 0xde, 0xd0, 0xd7, 0xdb, 0xd5, 0xd3, 0xdb, 0xd8,
			/* [0x2620] */ 0xd9, 0xd4, 0xde, 0xd3, 0xdf, 0xd2, 0xd5, 0xdc, 0xd2, 0xd9, 0xd8, 0xd5, 0xdc, 0xdf, 0xd3, 0xda,
			/* [0x2630] */ 0xd7, 0xdb, 0xd0, 0xde, 0xd4, 0xd1, 0xda, 0xd7, 0xd1, 0xd6, 0xdd, 0xd0, 0xdb, 0xd8, 0xd6, 0xdd,
			/* [0x2640] */ 0x3c, 0x3a, 0x31, 0x3f, 0x3a, 0x34, 0x3f, 0x32, 0x39, 0x37, 0x32, 0x3c, 0x36, 0x39, 0x38, 0x35,
			/* [0x2650] */ 0x30, 0x36, 0x3d, 0x31, 0x33, 0x3d, 0x34, 0x3e, 0x3e, 0x30, 0x37, 0x3b, 0x35, 0x33, 0x3b, 0x38,
			/* [0x2660] */ 0x39, 0x34, 0x3e, 0x33, 0x3f, 0x32, 0x35, 0x3c, 0x32, 0x39, 0x38, 0x35, 0x3c, 0x3f, 0x33, 0x3a,
			/* [0x2670] */ 0x37, 0x3b, 0x30, 0x3e, 0x34, 0x31, 0x3a, 0x37, 0x31, 0x36, 0x3d, 0x30, 0x3b, 0x38, 0x36, 0x3d,
			/* [0x2680] */ 0x0c, 0x0a, 0x01, 0x0f, 0x0a, 0x04, 0x0f, 0x02, 0x09, 0x07, 0x02, 0x0c, 0x06, 0x09, 0x08, 0x05,
			/* [0x2690] */ 0x00, 0x06, 0x0d, 0x01, 0x03, 0x0d, 0x04, 0x0e, 0x0e, 0x00, 0x07, 0x0b, 0x05, 0x03, 0x0b, 0x08,
			/* [0x26a0] */ 0x09, 0x04, 0x0e, 0x03, 0x0f, 0x02, 0x05, 0x0c, 0x02, 0x09, 0x08, 0x05, 0x0c, 0x0f, 0x03, 0x0a,
			/* [0x26b0] */ 0x07, 0x0b, 0x00, 0x0e, 0x04, 0x01, 0x0a, 0x07, 0x01, 0x06, 0x0d, 0x00, 0x0b, 0x08, 0x06, 0x0d,
			/* [0x26c0] */ 0x9c, 0x9a, 0x91, 0x9f, 0x9a, 0x94, 0x9f, 0x92, 0x99, 0x97, 0x92, 0x9c, 0x96, 0x99, 0x98, 0x95,
			/* [0x26d0] */ 0x90, 0x96, 0x9d, 0x91, 0x93, 0x9d, 0x94, 0x9e, 0x9e, 0x90, 0x97, 0x9b, 0x95, 0x93, 0x9b, 0x98,
			/* [0x26e0] */ 0x99, 0x94, 0x9e, 0x93, 0x9f, 0x92, 0x95, 0x9c, 0x92, 0x99, 0x98, 0x95, 0x9c, 0x9f, 0x93, 0x9a,
			/* [0x26f0] */ 0x97, 0x9b, 0x90, 0x9e, 0x94, 0x91, 0x9a, 0x97, 0x91, 0x96, 0x9d, 0x90, 0x9b, 0x98, 0x96, 0x9d,
			/* [0x2700] */ 0xec, 0xea, 0xe1, 0xef, 0xea, 0xe4, 0xef, 0xe2, 0xe9, 0xe7, 0xe2, 0xec, 0xe6, 0xe9, 0xe8, 0xe5,
			/* [0x2710] */ 0xe0, 0xe6, 0xed, 0xe1, 0xe3, 0xed, 0xe4, 0xee, 0xee, 0xe0, 0xe7, 0xeb, 0xe5, 0xe3, 0xeb, 0xe8,
			/* [0x2720] */ 0xe9, 0xe4, 0xee, 0xe3, 0xef, 0xe2, 0xe5, 0xec, 0xe2, 0xe9, 0xe8, 0xe5, 0xec, 0xef, 0xe3, 0xea,
			/* [0x2730] */ 0xe7, 0xeb, 0xe0, 0xee, 0xe4, 0xe1, 0xea, 0xe7, 0xe1, 0xe6, 0xed, 0xe0, 0xeb, 0xe8, 0xe6, 0xed,
			/* [0x2740] */ 0x8c, 0x8a, 0x81, 0x8f, 0x8a, 0x84, 0x8f, 0x82, 0x89, 0x87, 0x82, 0x8c, 0x86, 0x89, 0x88, 0x85,
			/* [0x2750] */ 0x80, 0x86, 0x8d, 0x81, 0x83, 0x8d, 0x84, 0x8e, 0x8e, 0x80, 0x87, 0x8b, 0x85, 0x83, 0x8b, 0x88,
			/* [0x2760] */ 0x89, 0x84, 0x8e, 0x83, 0x8f, 0x82, 0x85, 0x8c, 0x82, 0x89, 0x88, 0x85, 0x8c, 0x8f, 0x83, 0x8a,
			/* [0x2770] */ 0x87, 0x8b, 0x80, 0x8e, 0x84, 0x81, 0x8a, 0x87, 0x81, 0x86, 0x8d, 0x80, 0x8b, 0x88, 0x86, 0x8d,
			/* [0x2780] */ 0x9c, 0x9a, 0x91, 0x9f, 0x9a, 0x94, 0x9f, 0x92, 0x99, 0x97, 0x92, 0x9c, 0x96, 0x99, 0x98, 0x95,
			/* [0x2790] */ 0x90, 0x96, 0x9d, 0x91, 0x93, 0x9d, 0x94, 0x9e, 0x9e, 0x90, 0x97, 0x9b, 0x95, 0x93, 0x9b, 0x98,
			/* [0x27a0] */ 0x99, 0x94, 0x9e, 0x93, 0x9f, 0x92, 0x95, 0x9c, 0x92, 0x99, 0x98, 0x95, 0x9c, 0x9f, 0x93, 0x9a,
			/* [0x27b0] */ 0x97, 0x9b, 0x90, 0x9e, 0x94, 0x91, 0x9a, 0x97, 0x91, 0x96, 0x9d, 0x90, 0x9b, 0x98, 0x96, 0x9d,
			/* [0x27c0] */ 0x6c, 0x6a, 0x61, 0x6f, 0x6a, 0x64, 0x6f, 0x62, 0x69, 0x67, 0x62, 0x6c, 0x66, 0x69, 0x68, 0x65,
			/* [0x27d0] */ 0x60, 0x66, 0x6d, 0x61, 0x63, 0x6d, 0x64, 0x6e, 0x6e, 0x60, 0x67, 0x6b, 0x65, 0x63, 0x6b, 0x68,
			/* [0x27e0] */ 0x69, 0x64, 0x6e, 0x63, 0x6f, 0x62, 0x65, 0x6c, 0x62, 0x69, 0x68, 0x65, 0x6c, 0x6f, 0x63, 0x6a,
			/* [0x27f0] */ 0x67, 0x6b, 0x60, 0x6e, 0x64, 0x61, 0x6a, 0x67, 0x61, 0x66, 0x6d, 0x60, 0x6b, 0x68, 0x66, 0x6d,
			/* [0x2800] */ 0x4c, 0x4a, 0x41, 0x4f, 0x4a, 0x44, 0x4f, 0x42, 0x49, 0x47, 0x42, 0x4c, 0x46, 0x49, 0x48, 0x45,
			/* [0x2810] */ 0x40, 0x46, 0x4d, 0x41, 0x43, 0x4d, 0x44, 0x4e, 0x4e, 0x40, 0x47, 0x4b, 0x45, 0x43, 0x4b, 0x48,
			/* [0x2820] */ 0x49, 0x44, 0x4e, 0x43, 0x4f, 0x42, 0x45, 0x4c, 0x42, 0x49, 0x48, 0x45, 0x4c, 0x4f, 0x43, 0x4a,
			/* [0x2830] */ 0x47, 0x4b, 0x40, 0x4e, 0x44, 0x41, 0x4a, 0x47, 0x41, 0x46, 0x4d, 0x40, 0x4b, 0x48, 0x46, 0x4d,
			/* [0x2840] */ 0xbc, 0xba, 0xb1, 0xbf, 0xba, 0xb4, 0xbf, 0xb2, 0xb9, 0xb7, 0xb2, 0xbc, 0xb6, 0xb9, 0xb8, 0xb5,
			/* [0x2850] */ 0xb0, 0xb6, 0xbd, 0xb1, 0xb3, 0xbd, 0xb4, 0xbe, 0xbe, 0xb0, 0xb7, 0xbb, 0xb5, 0xb3, 0xbb, 0xb8,
			/* [0x2860] */ 0xb9, 0xb4, 0xbe, 0xb3, 0xbf, 0xb2, 0xb5, 0xbc, 0xb2, 0xb9, 0xb8, 0xb5, 0xbc, 0xbf, 0xb3, 0xba,
			/* [0x2870] */ 0xb7, 0xbb, 0xb0, 0xbe, 0xb4, 0xb1, 0xba, 0xb7, 0xb1, 0xb6, 0xbd, 0xb0, 0xbb, 0xb8, 0xb6, 0xbd,
			/* [0x2880] */ 0x2c, 0x2a, 0x21, 0x2f, 0x2a, 0x24, 0x2f, 0x22, 0x29, 0x27, 0x22, 0x2c, 0x26, 0x29, 0x28, 0x25,
			/* [0x2890] */ 0x20, 0x26, 0x2d, 0x21, 0x23, 0x2d, 0x24, 0x2e, 0x2e, 0x20, 0x27, 0x2b, 0x25, 0x23, 0x2b, 0x28,
			/* [0x28a0] */ 0x29, 0x24, 0x2e, 0x23, 0x2f, 0x22, 0x25, 0x2c, 0x22, 0x29, 0x28, 0x25, 0x2c, 0x2f, 0x23, 0x2a,
			/* [0x28b0] */ 0x27, 0x2b, 0x20, 0x2e, 0x24, 0x21, 0x2a, 0x27, 0x21, 0x26, 0x2d, 0x20, 0x2b, 0x28, 0x26, 0x2d,
			/* [0x28c0] */ 0x8c, 0x8a, 0x81, 0x8f, 0x8a, 0x84, 0x8f, 0x82, 0x89, 0x87, 0x82, 0x8c, 0x86, 0x89, 0x88, 0x85,
			/* [0x28d0] */ 0x80, 0x86, 0x8d, 0x81, 0x83, 0x8d, 0x84, 0x8e, 0x8e, 0x80, 0x87, 0x8b, 0x85, 0x83, 0x8b, 0x88,
			/* [0x28e0] */ 0x89, 0x84, 0x8e, 0x83, 0x8f, 0x82, 0x85, 0x8c, 0x82, 0x89, 0x88, 0x85, 0x8c, 0x8f, 0x83, 0x8a,
			/* [0x28f0] */ 0x87, 0x8b, 0x80, 0x8e, 0x84, 0x81, 0x8a, 0x87, 0x81, 0x86, 0x8d, 0x80, 0x8b, 0x88, 0x86, 0x8d,
			/* [0x2900] */ 0x1c, 0x1a, 0x11, 0x1f, 0x1a, 0x14, 0x1f, 0x12, 0x19, 0x17, 0x12, 0x1c, 0x16, 0x19, 0x18, 0x15,
			/* [0x2910] */ 0x10, 0x16, 0x1d, 0x11, 0x13, 0x1d, 0x14, 0x1e, 0x1e, 0x10, 0x17, 0x1b, 0x15, 0x13, 0x1b, 0x18,
			/* [0x2920] */ 0x19, 0x14, 0x1e, 0x13, 0x1f, 0x12, 0x15, 0x1c, 0x12, 0x19, 0x18, 0x15, 0x1c, 0x1f, 0x13, 0x1a,
			/* [0x2930] */ 0x17, 0x1b, 0x10, 0x1e, 0x14, 0x11, 0x1a, 0x17, 0x11, 0x16, 0x1d, 0x10, 0x1b, 0x18, 0x16, 0x1d,
			/* [0x2940] */ 0xcc, 0xca, 0xc1, 0xcf, 0xca, 0xc4, 0xcf, 0xc2, 0xc9, 0xc7, 0xc2, 0xcc, 0xc6, 0xc9, 0xc8, 0xc5,
			/* [0x2950] */ 0xc0, 0xc6, 0xcd, 0xc1, 0xc3, 0xcd, 0xc4, 0xce, 0xce, 0xc0, 0xc7, 0xcb, 0xc5, 0xc3, 0xcb, 0xc8,
			/* [0x2960] */ 0xc9, 0xc4, 0xce, 0xc3, 0xcf, 0xc2, 0xc5, 0xcc, 0xc2, 0xc9, 0xc8, 0xc5, 0xcc, 0xcf, 0xc3, 0xca,
			/* [0x2970] */ 0xc7, 0xcb, 0xc0, 0xce, 0xc4, 0xc1, 0xca, 0xc7, 0xc1, 0xc6, 0xcd, 0xc0, 0xcb, 0xc8, 0xc6, 0xcd,
			/* [0x2980] */ 0xbc, 0xba, 0xb1, 0xbf, 0xba, 0xb4, 0xbf, 0xb2, 0xb9, 0xb7, 0xb2, 0xbc, 0xb6, 0xb9, 0xb8, 0xb5,
			/* [0x2990] */ 0xb0, 0xb6, 0xbd, 0xb1, 0xb3, 0xbd, 0xb4, 0xbe, 0xbe, 0xb0, 0xb7, 0xbb, 0xb5, 0xb3, 0xbb, 0xb8,
			/* [0x29a0] */ 0xb9, 0xb4, 0xbe, 0xb3, 0xbf, 0xb2, 0xb5, 0xbc, 0xb2, 0xb9, 0xb8, 0xb5, 0xbc, 0xbf, 0xb3, 0xba,
			/* [0x29b0] */ 0xb7, 0xbb, 0xb0, 0xbe, 0xb4, 0xb1, 0xba, 0xb7, 0xb1, 0xb6, 0xbd, 0xb0, 0xbb, 0xb8, 0xb6, 0xbd,
			/* [0x29c0] */ 0x7c, 0x7a, 0x71, 0x7f, 0x7a, 0x74, 0x7f, 0x72, 0x79, 0x77, 0x72, 0x7c, 0x76, 0x79, 0x78, 0x75,
			/* [0x29d0] */ 0x70, 0x76, 0x7d, 0x71, 0x73, 0x7d, 0x74, 0x7e, 0x7e, 0x70, 0x77, 0x7b, 0x75, 0x73, 0x7b, 0x78,
			/* [0x29e0] */ 0x79, 0x74, 0x7e, 0x73, 0x7f, 0x72, 0x75, 0x7c, 0x72, 0x79, 0x78, 0x75, 0x7c, 0x7f, 0x73, 0x7a,
			/* [0x29f0] */ 0x77, 0x7b, 0x70, 0x7e, 0x74, 0x71, 0x7a, 0x77, 0x71, 0x76, 0x7d, 0x70, 0x7b, 0x78, 0x76, 0x7d,
			/* [0x2a00] */ 0xac, 0xaa, 0xa1, 0xaf, 0xaa, 0xa4, 0xaf, 0xa2, 0xa9, 0xa7, 0xa2, 0xac, 0xa6, 0xa9, 0xa8, 0xa5,
			/* [0x2a10] */ 0xa0, 0xa6, 0xad, 0xa1, 0xa3, 0xad, 0xa4, 0xae, 0xae, 0xa0, 0xa7, 0xab, 0xa5, 0xa3, 0xab, 0xa8,
			/* [0x2a20] */ 0xa9, 0xa4, 0xae, 0xa3, 0xaf, 0xa2, 0xa5, 0xac, 0xa2, 0xa9, 0xa8, 0xa5, 0xac, 0xaf, 0xa3, 0xaa,
			/* [0x2a30] */ 0xa7, 0xab, 0xa0, 0xae, 0xa4, 0xa1, 0xaa, 0xa7, 0xa1, 0xa6, 0xad, 0xa0, 0xab, 0xa8, 0xa6, 0xad,
			/* [0x2a40] */ 0x1c, 0x1a, 0x11, 0x1f, 0x1a, 0x14, 0x1f, 0x12, 0x19, 0x17, 0x12, 0x1c, 0x16, 0x19, 0x18, 0x15,
			/* [0x2a50] */ 0x10, 0x16, 0x1d, 0x11, 0x13, 0x1d, 0x14, 0x1e, 0x1e, 0x10, 0x17, 0x1b, 0x15, 0x13, 0x1b, 0x18,
			/* [0x2a60] */ 0x19, 0x14, 0x1e, 0x13, 0x1f, 0x12, 0x15, 0x1c, 0x12, 0x19, 0x18, 0x15, 0x1c, 0x1f, 0x13, 0x1a,
			/* [0x2a70] */ 0x17, 0x1b, 0x10, 0x1e, 0x14, 0x11, 0x1a, 0x17, 0x11, 0x16, 0x1d, 0x10, 0x1b, 0x18, 0x16, 0x1d,
			/* [0x2a80] */ 0xdc, 0xda, 0xd1, 0xdf, 0xda, 0xd4, 0xdf, 0xd2, 0xd9, 0xd7, 0xd2, 0xdc, 0xd6, 0xd9, 0xd8, 0xd5,
			/* [0x2a90] */ 0xd0, 0xd6, 0xdd, 0xd1, 0xd3, 0xdd, 0xd4, 0xde, 0xde, 0xd0, 0xd7, 0xdb, 0xd5, 0xd3, 0xdb, 0xd8,
			/* [0x2aa0] */ 0xd9, 0xd4, 0xde, 0xd3, 0xdf, 0xd2, 0xd5, 0xdc, 0xd2, 0xd9, 0xd8, 0xd5, 0xdc, 0xdf, 0xd3, 0xda,
			/* [0x2ab0] */ 0xd7, 0xdb, 0xd0, 0xde, 0xd4, 0xd1, 0xda, 0xd7, 0xd1, 0xd6, 0xdd, 0xd0, 0xdb, 0xd8, 0xd6, 0xdd,
			/* [0x2ac0] */ 0xec, 0xea, 0xe1, 0xef, 0xea, 0xe4, 0xef, 0xe2, 0xe9, 0xe7, 0xe2, 0xec, 0xe6, 0xe9, 0xe8, 0xe5,
			/* [0x2ad0] */ 0xe0, 0xe6, 0xed, 0xe1, 0xe3, 0xed, 0xe4, 0xee, 0xee, 0xe0, 0xe7, 0xeb, 0xe5, 0xe3, 0xeb, 0xe8,
			/* [0x2ae0] */ 0xe9, 0xe4, 0xee, 0xe3, 0xef, 0xe2, 0xe5, 0xec, 0xe2, 0xe9, 0xe8, 0xe5, 0xec, 0xef, 0xe3, 0xea,
			/* [0x2af0] */ 0xe7, 0xeb, 0xe0, 0xee, 0xe4, 0xe1, 0xea, 0xe7, 0xe1, 0xe6, 0xed, 0xe0, 0xeb, 0xe8, 0xe6, 0xed,
			/* [0x2b00] */ 0x7c, 0x7a, 0x71, 0x7f, 0x7a, 0x74, 0x7f, 0x72, 0x79, 0x77, 0x72, 0x7c, 0x76, 0x79, 0x78, 0x75,
			/* [0x2b10] */ 0x70, 0x76, 0x7d, 0x71, 0x73, 0x7d, 0x74, 0x7e, 0x7e, 0x70, 0x77, 0x7b, 0x75, 0x73, 0x7b, 0x78,
			/* [0x2b20] */ 0x79, 0x74, 0x7e, 0x73, 0x7f, 0x72, 0x75, 0x7c, 0x72, 0x79, 0x78, 0x75, 0x7c, 0x7f, 0x73, 0x7a,
			/* [0x2b30] */ 0x77, 0x7b, 0x70, 0x7e, 0x74, 0x71, 0x7a, 0x77, 0x71, 0x76, 0x7d, 0x70, 0x7b, 0x78, 0x76, 0x7d,
			/* [0x2b40] */ 0x2c, 0x2a, 0x21, 0x2f, 0x2a, 0x24, 0x2f, 0x22, 0x29, 0x27, 0x22, 0x2c, 0x26, 0x29, 0x28, 0x25,
			/* [0x2b50] */ 0x20, 0x26, 0x2d, 0x21, 0x23, 0x2d, 0x24, 0x2e, 0x2e, 0x20, 0x27, 0x2b, 0x25, 0x23, 0x2b, 0x28,
			/* [0x2b60] */ 0x29, 0x24, 0x2e, 0x23, 0x2f, 0x22, 0x25, 0x2c, 0x22, 0x29, 0x28, 0x25, 0x2c, 0x2f, 0x23, 0x2a,
			/* [0x2b70] */ 0x27, 0x2b, 0x20, 0x2e, 0x24, 0x21, 0x2a, 0x27, 0x21, 0x26, 0x2d, 0x20, 0x2b, 0x28, 0x26, 0x2d,
			/* [0x2b80] */ 0x8c, 0x8a, 0x81, 0x8f, 0x8a, 0x84, 0x8f, 0x82, 0x89, 0x87, 0x82, 0x8c, 0x86, 0x89, 0x88, 0x85,
			/* [0x2b90] */ 0x80, 0x86, 0x8d, 0x81, 0x83, 0x8d, 0x84, 0x8e, 0x8e, 0x80, 0x87, 0x8b, 0x85, 0x83, 0x8b, 0x88,
			/* [0x2ba0] */ 0x89, 0x84, 0x8e, 0x83, 0x8f, 0x82, 0x85, 0x8c, 0x82, 0x89, 0x88, 0x85, 0x8c, 0x8f, 0x83, 0x8a,
			/* [0x2bb0] */ 0x87, 0x8b, 0x80, 0x8e, 0x84, 0x81, 0x8a, 0x87, 0x81, 0x86, 0x8d, 0x80, 0x8b, 0x88, 0x86, 0x8d,
			/* [0x2bc0] */ 0xdc, 0xda, 0xd1, 0xdf, 0xda, 0xd4, 0xdf, 0xd2, 0xd9, 0xd7, 0xd2, 0xdc, 0xd6, 0xd9, 0xd8, 0xd5,
			/* [0x2bd0] */ 0xd0, 0xd6, 0xdd, 0xd1, 0xd3, 0xdd, 0xd4, 0xde, 0xde, 0xd0, 0xd7, 0xdb, 0xd5, 0xd3, 0xdb, 0xd8,
			/* [0x2be0] */ 0xd9, 0xd4, 0xde, 0xd3, 0xdf, 0xd2, 0xd5, 0xdc, 0xd2, 0xd9, 0xd8, 0xd5, 0xdc, 0xdf, 0xd3, 0xda,
			/* [0x2bf0] */ 0xd7, 0xdb, 0xd0, 0xde, 0xd4, 0xd1, 0xda, 0xd7, 0xd1, 0xd6, 0xdd, 0xd0, 0xdb, 0xd8, 0xd6, 0xdd,
			/* [0x2c00] */ 0xfc, 0xfa, 0xf1, 0xff, 0xfa, 0xf4, 0xff, 0xf2, 0xf9, 0xf7, 0xf2, 0xfc, 0xf6, 0xf9, 0xf8, 0xf5,
			/* [0x2c10] */ 0xf0, 0xf6, 0xfd, 0xf1, 0xf3, 0xfd, 0xf4, 0xfe, 0xfe, 0xf0, 0xf7, 0xfb, 0xf5, 0xf3, 0xfb, 0xf8,
			/* [0x2c20] */ 0xf9, 0xf4, 0xfe, 0xf3, 0xff, 0xf2, 0xf5, 0xfc, 0xf2, 0xf9, 0xf8, 0xf5, 0xfc, 0xff, 0xf3, 0xfa,
			/* [0x2c30] */ 0xf7, 0xfb, 0xf0, 0xfe, 0xf4, 0xf1, 0xfa, 0xf7, 0xf1, 0xf6, 0xfd, 0xf0, 0xfb, 0xf8, 0xf6, 0xfd,
			/* [0x2c40] */ 0x6c, 0x6a, 0x61, 0x6f, 0x6a, 0x64, 0x6f, 0x62, 0x69, 0x67, 0x62, 0x6c, 0x66, 0x69, 0x68, 0x65,
			/* [0x2c50] */ 0x60, 0x66, 0x6d, 0x61, 0x63, 0x6d, 0x64, 0x6e, 0x6e, 0x60, 0x67, 0x6b, 0x65, 0x63, 0x6b, 0x68,
			/* [0x2c60] */ 0x69, 0x64, 0x6e, 0x63, 0x6f, 0x62, 0x65, 0x6c, 0x62, 0x69, 0x68, 0x65, 0x6c, 0x6f, 0x63, 0x6a,
			/* [0x2c70] */ 0x67, 0x6b, 0x60, 0x6e, 0x64, 0x61, 0x6a, 0x67, 0x61, 0x66, 0x6d, 0x60, 0x6b, 0x68, 0x66, 0x6d,
			/* [0x2c80] */ 0x9c, 0x9a, 0x91, 0x9f, 0x9a, 0x94, 0x9f, 0x92, 0x99, 0x97, 0x92, 0x9c, 0x96, 0x99, 0x98, 0x95,
			/* [0x2c90] */ 0x90, 0x96, 0x9d, 0x91, 0x93, 0x9d, 0x94, 0x9e, 0x9e, 0x90, 0x97, 0x9b, 0x95, 0x93, 0x9b, 0x98,
			/* [0x2ca0] */ 0x99, 0x94, 0x9e, 0x93, 0x9f, 0x92, 0x95, 0x9c, 0x92, 0x99, 0x98, 0x95, 0x9c, 0x9f, 0x93, 0x9a,
			/* [0x2cb0] */ 0x97, 0x9b, 0x90, 0x9e, 0x94, 0x91, 0x9a, 0x97, 0x91, 0x96, 0x9d, 0x90, 0x9b, 0x98, 0x96, 0x9d,
			/* [0x2cc0] */ 0xfc, 0xfa, 0xf1, 0xff, 0xfa, 0xf4, 0xff, 0xf2, 0xf9, 0xf7, 0xf2, 0xfc, 0xf6, 0xf9, 0xf8, 0xf5,
			/* [0x2cd0] */ 0xf0, 0xf6, 0xfd, 0xf1, 0xf3, 0xfd, 0xf4, 0xfe, 0xfe, 0xf0, 0xf7, 0xfb, 0xf5, 0xf3, 0xfb, 0xf8,
			/* [0x2ce0] */ 0xf9, 0xf4, 0xfe, 0xf3, 0xff, 0xf2, 0xf5, 0xfc, 0xf2, 0xf9, 0xf8, 0xf5, 0xfc, 0xff, 0xf3, 0xfa,
			/* [0x2cf0] */ 0xf7, 0xfb, 0xf0, 0xfe, 0xf4, 0xf1, 0xfa, 0xf7, 0xf1, 0xf6, 0xfd, 0xf0, 0xfb, 0xf8, 0xf6, 0xfd,
			/* [0x2d00] */ 0xcc, 0xca, 0xc1, 0xcf, 0xca, 0xc4, 0xcf, 0xc2, 0xc9, 0xc7, 0xc2, 0xcc, 0xc6, 0xc9, 0xc8, 0xc5,
			/* [0x2d10] */ 0xc0, 0xc6, 0xcd, 0xc1, 0xc3, 0xcd, 0xc4, 0xce, 0xce, 0xc0, 0xc7, 0xcb, 0xc5, 0xc3, 0xcb, 0xc8,
			/* [0x2d20] */ 0xc9, 0xc4, 0xce, 0xc3, 0xcf, 0xc2, 0xc5, 0xcc, 0xc2, 0xc9, 0xc8, 0xc5, 0xcc, 0xcf, 0xc3, 0xca,
			/* [0x2d30] */ 0xc7, 0xcb, 0xc0, 0xce, 0xc4, 0xc1, 0xca, 0xc7, 0xc1, 0xc6, 0xcd, 0xc0, 0xcb, 0xc8, 0xc6, 0xcd,
			/* [0x2d40] */ 0x0c, 0x0a, 0x01, 0x0f, 0x0a, 0x04, 0x0f, 0x02, 0x09, 0x07, 0x02, 0x0c, 0x06, 0x09, 0x08, 0x05,
			/* [0x2d50] */ 0x00, 0x06, 0x0d, 0x01, 0x03, 0x0d, 0x04, 0x0e, 0x0e, 0x00, 0x07, 0x0b, 0x05, 0x03, 0x0b, 0x08,
			/* [0x2d60] */ 0x09, 0x04, 0x0e, 0x03, 0x0f, 0x02, 0x05, 0x0c, 0x02, 0x09, 0x08, 0x05, 0x0c, 0x0f, 0x03, 0x0a,
			/* [0x2d70] */ 0x07, 0x0b, 0x00, 0x0e, 0x04, 0x01, 0x0a, 0x07, 0x01, 0x06, 0x0d, 0x00, 0x0b, 0x08, 0x06, 0x0d,
			/* [0x2d80] */ 0x5c, 0x5a, 0x51, 0x5f, 0x5a, 0x54, 0x5f, 0x52, 0x59, 0x57, 0x52, 0x5c, 0x56, 0x59, 0x58, 0x55,
			/* [0x2d90] */ 0x50, 0x56, 0x5d, 0x51, 0x53, 0x5d, 0x54, 0x5e, 0x5e, 0x50, 0x57, 0x5b, 0x55, 0x53, 0x5b, 0x58,
			/* [0x2da0] */ 0x59, 0x54, 0x5e, 0x53, 0x5f, 0x52, 0x55, 0x5c, 0x52, 0x59, 0x58, 0x55, 0x5c, 0x5f, 0x53, 0x5a,
			/* [0x2db0] */ 0x57, 0x5b, 0x50, 0x5e, 0x54, 0x51, 0x5a, 0x57, 0x51, 0x56, 0x5d, 0x50, 0x5b, 0x58, 0x56, 0x5d,
			/* [0x2dc0] */ 0x9c, 0x9a, 0x91, 0x9f, 0x9a, 0x94, 0x9f, 0x92, 0x99, 0x97, 0x92, 0x9c, 0x96, 0x99, 0x98, 0x95,
			/* [0x2dd0] */ 0x90, 0x96, 0x9d, 0x91, 0x93, 0x9d, 0x94, 0x9e, 0x9e, 0x90, 0x97, 0x9b, 0x95, 0x93, 0x9b, 0x98,
			/* [0x2de0] */ 0x99, 0x94, 0x9e, 0x93, 0x9f, 0x92, 0x95, 0x9c, 0x92, 0x99, 0x98, 0x95, 0x9c, 0x9f, 0x93, 0x9a,
			/* [0x2df0] */ 0x97, 0x9b, 0x90, 0x9e, 0x94, 0x91, 0x9a, 0x97, 0x91, 0x96, 0x9d, 0x90, 0x9b, 0x98, 0x96, 0x9d,
			/* [0x2e00] */ 0x6c, 0x6a, 0x61, 0x6f, 0x6a, 0x64, 0x6f, 0x62, 0x69, 0x67, 0x62, 0x6c, 0x66, 0x69, 0x68, 0x65,
			/* [0x2e10] */ 0x60, 0x66, 0x6d, 0x61, 0x63, 0x6d, 0x64, 0x6e, 0x6e, 0x60, 0x67, 0x6b, 0x65, 0x63, 0x6b, 0x68,
			/* [0x2e20] */ 0x69, 0x64, 0x6e, 0x63, 0x6f, 0x62, 0x65, 0x6c, 0x62, 0x69, 0x68, 0x65, 0x6c, 0x6f, 0x63, 0x6a,
			/* [0x2e30] */ 0x67, 0x6b, 0x60, 0x6e, 0x64, 0x61, 0x6a, 0x67, 0x61, 0x66, 0x6d, 0x60, 0x6b, 0x68, 0x66, 0x6d,
			/* [0x2e40] */ 0xac, 0xaa, 0xa1, 0xaf, 0xaa, 0xa4, 0xaf, 0xa2, 0xa9, 0xa7, 0xa2, 0xac, 0xa6, 0xa9, 0xa8, 0xa5,
			/* [0x2e50] */ 0xa0, 0xa6, 0xad, 0xa1, 0xa3, 0xad, 0xa4, 0xae, 0xae, 0xa0, 0xa7, 0xab, 0xa5, 0xa3, 0xab, 0xa8,
			/* [0x2e60] */ 0xa9, 0xa4, 0xae, 0xa3, 0xaf, 0xa2, 0xa5, 0xac, 0xa2, 0xa9, 0xa8, 0xa5, 0xac, 0xaf, 0xa3, 0xaa,
			/* [0x2e70] */ 0xa7, 0xab, 0xa0, 0xae, 0xa4, 0xa1, 0xaa, 0xa7, 0xa1, 0xa6, 0xad, 0xa0, 0xab, 0xa8, 0xa6, 0xad,
			/* [0x2e80] */ 0x3c, 0x3a, 0x31, 0x3f, 0x3a, 0x34, 0x3f, 0x32, 0x39, 0x37, 0x32, 0x3c, 0x36, 0x39, 0x38, 0x35,
			/* [0x2e90] */ 0x30, 0x36, 0x3d, 0x31, 0x33, 0x3d, 0x34, 0x3e, 0x3e, 0x30, 0x37, 0x3b, 0x35, 0x33, 0x3b, 0x38,
			/* [0x2ea0] */ 0x39, 0x34, 0x3e, 0x33, 0x3f, 0x32, 0x35, 0x3c, 0x32, 0x39, 0x38, 0x35, 0x3c, 0x3f, 0x33, 0x3a,
			/* [0x2eb0] */ 0x37, 0x3b, 0x30, 0x3e, 0x34, 0x31, 0x3a, 0x37, 0x31, 0x36, 0x3d, 0x30, 0x3b, 0x38, 0x36, 0x3d,
			/* [0x2ec0] */ 0x4c, 0x4a, 0x41, 0x4f, 0x4a, 0x44, 0x4f, 0x42, 0x49, 0x47, 0x42, 0x4c, 0x46, 0x49, 0x48, 0x45,
			/* [0x2ed0] */ 0x40, 0x46, 0x4d, 0x41, 0x43, 0x4d, 0x44, 0x4e, 0x4e, 0x40, 0x47, 0x4b, 0x45, 0x43, 0x4b, 0x48,
			/* [0x2ee0] */ 0x49, 0x44, 0x4e, 0x43, 0x4f, 0x42, 0x45, 0x4c, 0x42, 0x49, 0x48, 0x45, 0x4c, 0x4f, 0x43, 0x4a,
			/* [0x2ef0] */ 0x47, 0x4b, 0x40, 0x4e, 0x44, 0x41, 0x4a, 0x47, 0x41, 0x46, 0x4d, 0x40, 0x4b, 0x48, 0x46, 0x4d,
			/* [0x2f00] */ 0x0c, 0x0a, 0x01, 0x0f, 0x0a, 0x04, 0x0f, 0x02, 0x09, 0x07, 0x02, 0x0c, 0x06, 0x09, 0x08, 0x05,
			/* [0x2f10] */ 0x00, 0x06, 0x0d, 0x01, 0x03, 0x0d, 0x04, 0x0e, 0x0e, 0x00, 0x07, 0x0b, 0x05, 0x03, 0x0b, 0x08,
			/* [0x2f20] */ 0x09, 0x04, 0x0e, 0x03, 0x0f, 0x02, 0x05, 0x0c, 0x02, 0x09, 0x08, 0x05, 0x0c, 0x0f, 0x03, 0x0a,
			/* [0x2f30] */ 0x07, 0x0b, 0x00, 0x0e, 0x04, 0x01, 0x0a, 0x07, 0x01, 0x06, 0x0d, 0x00, 0x0b, 0x08, 0x06, 0x0d,
			/* [0x2f40] */ 0x5c, 0x5a, 0x51, 0x5f, 0x5a, 0x54, 0x5f, 0x52, 0x59, 0x57, 0x52, 0x5c, 0x56, 0x59, 0x58, 0x55,
			/* [0x2f50] */ 0x50, 0x56, 0x5d, 0x51, 0x53, 0x5d, 0x54, 0x5e, 0x5e, 0x50, 0x57, 0x5b, 0x55, 0x53, 0x5b, 0x58,
			/* [0x2f60] */ 0x59, 0x54, 0x5e, 0x53, 0x5f, 0x52, 0x55, 0x5c, 0x52, 0x59, 0x58, 0x55, 0x5c, 0x5f, 0x53, 0x5a,
			/* [0x2f70] */ 0x57, 0x5b, 0x50, 0x5e, 0x54, 0x51, 0x5a, 0x57, 0x51, 0x56, 0x5d, 0x50, 0x5b, 0x58, 0x56, 0x5d,
			/* [0x2f80] */ 0xec, 0xea, 0xe1, 0xef, 0xea, 0xe4, 0xef, 0xe2, 0xe9, 0xe7, 0xe2, 0xec, 0xe6, 0xe9, 0xe8, 0xe5,
			/* [0x2f90] */ 0xe0, 0xe6, 0xed, 0xe1, 0xe3, 0xed, 0xe4, 0xee, 0xee, 0xe0, 0xe7, 0xeb, 0xe5, 0xe3, 0xeb, 0xe8,
			/* [0x2fa0] */ 0xe9, 0xe4, 0xee, 0xe3, 0xef, 0xe2, 0xe5, 0xec, 0xe2, 0xe9, 0xe8, 0xe5, 0xec, 0xef, 0xe3, 0xea,
			/* [0x2fb0] */ 0xe7, 0xeb, 0xe0, 0xee, 0xe4, 0xe1, 0xea, 0xe7, 0xe1, 0xe6, 0xed, 0xe0, 0xeb, 0xe8, 0xe6, 0xed,
			/* [0x2fc0] */ 0x3c, 0x3a, 0x31, 0x3f, 0x3a, 0x34, 0x3f, 0x32, 0x39, 0x37, 0x32, 0x3c, 0x36, 0x39, 0x38, 0x35,
			/* [0x2fd0] */ 0x30, 0x36, 0x3d, 0x31, 0x33, 0x3d, 0x34, 0x3e, 0x3e, 0x30, 0x37, 0x3b, 0x35, 0x33, 0x3b, 0x38,
			/* [0x2fe0] */ 0x39, 0x34, 0x3e, 0x33, 0x3f, 0x32, 0x35, 0x3c, 0x32, 0x39, 0x38, 0x35, 0x3c, 0x3f, 0x33, 0x3a,
			/* [0x2ff0] */ 0x37, 0x3b, 0x30, 0x3e, 0x34, 0x31, 0x3a, 0x37, 0x31, 0x36, 0x3d, 0x30, 0x3b, 0x38, 0x36, 0x3d,
			/* [0x3000] */ 0x4d, 0x41, 0x42, 0x4f, 0x48, 0x4d, 0x44, 0x48, 0x46, 0x4a, 0x4f, 0x43, 0x4b, 0x47, 0x41, 0x44,
			/* [0x3010] */ 0x4a, 0x4c, 0x49, 0x45, 0x43, 0x46, 0x4e, 0x4b, 0x45, 0x40, 0x40, 0x4e, 0x4c, 0x49, 0x47, 0x42,
			/* [0x3020] */ 0x47, 0x42, 0x4b, 0x41, 0x44, 0x4e, 0x41, 0x47, 0x49, 0x44, 0x4c, 0x4a, 0x4e, 0x48, 0x42, 0x4d,
			/* [0x3030] */ 0x40, 0x4f, 0x46, 0x4c, 0x4a, 0x49, 0x4d, 0x40, 0x4f, 0x43, 0x43, 0x45, 0x45, 0x46, 0x48, 0x4b,
			/* [0x3040] */ 0xdd, 0xd1, 0xd2, 0xdf, 0xd8, 0xdd, 0xd4, 0xd8, 0xd6, 0xda, 0xdf, 0xd3, 0xdb, 0xd7, 0xd1, 0xd4,
			/* [0x3050] */ 0xda, 0xdc, 0xd9, 0xd5, 0xd3, 0xd6, 0xde, 0xdb, 0xd5, 0xd0, 0xd0, 0xde, 0xdc, 0xd9, 0xd7, 0xd2,
			/* [0x3060] */ 0xd7, 0xd2, 0xdb, 0xd1, 0xd4, 0xde, 0xd1, 0xd7, 0xd9, 0xd4, 0xdc, 0xda, 0xde, 0xd8, 0xd2, 0xdd,
			/* [0x3070] */ 0xd0, 0xdf, 0xd6, 0xdc, 0xda, 0xd9, 0xdd, 0xd0, 0xdf, 0xd3, 0xd3, 0xd5, 0xd5, 0xd6, 0xd8, 0xdb,
			/* [0x3080] */ 0xbd, 0xb1, 0xb2, 0xbf, 0xb8, 0xbd, 0xb4, 0xb8, 0xb6, 0xba, 0xbf, 0xb3, 0xbb, 0xb7, 0xb1, 0xb4,
			/* [0x3090] */ 0xba, 0xbc, 0xb9, 0xb5, 0xb3, 0xb6, 0xbe, 0xbb, 0xb5, 0xb0, 0xb0, 0xbe, 0xbc, 0xb9, 0xb7, 0xb2,
			/* [0x30a0] */ 0xb7, 0xb2, 0xbb, 0xb1, 0xb4, 0xbe, 0xb1, 0xb7, 0xb9, 0xb4, 0xbc, 0xba, 0xbe, 0xb8, 0xb2, 0xbd,
			/* [0x30b0] */ 0xb0, 0xbf, 0xb6, 0xbc, 0xba, 0xb9, 0xbd, 0xb0, 0xbf, 0xb3, 0xb3, 0xb5, 0xb5, 0xb6, 0xb8, 0xbb,
			/* [0x30c0] */ 0x0d, 0x01, 0x02, 0x0f, 0x08, 0x0d, 0x04, 0x08, 0x06, 0x0a, 0x0f, 0x03, 0x0b, 0x07, 0x01, 0x04,
			/* [0x30d0] */ 0x0a, 0x0c, 0x09, 0x05, 0x03, 0x06, 0x0e, 0x0b, 0x05, 0x00, 0x00, 0x0e, 0x0c, 0x09, 0x07, 0x02,
			/* [0x30e0] */ 0x07, 0x02, 0x0b, 0x01, 0x04, 0x0e, 0x01, 0x07, 0x09, 0x04, 0x0c, 0x0a, 0x0e, 0x08, 0x02, 0x0d,
			/* [0x30f0] */ 0x00, 0x0f, 0x06, 0x0c, 0x0a, 0x09, 0x0d, 0x00, 0x0f, 0x03, 0x03, 0x05, 0x05, 0x06, 0x08, 0x0b,
			/* [0x3100] */ 0x2d, 0x21, 0x22, 0x2f, 0x28, 0x2d, 0x24, 0x28, 0x26, 0x2a, 0x2f, 0x23, 0x2b, 0x27, 0x21, 0x24,
			/* [0x3110] */ 0x2a, 0x2c, 0x29, 0x25, 0x23, 0x26, 0x2e, 0x2b, 0x25, 0x20, 0x20, 0x2e, 0x2c, 0x29, 0x27, 0x22,
			/* [0x3120] */ 0x27, 0x22, 0x2b, 0x21, 0x24, 0x2e, 0x21, 0x27, 0x29, 0x24, 0x2c, 0x2a, 0x2e, 0x28, 0x22, 0x2d,
			/* [0x3130] */ 0x20, 0x2f, 0x26, 0x2c, 0x2a, 0x29, 0x2d, 0x20, 0x2f, 0x23, 0x23, 0x25, 0x25, 0x26, 0x28, 0x2b,
			/* [0x3140] */ 0xbd, 0xb1, 0xb2, 0xbf, 0xb8, 0xbd, 0xb4, 0xb8, 0xb6, 0xba, 0xbf, 0xb3, 0xbb, 0xb7, 0xb1, 0xb4,
			/* [0x3150] */ 0xba, 0xbc, 0xb9, 0xb5, 0xb3, 0xb6, 0xbe, 0xbb, 0xb5, 0xb0, 0xb0, 0xbe, 0xbc, 0xb9, 0xb7, 0xb2,
			/* [0x3160] */ 0xb7, 0xb2, 0xbb, 0xb1, 0xb4, 0xbe, 0xb1, 0xb7, 0xb9, 0xb4, 0xbc, 0xba, 0xbe, 0xb8, 0xb2, 0xbd,
			/* [0x3170] */ 0xb0, 0xbf, 0xb6, 0xbc, 0xba, 0xb9, 0xbd, 0xb0, 0xbf, 0xb3, 0xb3, 0xb5, 0xb5, 0xb6, 0xb8, 0xbb,
			/* [0x3180] */ 0xed, 0xe1, 0xe2, 0xef, 0xe8, 0xed, 0xe4, 0xe8, 0xe6, 0xea, 0xef, 0xe3, 0xeb, 0xe7, 0xe1, 0xe4,
			/* [0x3190] */ 0xea, 0xec, 0xe9, 0xe5, 0xe3, 0xe6, 0xee, 0xeb, 0xe5, 0xe0, 0xe0, 0xee, 0xec, 0xe9, 0xe7, 0xe2,
			/* [0x31a0] */ 0xe7, 0xe2, 0xeb, 0xe1, 0xe4, 0xee, 0xe1, 0xe7, 0xe9, 0xe4, 0xec, 0xea, 0xee, 0xe8, 0xe2, 0xed,
			/* [0x31b0] */ 0xe0, 0xef, 0xe6, 0xec, 0xea, 0xe9, 0xed, 0xe0, 0xef, 0xe3, 0xe3, 0xe5, 0xe5, 0xe6, 0xe8, 0xeb,
			/* [0x31c0] */ 0x7d, 0x71, 0x72, 0x7f, 0x78, 0x7d, 0x74, 0x78, 0x76, 0x7a, 0x7f, 0x73, 0x7b, 0x77, 0x71, 0x74,
			/* [0x31d0] */ 0x7a, 0x7c, 0x79, 0x75, 0x73, 0x76, 0x7e, 0x7b, 0x75, 0x70, 0x70, 0x7e, 0x7c, 0x79, 0x77, 0x72,
			/* [0x31e0] */ 0x77, 0x72, 0x7b, 0x71, 0x74, 0x7e, 0x71, 0x77, 0x79, 0x74, 0x7c, 0x7a, 0x7e, 0x78, 0x72, 0x7d,
			/* [0x31f0] */ 0x70, 0x7f, 0x76, 0x7c, 0x7a, 0x79, 0x7d, 0x70, 0x7f, 0x73, 0x73, 0x75, 0x75, 0x76, 0x78, 0x7b,
			/* [0x3200] */ 0xfd, 0xf1, 0xf2, 0xff, 0xf8, 0xfd, 0xf4, 0xf8, 0xf6, 0xfa, 0xff, 0xf3, 0xfb, 0xf7, 0xf1, 0xf4,
			/* [0x3210] */ 0xfa, 0xfc, 0xf9, 0xf5, 0xf3, 0xf6, 0xfe, 0xfb, 0xf5, 0xf0, 0xf0, 0xfe, 0xfc, 0xf9, 0xf7, 0xf2,
			/* [0x3220] */ 0xf7, 0xf2, 0xfb, 0xf1, 0xf4, 0xfe, 0xf1, 0xf7, 0xf9, 0xf4, 0xfc, 0xfa, 0xfe, 0xf8, 0xf2, 0xfd,
			/* [0x3230] */ 0xf0, 0xff, 0xf6, 0xfc, 0xfa, 0xf9, 0xfd, 0xf0, 0xff, 0xf3, 0xf3, 0xf5, 0xf5, 0xf6, 0xf8, 0xfb,
			/* [0x3240] */ 0x4d, 0x41, 0x42, 0x4f, 0x48, 0x4d, 0x44, 0x48, 0x46, 0x4a, 0x4f, 0x43, 0x4b, 0x47, 0x41, 0x44,
			/* [0x3250] */ 0x4a, 0x4c, 0x49, 0x45, 0x43, 0x46, 0x4e, 0x4b, 0x45, 0x40, 0x40, 0x4e, 0x4c, 0x49, 0x47, 0x42,
			/* [0x3260] */ 0x47, 0x42, 0x4b, 0x41, 0x44, 0x4e, 0x41, 0x47, 0x49, 0x44, 0x4c, 0x4a, 0x4e, 0x48, 0x42, 0x4d,
			/* [0x3270] */ 0x40, 0x4f, 0x46, 0x4c, 0x4a, 0x49, 0x4d, 0x40, 0x4f, 0x43, 0x43, 0x45, 0x45, 0x46, 0x48, 0x4b,
			/* [0x3280] */ 0x0d, 0x01, 0x02, 0x0f, 0x08, 0x0d, 0x04, 0x08, 0x06, 0x0a, 0x0f, 0x03, 0x0b, 0x07, 0x01, 0x04,
			/* [0x3290] */ 0x0a, 0x0c, 0x09, 0x05, 0x03, 0x06, 0x0e, 0x0b, 0x05, 0x00, 0x00, 0x0e, 0x0c, 0x09, 0x07, 0x02,
			/* [0x32a0] */ 0x07, 0x02, 0x0b, 0x01, 0x04, 0x0e, 0x01, 0x07, 0x09, 0x04, 0x0c, 0x0a, 0x0e, 0x08, 0x02, 0x0d,
			/* [0x32b0] */ 0x00, 0x0f, 0x06, 0x0c, 0x0a, 0x09, 0x0d, 0x00, 0x0f, 0x03, 0x03, 0x05, 0x05, 0x06, 0x08, 0x0b,
			/* [0x32c0] */ 0x9d, 0x91, 0x92, 0x9f, 0x98, 0x9d, 0x94, 0x98, 0x96, 0x9a, 0x9f, 0x93, 0x9b, 0x97, 0x91, 0x94,
			/* [0x32d0] */ 0x9a, 0x9c, 0x99, 0x95, 0x93, 0x96, 0x9e, 0x9b, 0x95, 0x90, 0x90, 0x9e, 0x9c, 0x99, 0x97, 0x92,
			/* [0x32e0] */ 0x97, 0x92, 0x9b, 0x91, 0x94, 0x9e, 0x91, 0x97, 0x99, 0x94, 0x9c, 0x9a, 0x9e, 0x98, 0x92, 0x9d,
			/* [0x32f0] */ 0x90, 0x9f, 0x96, 0x9c, 0x9a, 0x99, 0x9d, 0x90, 0x9f, 0x93, 0x93, 0x95, 0x95, 0x96, 0x98, 0x9b,
			/* [0x3300] */ 0x8d, 0x81, 0x82, 0x8f, 0x88, 0x8d, 0x84, 0x88, 0x86, 0x8a, 0x8f, 0x83, 0x8b, 0x87, 0x81, 0x84,
			/* [0x3310] */ 0x8a, 0x8c, 0x89, 0x85, 0x83, 0x86, 0x8e, 0x8b, 0x85, 0x80, 0x80, 0x8e, 0x8c, 0x89, 0x87, 0x82,
			/* [0x3320] */ 0x87, 0x82, 0x8b, 0x81, 0x84, 0x8e, 0x81, 0x87, 0x89, 0x84, 0x8c, 0x8a, 0x8e, 0x88, 0x82, 0x8d,
			/* [0x3330] */ 0x80, 0x8f, 0x86, 0x8c, 0x8a, 0x89, 0x8d, 0x80, 0x8f, 0x83, 0x83, 0x85, 0x85, 0x86, 0x88, 0x8b,
			/* [0x3340] */ 0x1d, 0x11, 0x12, 0x1f, 0x18, 0x1d, 0x14, 0x18, 0x16, 0x1a, 0x1f, 0x13, 0x1b, 0x17, 0x11, 0x14,
			/* [0x3350] */ 0x1a, 0x1c, 0x19, 0x15, 0x13, 0x16, 0x1e, 0x1b, 0x15, 0x10, 0x10, 0x1e, 0x1c, 0x19, 0x17, 0x12,
			/* [0x3360] */ 0x17, 0x12, 0x1b, 0x11, 0x14, 0x1e, 0x11, 0x17, 0x19, 0x14, 0x1c, 0x1a, 0x1e, 0x18, 0x12, 0x1d,
			/* [0x3370] */ 0x10, 0x1f, 0x16, 0x1c, 0x1a, 0x19, 0x1d, 0x10, 0x1f, 0x13, 0x13, 0x15, 0x15, 0x16, 0x18, 0x1b,
			/* [0x3380] */ 0xdd, 0xd1, 0xd2, 0xdf, 0xd8, 0xdd, 0xd4, 0xd8, 0xd6, 0xda, 0xdf, 0xd3, 0xdb, 0xd7, 0xd1, 0xd4,
			/* [0x3390] */ 0xda, 0xdc, 0xd9, 0xd5, 0xd3, 0xd6, 0xde, 0xdb, 0xd5, 0xd0, 0xd0, 0xde, 0xdc, 0xd9, 0xd7, 0xd2,
			/* [0x33a0] */ 0xd7, 0xd2, 0xdb, 0xd1, 0xd4, 0xde, 0xd1, 0xd7, 0xd9, 0xd4, 0xdc, 0xda, 0xde, 0xd8, 0xd2, 0xdd,
			/* [0x33b0] */ 0xd0, 0xdf, 0xd6, 0xdc, 0xda, 0xd9, 0xdd, 0xd0, 0xdf, 0xd3, 0xd3, 0xd5, 0xd5, 0xd6, 0xd8, 0xdb,
			/* [0x33c0] */ 0xad, 0xa1, 0xa2, 0xaf, 0xa8, 0xad, 0xa4, 0xa8, 0xa6, 0xaa, 0xaf, 0xa3, 0xab, 0xa7, 0xa1, 0xa4,
			/* [0x33d0] */ 0xaa, 0xac, 0xa9, 0xa5, 0xa3, 0xa6, 0xae, 0xab, 0xa5, 0xa0, 0xa0, 0xae, 0xac, 0xa9, 0xa7, 0xa2,
			/* [0x33e0] */ 0xa7, 0xa2, 0xab, 0xa1, 0xa4, 0xae, 0xa1, 0xa7, 0xa9, 0xa4, 0xac, 0xaa, 0xae, 0xa8, 0xa2, 0xad,
			/* [0x33f0] */ 0xa0, 0xaf, 0xa6, 0xac, 0xaa, 0xa9, 0xad, 0xa0, 0xaf, 0xa3, 0xa3, 0xa5, 0xa5, 0xa6, 0xa8, 0xab,
			/* [0x3400] */ 0x3d, 0x31, 0x32, 0x3f, 0x38, 0x3d, 0x34, 0x38, 0x36, 0x3a, 0x3f, 0x33, 0x3b, 0x37, 0x31, 0x34,
			/* [0x3410] */ 0x3a, 0x3c, 0x39, 0x35, 0x33, 0x36, 0x3e, 0x3b, 0x35, 0x30, 0x30, 0x3e, 0x3c, 0x39, 0x37, 0x32,
			/* [0x3420] */ 0x37, 0x32, 0x3b, 0x31, 0x34, 0x3e, 0x31, 0x37, 0x39, 0x34, 0x3c, 0x3a, 0x3e, 0x38, 0x32, 0x3d,
			/* [0x3430] */ 0x30, 0x3f, 0x36, 0x3c, 0x3a, 0x39, 0x3d, 0x30, 0x3f, 0x33, 0x33, 0x35, 0x35, 0x36, 0x38, 0x3b,
			/* [0x3440] */ 0xed, 0xe1, 0xe2, 0xef, 0xe8, 0xed, 0xe4, 0xe8, 0xe6, 0xea, 0xef, 0xe3, 0xeb, 0xe7, 0xe1, 0xe4,
			/* [0x3450] */ 0xea, 0xec, 0xe9, 0xe5, 0xe3, 0xe6, 0xee, 0xeb, 0xe5, 0xe0, 0xe0, 0xee, 0xec, 0xe9, 0xe7, 0xe2,
			/* [0x3460] */ 0xe7, 0xe2, 0xeb, 0xe1, 0xe4, 0xee, 0xe1, 0xe7, 0xe9, 0xe4, 0xec, 0xea, 0xee, 0xe8, 0xe2, 0xed,
			/* [0x3470] */ 0xe0, 0xef, 0xe6, 0xec, 0xea, 0xe9, 0xed, 0xe0, 0xef, 0xe3, 0xe3, 0xe5, 0xe5, 0xe6, 0xe8, 0xeb,
			/* [0x3480] */ 0xcd, 0xc1, 0xc2, 0xcf, 0xc8, 0xcd, 0xc4, 0xc8, 0xc6, 0xca, 0xcf, 0xc3, 0xcb, 0xc7, 0xc1, 0xc4,
			/* [0x3490] */ 0xca, 0xcc, 0xc9, 0xc5, 0xc3, 0xc6, 0xce, 0xcb, 0xc5, 0xc0, 0xc0, 0xce, 0xcc, 0xc9, 0xc7, 0xc2,
			/* [0x34a0] */ 0xc7, 0xc2, 0xcb, 0xc1, 0xc4, 0xce, 0xc1, 0xc7, 0xc9, 0xc4, 0xcc, 0xca, 0xce, 0xc8, 0xc2, 0xcd,
			/* [0x34b0] */ 0xc0, 0xcf, 0xc6, 0xcc, 0xca, 0xc9, 0xcd, 0xc0, 0xcf, 0xc3, 0xc3, 0xc5, 0xc5, 0xc6, 0xc8, 0xcb,
			/* [0x34c0] */ 0x3d, 0x31, 0x32, 0x3f, 0x38, 0x3d, 0x34, 0x38, 0x36, 0x3a, 0x3f, 0x33, 0x3b, 0x37, 0x31, 0x34,
			/* [0x34d0] */ 0x3a, 0x3c, 0x39, 0x35, 0x33, 0x36, 0x3e, 0x3b, 0x35, 0x30, 0x30, 0x3e, 0x3c, 0x39, 0x37, 0x32,
			/* [0x34e0] */ 0x37, 0x32, 0x3b, 0x31, 0x34, 0x3e, 0x31, 0x37, 0x39, 0x34, 0x3c, 0x3a, 0x3e, 0x38, 0x32, 0x3d,
			/* [0x34f0] */ 0x30, 0x3f, 0x36, 0x3c, 0x3a, 0x39, 0x3d, 0x30, 0x3f, 0x33, 0x33, 0x35, 0x35, 0x36, 0x38, 0x3b,
			/* [0x3500] */ 0x9d, 0x91, 0x92, 0x9f, 0x98, 0x9d, 0x94, 0x98, 0x96, 0x9a, 0x9f, 0x93, 0x9b, 0x97, 0x91, 0x94,
			/* [0x3510] */ 0x9a, 0x9c, 0x99, 0x95, 0x93, 0x96, 0x9e, 0x9b, 0x95, 0x90, 0x90, 0x9e, 0x9c, 0x99, 0x97, 0x92,
			/* [0x3520] */ 0x97, 0x92, 0x9b, 0x91, 0x94, 0x9e, 0x91, 0x97, 0x99, 0x94, 0x9c, 0x9a, 0x9e, 0x98, 0x92, 0x9d,
			/* [0x3530] */ 0x90, 0x9f, 0x96, 0x9c, 0x9a, 0x99, 0x9d, 0x90, 0x9f, 0x93, 0x93, 0x95, 0x95, 0x96, 0x98, 0x9b,
			/* [0x3540] */ 0x5d, 0x51, 0x52, 0x5f, 0x58, 0x5d, 0x54, 0x58, 0x56, 0x5a, 0x5f, 0x53, 0x5b, 0x57, 0x51, 0x54,
			/* [0x3550] */ 0x5a, 0x5c, 0x59, 0x55, 0x53, 0x56, 0x5e, 0x5b, 0x55, 0x50, 0x50, 0x5e, 0x5c, 0x59, 0x57, 0x52,
			/* [0x3560] */ 0x57, 0x52, 0x5b, 0x51, 0x54, 0x5e, 0x51, 0x57, 0x59, 0x54, 0x5c, 0x5a, 0x5e, 0x58, 0x52, 0x5d,
			/* [0x3570] */ 0x50, 0x5f, 0x56, 0x5c, 0x5a, 0x59, 0x5d, 0x50, 0x5f, 0x53, 0x53, 0x55, 0x55, 0x56, 0x58, 0x5b,
			/* [0x3580] */ 0x7d, 0x71, 0x72, 0x7f, 0x78, 0x7d, 0x74, 0x78, 0x76, 0x7a, 0x7f, 0x73, 0x7b, 0x77, 0x71, 0x74,
			/* [0x3590] */ 0x7a, 0x7c, 0x79, 0x75, 0x73, 0x76, 0x7e, 0x7b, 0x75, 0x70, 0x70, 0x7e, 0x7c, 0x79, 0x77, 0x72,
			/* [0x35a0] */ 0x77, 0x72, 0x7b, 0x71, 0x74, 0x7e, 0x71, 0x77, 0x79, 0x74, 0x7c, 0x7a, 0x7e, 0x78, 0x72, 0x7d,
			/* [0x35b0] */ 0x70, 0x7f, 0x76, 0x7c, 0x7a, 0x79, 0x7d, 0x70, 0x7f, 0x73, 0x73, 0x75, 0x75, 0x76, 0x78, 0x7b,
			/* [0x35c0] */ 0xcd, 0xc1, 0xc2, 0xcf, 0xc8, 0xcd, 0xc4, 0xc8, 0xc6, 0xca, 0xcf, 0xc3, 0xcb, 0xc7, 0xc1, 0xc4,
			/* [0x35d0] */ 0xca, 0xcc, 0xc9, 0xc5, 0xc3, 0xc6, 0xce, 0xcb, 0xc5, 0xc0, 0xc0, 0xce, 0xcc, 0xc9, 0xc7, 0xc2,
			/* [0x35e0] */ 0xc7, 0xc2, 0xcb, 0xc1, 0xc4, 0xce, 0xc1, 0xc7, 0xc9, 0xc4, 0xcc, 0xca, 0xce, 0xc8, 0xc2, 0xcd,
			/* [0x35f0] */ 0xc0, 0xcf, 0xc6, 0xcc, 0xca, 0xc9, 0xcd, 0xc0, 0xcf, 0xc3, 0xc3, 0xc5, 0xc5, 0xc6, 0xc8, 0xcb,
			/* [0x3600] */ 0x5d, 0x51, 0x52, 0x5f, 0x58, 0x5d, 0x54, 0x58, 0x56, 0x5a, 0x5f, 0x53, 0x5b, 0x57, 0x51, 0x54,
			/* [0x3610] */ 0x5a, 0x5c, 0x59, 0x55, 0x53, 0x56, 0x5e, 0x5b, 0x55, 0x50, 0x50, 0x5e, 0x5c, 0x59, 0x57, 0x52,
			/* [0x3620] */ 0x57, 0x52, 0x5b, 0x51, 0x54, 0x5e, 0x51, 0x57, 0x59, 0x54, 0x5c, 0x5a, 0x5e, 0x58, 0x52, 0x5d,
			/* [0x3630] */ 0x50, 0x5f, 0x56, 0x5c, 0x5a, 0x59, 0x5d, 0x50, 0x5f, 0x53, 0x53, 0x55, 0x55, 0x56, 0x58, 0x5b,
			/* [0x3640] */ 0x2d, 0x21, 0x22, 0x2f, 0x28, 0x2d, 0x24, 0x28, 0x26, 0x2a, 0x2f, 0x23, 0x2b, 0x27, 0x21, 0x24,
			/* [0x3650] */ 0x2a, 0x2c, 0x29, 0x25, 0x23, 0x26, 0x2e, 0x2b, 0x25, 0x20, 0x20, 0x2e, 0x2c, 0x29, 0x27, 0x22,
			/* [0x3660] */ 0x27, 0x22, 0x2b, 0x21, 0x24, 0x2e, 0x21, 0x27, 0x29, 0x24, 0x2c, 0x2a, 0x2e, 0x28, 0x22, 0x2d,
			/* [0x3670] */ 0x20, 0x2f, 0x26, 0x2c, 0x2a, 0x29, 0x2d, 0x20, 0x2f, 0x23, 0x23, 0x25, 0x25, 0x26, 0x28, 0x2b,
			/* [0x3680] */ 0xad, 0xa1, 0xa2, 0xaf, 0xa8, 0xad, 0xa4, 0xa8, 0xa6, 0xaa, 0xaf, 0xa3, 0xab, 0xa7, 0xa1, 0xa4,
			/* [0x3690] */ 0xaa, 0xac, 0xa9, 0xa5, 0xa3, 0xa6, 0xae, 0xab, 0xa5, 0xa0, 0xa0, 0xae, 0xac, 0xa9, 0xa7, 0xa2,
			/* [0x36a0] */ 0xa7, 0xa2, 0xab, 0xa1, 0xa4, 0xae, 0xa1, 0xa7, 0xa9, 0xa4, 0xac, 0xaa, 0xae, 0xa8, 0xa2, 0xad,
			/* [0x36b0] */ 0xa0, 0xaf, 0xa6, 0xac, 0xaa, 0xa9, 0xad, 0xa0, 0xaf, 0xa3, 0xa3, 0xa5, 0xa5, 0xa6, 0xa8, 0xab,
			/* [0x36c0] */ 0xfd, 0xf1, 0xf2, 0xff, 0xf8, 0xfd, 0xf4, 0xf8, 0xf6, 0xfa, 0xff, 0xf3, 0xfb, 0xf7, 0xf1, 0xf4,
			/* [0x36d0] */ 0xfa, 0xfc, 0xf9, 0xf5, 0xf3, 0xf6, 0xfe, 0xfb, 0xf5, 0xf0, 0xf0, 0xfe, 0xfc, 0xf9, 0xf7, 0xf2,
			/* [0x36e0] */ 0xf7, 0xf2, 0xfb, 0xf1, 0xf4, 0xfe, 0xf1, 0xf7, 0xf9, 0xf4, 0xfc, 0xfa, 0xfe, 0xf8, 0xf2, 0xfd,
			/* [0x36f0] */ 0xf0, 0xff, 0xf6, 0xfc, 0xfa, 0xf9, 0xfd, 0xf0, 0xff, 0xf3, 0xf3, 0xf5, 0xf5, 0xf6, 0xf8, 0xfb,
			/* [0x3700] */ 0x6d, 0x61, 0x62, 0x6f, 0x68, 0x6d, 0x64, 0x68, 0x66, 0x6a, 0x6f, 0x63, 0x6b, 0x67, 0x61, 0x64,
			/* [0x3710] */ 0x6a, 0x6c, 0x69, 0x65, 0x63, 0x66, 0x6e, 0x6b, 0x65, 0x60, 0x60, 0x6e, 0x6c, 0x69, 0x67, 0x62,
			/* [0x3720] */ 0x67, 0x62, 0x6b, 0x61, 0x64, 0x6e, 0x61, 0x67, 0x69, 0x64, 0x6c, 0x6a, 0x6e, 0x68, 0x62, 0x6d,
			/* [0x3730] */ 0x60, 0x6f, 0x66, 0x6c, 0x6a, 0x69, 0x6d, 0x60, 0x6f, 0x63, 0x63, 0x65, 0x65, 0x66, 0x68, 0x6b,
			/* [0x3740] */ 0x8d, 0x81, 0x82, 0x8f, 0x88, 0x8d, 0x84, 0x88, 0x86, 0x8a, 0x8f, 0x83, 0x8b, 0x87, 0x81, 0x84,
			/* [0x3750] */ 0x8a, 0x8c, 0x89, 0x85, 0x83, 0x86, 0x8e, 0x8b, 0x85, 0x80, 0x80, 0x8e, 0x8c, 0x89, 0x87, 0x82,
			/* [0x3760] */ 0x87, 0x82, 0x8b, 0x81, 0x84, 0x8e, 0x81, 0x87, 0x89, 0x84, 0x8c, 0x8a, 0x8e, 0x88, 0x82, 0x8d,
			/* [0x3770] */ 0x80, 0x8f, 0x86, 0x8c, 0x8a, 0x89, 0x8d, 0x80, 0x8f, 0x83, 0x83, 0x85, 0x85, 0x86, 0x88, 0x8b,
			/* [0x3780] */ 0x1d, 0x11, 0x12, 0x1f, 0x18, 0x1d, 0x14, 0x18, 0x16, 0x1a, 0x1f, 0x13, 0x1b, 0x17, 0x11, 0x14,
			/* [0x3790] */ 0x1a, 0x1c, 0x19, 0x15, 0x13, 0x16, 0x1e, 0x1b, 0x15, 0x10, 0x10, 0x1e, 0x1c, 0x19, 0x17, 0x12,
			/* [0x37a0] */ 0x17, 0x12, 0x1b, 0x11, 0x14, 0x1e, 0x11, 0x17, 0x19, 0x14, 0x1c, 0x1a, 0x1e, 0x18, 0x12, 0x1d,
			/* [0x37b0] */ 0x10, 0x1f, 0x16, 0x1c, 0x1a, 0x19, 0x1d, 0x10, 0x1f, 0x13, 0x13, 0x15, 0x15, 0x16, 0x18, 0x1b,
			/* [0x37c0] */ 0x6d, 0x61, 0x62, 0x6f, 0x68, 0x6d, 0x64, 0x68, 0x66, 0x6a, 0x6f, 0x63, 0x6b, 0x67, 0x61, 0x64,
			/* [0x37d0] */ 0x6a, 0x6c, 0x69, 0x65, 0x63, 0x66, 0x6e, 0x6b, 0x65, 0x60, 0x60, 0x6e, 0x6c, 0x69, 0x67, 0x62,
			/* [0x37e0] */ 0x67, 0x62, 0x6b, 0x61, 0x64, 0x6e, 0x61, 0x67, 0x69, 0x64, 0x6c, 0x6a, 0x6e, 0x68, 0x62, 0x6d,
			/* [0x37f0] */ 0x60, 0x6f, 0x66, 0x6c, 0x6a, 0x69, 0x6d, 0x60, 0x6f, 0x63, 0x63, 0x65, 0x65, 0x66, 0x68, 0x6b,
			/* [0x3800] */ 0x1d, 0x11, 0x12, 0x1f, 0x18, 0x1d, 0x14, 0x18, 0x16, 0x1a, 0x1f, 0x13, 0x1b, 0x17, 0x11, 0x14,
			/* [0x3810] */ 0x1a, 0x1c, 0x19, 0x15, 0x13, 0x16, 0x1e, 0x1b, 0x15, 0x10, 0x10, 0x1e, 0x1c, 0x19, 0x17, 0x12,
			/* [0x3820] */ 0x17, 0x12, 0x1b, 0x11, 0x14, 0x1e, 0x11, 0x17, 0x19, 0x14, 0x1c, 0x1a, 0x1e, 0x18, 0x12, 0x1d,
			/* [0x3830] */ 0x10, 0x1f, 0x16, 0x1c, 0x1a, 0x19, 0x1d, 0x10, 0x1f, 0x13, 0x13, 0x15, 0x15, 0x16, 0x18, 0x1b,
			/* [0x3840] */ 0x6d, 0x61, 0x62, 0x6f, 0x68, 0x6d, 0x64, 0x68, 0x66, 0x6a, 0x6f, 0x63, 0x6b, 0x67, 0x61, 0x64,
			/* [0x3850] */ 0x6a, 0x6c, 0x69, 0x65, 0x63, 0x66, 0x6e, 0x6b, 0x65, 0x60, 0x60, 0x6e, 0x6c, 0x69, 0x67, 0x62,
			/* [0x3860] */ 0x67, 0x62, 0x6b, 0x61, 0x64, 0x6e, 0x61, 0x67, 0x69, 0x64, 0x6c, 0x6a, 0x6e, 0x68, 0x62, 0x6d,
			/* [0x3870] */ 0x60, 0x6f, 0x66, 0x6c, 0x6a, 0x69, 0x6d, 0x60, 0x6f, 0x63, 0x63, 0x65, 0x65, 0x66, 0x68, 0x6b,
			/* [0x3880] */ 0x4d, 0x41, 0x42, 0x4f, 0x48, 0x4d, 0x44, 0x48, 0x46, 0x4a, 0x4f, 0x43, 0x4b, 0x47, 0x41, 0x44,
			/* [0x3890] */ 0x4a, 0x4c, 0x49, 0x45, 0x43, 0x46, 0x4e, 0x4b, 0x45, 0x40, 0x40, 0x4e, 0x4c, 0x49, 0x47, 0x42,
			/* [0x38a0] */ 0x47, 0x42, 0x4b, 0x41, 0x44, 0x4e, 0x41, 0x47, 0x49, 0x44, 0x4c, 0x4a, 0x4e, 0x48, 0x42, 0x4d,
			/* [0x38b0] */ 0x40, 0x4f, 0x46, 0x4c, 0x4a, 0x49, 0x4d, 0x40, 0x4f, 0x43, 0x43, 0x45, 0x45, 0x46, 0x48, 0x4b,
			/* [0x38c0] */ 0xbd, 0xb1, 0xb2, 0xbf, 0xb8, 0xbd, 0xb4, 0xb8, 0xb6, 0xba, 0xbf, 0xb3, 0xbb, 0xb7, 0xb1, 0xb4,
			/* [0x38d0] */ 0xba, 0xbc, 0xb9, 0xb5, 0xb3, 0xb6, 0xbe, 0xbb, 0xb5, 0xb0, 0xb0, 0xbe, 0xbc, 0xb9, 0xb7, 0xb2,
			/* [0x38e0] */ 0xb7, 0xb2, 0xbb, 0xb1, 0xb4, 0xbe, 0xb1, 0xb7, 0xb9, 0xb4, 0xbc, 0xba, 0xbe, 0xb8, 0xb2, 0xbd,
			/* [0x38f0] */ 0xb0, 0xbf, 0xb6, 0xbc, 0xba, 0xb9, 0xbd, 0xb0, 0xbf, 0xb3, 0xb3, 0xb5, 0xb5, 0xb6, 0xb8, 0xbb,
			/* [0x3900] */ 0xbd, 0xb1, 0xb2, 0xbf, 0xb8, 0xbd, 0xb4, 0xb8, 0xb6, 0xba, 0xbf, 0xb3, 0xbb, 0xb7, 0xb1, 0xb4,
			/* [0x3910] */ 0xba, 0xbc, 0xb9, 0xb5, 0xb3, 0xb6, 0xbe, 0xbb, 0xb5, 0xb0, 0xb0, 0xbe, 0xbc, 0xb9, 0xb7, 0xb2,
			/* [0x3920] */ 0xb7, 0xb2, 0xbb, 0xb1, 0xb4, 0xbe, 0xb1, 0xb7, 0xb9, 0xb4, 0xbc, 0xba, 0xbe, 0xb8, 0xb2, 0xbd,
			/* [0x3930] */ 0xb0, 0xbf, 0xb6, 0xbc, 0xba, 0xb9, 0xbd, 0xb0, 0xbf, 0xb3, 0xb3, 0xb5, 0xb5, 0xb6, 0xb8, 0xbb,
			/* [0x3940] */ 0xdd, 0xd1, 0xd2, 0xdf, 0xd8, 0xdd, 0xd4, 0xd8, 0xd6, 0xda, 0xdf, 0xd3, 0xdb, 0xd7, 0xd1, 0xd4,
			/* [0x3950] */ 0xda, 0xdc, 0xd9, 0xd5, 0xd3, 0xd6, 0xde, 0xdb, 0xd5, 0xd0, 0xd0, 0xde, 0xdc, 0xd9, 0xd7, 0xd2,
			/* [0x3960] */ 0xd7, 0xd2, 0xdb, 0xd1, 0xd4, 0xde, 0xd1, 0xd7, 0xd9, 0xd4, 0xdc, 0xda, 0xde, 0xd8, 0xd2, 0xdd,
			/* [0x3970] */ 0xd0, 0xdf, 0xd6, 0xdc, 0xda, 0xd9, 0xdd, 0xd0, 0xdf, 0xd3, 0xd3, 0xd5, 0xd5, 0xd6, 0xd8, 0xdb,
			/* [0x3980] */ 0xdd, 0xd1, 0xd2, 0xdf, 0xd8, 0xdd, 0xd4, 0xd8, 0xd6, 0xda, 0xdf, 0xd3, 0xdb, 0xd7, 0xd1, 0xd4,
			/* [0x3990] */ 0xda, 0xdc, 0xd9, 0xd5, 0xd3, 0xd6, 0xde, 0xdb, 0xd5, 0xd0, 0xd0, 0xde, 0xdc, 0xd9, 0xd7, 0xd2,
			/* [0x39a0] */ 0xd7, 0xd2, 0xdb, 0xd1, 0xd4, 0xde, 0xd1, 0xd7, 0xd9, 0xd4, 0xdc, 0xda, 0xde, 0xd8, 0xd2, 0xdd,
			/* [0x39b0] */ 0xd0, 0xdf, 0xd6, 0xdc, 0xda, 0xd9, 0xdd, 0xd0, 0xdf, 0xd3, 0xd3, 0xd5, 0xd5, 0xd6, 0xd8, 0xdb,
			/* [0x39c0] */ 0x8d, 0x81, 0x82, 0x8f, 0x88, 0x8d, 0x84, 0x88, 0x86, 0x8a, 0x8f, 0x83, 0x8b, 0x87, 0x81, 0x84,
			/* [0x39d0] */ 0x8a, 0x8c, 0x89, 0x85, 0x83, 0x86, 0x8e, 0x8b, 0x85, 0x80, 0x80, 0x8e, 0x8c, 0x89, 0x87, 0x82,
			/* [0x39e0] */ 0x87, 0x82, 0x8b, 0x81, 0x84, 0x8e, 0x81, 0x87, 0x89, 0x84, 0x8c, 0x8a, 0x8e, 0x88, 0x82, 0x8d,
			/* [0x39f0] */ 0x80, 0x8f, 0x86, 0x8c, 0x8a, 0x89, 0x8d, 0x80, 0x8f, 0x83, 0x83, 0x85, 0x85, 0x86, 0x88, 0x8b,
			/* [0x3a00] */ 0xcd, 0xc1, 0xc2, 0xcf, 0xc8, 0xcd, 0xc4, 0xc8, 0xc6, 0xca, 0xcf, 0xc3, 0xcb, 0xc7, 0xc1, 0xc4,
			/* [0x3a10] */ 0xca, 0xcc, 0xc9, 0xc5, 0xc3, 0xc6, 0xce, 0xcb, 0xc5, 0xc0, 0xc0, 0xce, 0xcc, 0xc9, 0xc7, 0xc2,
			/* [0x3a20] */ 0xc7, 0xc2, 0xcb, 0xc1, 0xc4, 0xce, 0xc1, 0xc7, 0xc9, 0xc4, 0xcc, 0xca, 0xce, 0xc8, 0xc2, 0xcd,
			/* [0x3a30] */ 0xc0, 0xcf, 0xc6, 0xcc, 0xca, 0xc9, 0xcd, 0xc0, 0xcf, 0xc3, 0xc3, 0xc5, 0xc5, 0xc6, 0xc8, 0xcb,
			/* [0x3a40] */ 0x1d, 0x11, 0x12, 0x1f, 0x18, 0x1d, 0x14, 0x18, 0x16, 0x1a, 0x1f, 0x13, 0x1b, 0x17, 0x11, 0x14,
			/* [0x3a50] */ 0x1a, 0x1c, 0x19, 0x15, 0x13, 0x16, 0x1e, 0x1b, 0x15, 0x10, 0x10, 0x1e, 0x1c, 0x19, 0x17, 0x12,
			/* [0x3a60] */ 0x17, 0x12, 0x1b, 0x11, 0x14, 0x1e, 0x11, 0x17, 0x19, 0x14, 0x1c, 0x1a, 0x1e, 0x18, 0x12, 0x1d,
			/* [0x3a70] */ 0x10, 0x1f, 0x16, 0x1c, 0x1a, 0x19, 0x1d, 0x10, 0x1f, 0x13, 0x13, 0x15, 0x15, 0x16, 0x18, 0x1b,
			/* [0x3a80] */ 0x3d, 0x31, 0x32, 0x3f, 0x38, 0x3d, 0x34, 0x38, 0x36, 0x3a, 0x3f, 0x33, 0x3b, 0x37, 0x31, 0x34,
			/* [0x3a90] */ 0x3a, 0x3c, 0x39, 0x35, 0x33, 0x36, 0x3e, 0x3b, 0x35, 0x30, 0x30, 0x3e, 0x3c, 0x39, 0x37, 0x32,
			/* [0x3aa0] */ 0x37, 0x32, 0x3b, 0x31, 0x34, 0x3e, 0x31, 0x37, 0x39, 0x34, 0x3c, 0x3a, 0x3e, 0x38, 0x32, 0x3d,
			/* [0x3ab0] */ 0x30, 0x3f, 0x36, 0x3c, 0x3a, 0x39, 0x3d, 0x30, 0x3f, 0x33, 0x33, 0x35, 0x35, 0x36, 0x38, 0x3b,
			/* [0x3ac0] */ 0x4d, 0x41, 0x42, 0x4f, 0x48, 0x4d, 0x44, 0x48, 0x46, 0x4a, 0x4f, 0x43, 0x4b, 0x47, 0x41, 0x44,
			/* [0x3ad0] */ 0x4a, 0x4c, 0x49, 0x45, 0x43, 0x46, 0x4e, 0x4b, 0x45, 0x40, 0x40, 0x4e, 0x4c, 0x49, 0x47, 0x42,
			/* [0x3ae0] */ 0x47, 0x42, 0x4b, 0x41, 0x44, 0x4e, 0x41, 0x47, 0x49, 0x44, 0x4c, 0x4a, 0x4e, 0x48, 0x42, 0x4d,
			/* [0x3af0] */ 0x40, 0x4f, 0x46, 0x4c, 0x4a, 0x49, 0x4d, 0x40, 0x4f, 0x43, 0x43, 0x45, 0x45, 0x46, 0x48, 0x4b,
			/* [0x3b00] */ 0x7d, 0x71, 0x72, 0x7f, 0x78, 0x7d, 0x74, 0x78, 0x76, 0x7a, 0x7f, 0x73, 0x7b, 0x77, 0x71, 0x74,
			/* [0x3b10] */ 0x7a, 0x7c, 0x79, 0x75, 0x73, 0x76, 0x7e, 0x7b, 0x75, 0x70, 0x70, 0x7e, 0x7c, 0x79, 0x77, 0x72,
			/* [0x3b20] */ 0x77, 0x72, 0x7b, 0x71, 0x74, 0x7e, 0x71, 0x77, 0x79, 0x74, 0x7c, 0x7a, 0x7e, 0x78, 0x72, 0x7d,
			/* [0x3b30] */ 0x70, 0x7f, 0x76, 0x7c, 0x7a, 0x79, 0x7d, 0x70, 0x7f, 0x73, 0x73, 0x75, 0x75, 0x76, 0x78, 0x7b,
			/* [0x3b40] */ 0xad, 0xa1, 0xa2, 0xaf, 0xa8, 0xad, 0xa4, 0xa8, 0xa6, 0xaa, 0xaf, 0xa3, 0xab, 0xa7, 0xa1, 0xa4,
			/* [0x3b50] */ 0xaa, 0xac, 0xa9, 0xa5, 0xa3, 0xa6, 0xae, 0xab, 0xa5, 0xa0, 0xa0, 0xae, 0xac, 0xa9, 0xa7, 0xa2,
			/* [0x3b60] */ 0xa7, 0xa2, 0xab, 0xa1, 0xa4, 0xae, 0xa1, 0xa7, 0xa9, 0xa4, 0xac, 0xaa, 0xae, 0xa8, 0xa2, 0xad,
			/* [0x3b70] */ 0xa0, 0xaf, 0xa6, 0xac, 0xaa, 0xa9, 0xad, 0xa0, 0xaf, 0xa3, 0xa3, 0xa5, 0xa5, 0xa6, 0xa8, 0xab,
			/* [0x3b80] */ 0xed, 0xe1, 0xe2, 0xef, 0xe8, 0xed, 0xe4, 0xe8, 0xe6, 0xea, 0xef, 0xe3, 0xeb, 0xe7, 0xe1, 0xe4,
			/* [0x3b90] */ 0xea, 0xec, 0xe9, 0xe5, 0xe3, 0xe6, 0xee, 0xeb, 0xe5, 0xe0, 0xe0, 0xee, 0xec, 0xe9, 0xe7, 0xe2,
			/* [0x3ba0] */ 0xe7, 0xe2, 0xeb, 0xe1, 0xe4, 0xee, 0xe1, 0xe7, 0xe9, 0xe4, 0xec, 0xea, 0xee, 0xe8, 0xe2, 0xed,
			/* [0x3bb0] */ 0xe0, 0xef, 0xe6, 0xec, 0xea, 0xe9, 0xed, 0xe0, 0xef, 0xe3, 0xe3, 0xe5, 0xe5, 0xe6, 0xe8, 0xeb,
			/* [0x3bc0] */ 0x7d, 0x71, 0x72, 0x7f, 0x78, 0x7d, 0x74, 0x78, 0x76, 0x7a, 0x7f, 0x73, 0x7b, 0x77, 0x71, 0x74,
			/* [0x3bd0] */ 0x7a, 0x7c, 0x79, 0x75, 0x73, 0x76, 0x7e, 0x7b, 0x75, 0x70, 0x70, 0x7e, 0x7c, 0x79, 0x77, 0x72,
			/* [0x3be0] */ 0x77, 0x72, 0x7b, 0x71, 0x74, 0x7e, 0x71, 0x77, 0x79, 0x74, 0x7c, 0x7a, 0x7e, 0x78, 0x72, 0x7d,
			/* [0x3bf0] */ 0x70, 0x7f, 0x76, 0x7c, 0x7a, 0x79, 0x7d, 0x70, 0x7f, 0x73, 0x73, 0x75, 0x75, 0x76, 0x78, 0x7b,
			/* [0x3c00] */ 0xad, 0xa1, 0xa2, 0xaf, 0xa8, 0xad, 0xa4, 0xa8, 0xa6, 0xaa, 0xaf, 0xa3, 0xab, 0xa7, 0xa1, 0xa4,
			/* [0x3c10] */ 0xaa, 0xac, 0xa9, 0xa5, 0xa3, 0xa6, 0xae, 0xab, 0xa5, 0xa0, 0xa0, 0xae, 0xac, 0xa9, 0xa7, 0xa2,
			/* [0x3c20] */ 0xa7, 0xa2, 0xab, 0xa1, 0xa4, 0xae, 0xa1, 0xa7, 0xa9, 0xa4, 0xac, 0xaa, 0xae, 0xa8, 0xa2, 0xad,
			/* [0x3c30] */ 0xa0, 0xaf, 0xa6, 0xac, 0xaa, 0xa9, 0xad, 0xa0, 0xaf, 0xa3, 0xa3, 0xa5, 0xa5, 0xa6, 0xa8, 0xab,
			/* [0x3c40] */ 0x9d, 0x91, 0x92, 0x9f, 0x98, 0x9d, 0x94, 0x98, 0x96, 0x9a, 0x9f, 0x93, 0x9b, 0x97, 0x91, 0x94,
			/* [0x3c50] */ 0x9a, 0x9c, 0x99, 0x95, 0x93, 0x96, 0x9e, 0x9b, 0x95, 0x90, 0x90, 0x9e, 0x9c, 0x99, 0x97, 0x92,
			/* [0x3c60] */ 0x97, 0x92, 0x9b, 0x91, 0x94, 0x9e, 0x91, 0x97, 0x99, 0x94, 0x9c, 0x9a, 0x9e, 0x98, 0x92, 0x9d,
			/* [0x3c70] */ 0x90, 0x9f, 0x96, 0x9c, 0x9a, 0x99, 0x9d, 0x90, 0x9f, 0x93, 0x93, 0x95, 0x95, 0x96, 0x98, 0x9b,
			/* [0x3c80] */ 0xfd, 0xf1, 0xf2, 0xff, 0xf8, 0xfd, 0xf4, 0xf8, 0xf6, 0xfa, 0xff, 0xf3, 0xfb, 0xf7, 0xf1, 0xf4,
			/* [0x3c90] */ 0xfa, 0xfc, 0xf9, 0xf5, 0xf3, 0xf6, 0xfe, 0xfb, 0xf5, 0xf0, 0xf0, 0xfe, 0xfc, 0xf9, 0xf7, 0xf2,
			/* [0x3ca0] */ 0xf7, 0xf2, 0xfb, 0xf1, 0xf4, 0xfe, 0xf1, 0xf7, 0xf9, 0xf4, 0xfc, 0xfa, 0xfe, 0xf8, 0xf2, 0xfd,
			/* [0x3cb0] */ 0xf0, 0xff, 0xf6, 0xfc, 0xfa, 0xf9, 0xfd, 0xf0, 0xff, 0xf3, 0xf3, 0xf5, 0xf5, 0xf6, 0xf8, 0xfb,
			/* [0x3cc0] */ 0x5d, 0x51, 0x52, 0x5f, 0x58, 0x5d, 0x54, 0x58, 0x56, 0x5a, 0x5f, 0x53, 0x5b, 0x57, 0x51, 0x54,
			/* [0x3cd0] */ 0x5a, 0x5c, 0x59, 0x55, 0x53, 0x56, 0x5e, 0x5b, 0x55, 0x50, 0x50, 0x5e, 0x5c, 0x59, 0x57, 0x52,
			/* [0x3ce0] */ 0x57, 0x52, 0x5b, 0x51, 0x54, 0x5e, 0x51, 0x57, 0x59, 0x54, 0x5c, 0x5a, 0x5e, 0x58, 0x52, 0x5d,
			/* [0x3cf0] */ 0x50, 0x5f, 0x56, 0x5c, 0x5a, 0x59, 0x5d, 0x50, 0x5f, 0x53, 0x53, 0x55, 0x55, 0x56, 0x58, 0x5b,
			/* [0x3d00] */ 0x6d, 0x61, 0x62, 0x6f, 0x68, 0x6d, 0x64, 0x68, 0x66, 0x6a, 0x6f, 0x63, 0x6b, 0x67, 0x61, 0x64,
			/* [0x3d10] */ 0x6a, 0x6c, 0x69, 0x65, 0x63, 0x66, 0x6e, 0x6b, 0x65, 0x60, 0x60, 0x6e, 0x6c, 0x69, 0x67, 0x62,
			/* [0x3d20] */ 0x67, 0x62, 0x6b, 0x61, 0x64, 0x6e, 0x61, 0x67, 0x69, 0x64, 0x6c, 0x6a, 0x6e, 0x68, 0x62, 0x6d,
			/* [0x3d30] */ 0x60, 0x6f, 0x66, 0x6c, 0x6a, 0x69, 0x6d, 0x60, 0x6f, 0x63, 0x63, 0x65, 0x65, 0x66, 0x68, 0x6b,
			/* [0x3d40] */ 0x0d, 0x01, 0x02, 0x0f, 0x08, 0x0d, 0x04, 0x08, 0x06, 0x0a, 0x0f, 0x03, 0x0b, 0x07, 0x01, 0x04,
			/* [0x3d50] */ 0x0a, 0x0c, 0x09, 0x05, 0x03, 0x06, 0x0e, 0x0b, 0x05, 0x00, 0x00, 0x0e, 0x0c, 0x09, 0x07, 0x02,
			/* [0x3d60] */ 0x07, 0x02, 0x0b, 0x01, 0x04, 0x0e, 0x01, 0x07, 0x09, 0x04, 0x0c, 0x0a, 0x0e, 0x08, 0x02, 0x0d,
			/* [0x3d70] */ 0x00, 0x0f, 0x06, 0x0c, 0x0a, 0x09, 0x0d, 0x00, 0x0f, 0x03, 0x03, 0x05, 0x05, 0x06, 0x08, 0x0b,
			/* [0x3d80] */ 0x8d, 0x81, 0x82, 0x8f, 0x88, 0x8d, 0x84, 0x88, 0x86, 0x8a, 0x8f, 0x83, 0x8b, 0x87, 0x81, 0x84,
			/* [0x3d90] */ 0x8a, 0x8c, 0x89, 0x85, 0x83, 0x86, 0x8e, 0x8b, 0x85, 0x80, 0x80, 0x8e, 0x8c, 0x89, 0x87, 0x82,
			/* [0x3da0] */ 0x87, 0x82, 0x8b, 0x81, 0x84, 0x8e, 0x81, 0x87, 0x89, 0x84, 0x8c, 0x8a, 0x8e, 0x88, 0x82, 0x8d,
			/* [0x3db0] */ 0x80, 0x8f, 0x86, 0x8c, 0x8a, 0x89, 0x8d, 0x80, 0x8f, 0x83, 0x83, 0x85, 0x85, 0x86, 0x88, 0x8b,
			/* [0x3dc0] */ 0xfd, 0xf1, 0xf2, 0xff, 0xf8, 0xfd, 0xf4, 0xf8, 0xf6, 0xfa, 0xff, 0xf3, 0xfb, 0xf7, 0xf1, 0xf4,
			/* [0x3dd0] */ 0xfa, 0xfc, 0xf9, 0xf5, 0xf3, 0xf6, 0xfe, 0xfb, 0xf5, 0xf0, 0xf0, 0xfe, 0xfc, 0xf9, 0xf7, 0xf2,
			/* [0x3de0] */ 0xf7, 0xf2, 0xfb, 0xf1, 0xf4, 0xfe, 0xf1, 0xf7, 0xf9, 0xf4, 0xfc, 0xfa, 0xfe, 0xf8, 0xf2, 0xfd,
			/* [0x3df0] */ 0xf0, 0xff, 0xf6, 0xfc, 0xfa, 0xf9, 0xfd, 0xf0, 0xff, 0xf3, 0xf3, 0xf5, 0xf5, 0xf6, 0xf8, 0xfb,
			/* [0x3e00] */ 0x0d, 0x01, 0x02, 0x0f, 0x08, 0x0d, 0x04, 0x08, 0x06, 0x0a, 0x0f, 0x03, 0x0b, 0x07, 0x01, 0x04,
			/* [0x3e10] */ 0x0a, 0x0c, 0x09, 0x05, 0x03, 0x06, 0x0e, 0x0b, 0x05, 0x00, 0x00, 0x0e, 0x0c, 0x09, 0x07, 0x02,
			/* [0x3e20] */ 0x07, 0x02, 0x0b, 0x01, 0x04, 0x0e, 0x01, 0x07, 0x09, 0x04, 0x0c, 0x0a, 0x0e, 0x08, 0x02, 0x0d,
			/* [0x3e30] */ 0x00, 0x0f, 0x06, 0x0c, 0x0a, 0x09, 0x0d, 0x00, 0x0f, 0x03, 0x03, 0x05, 0x05, 0x06, 0x08, 0x0b,
			/* [0x3e40] */ 0xed, 0xe1, 0xe2, 0xef, 0xe8, 0xed, 0xe4, 0xe8, 0xe6, 0xea, 0xef, 0xe3, 0xeb, 0xe7, 0xe1, 0xe4,
			/* [0x3e50] */ 0xea, 0xec, 0xe9, 0xe5, 0xe3, 0xe6, 0xee, 0xeb, 0xe5, 0xe0, 0xe0, 0xee, 0xec, 0xe9, 0xe7, 0xe2,
			/* [0x3e60] */ 0xe7, 0xe2, 0xeb, 0xe1, 0xe4, 0xee, 0xe1, 0xe7, 0xe9, 0xe4, 0xec, 0xea, 0xee, 0xe8, 0xe2, 0xed,
			/* [0x3e70] */ 0xe0, 0xef, 0xe6, 0xec, 0xea, 0xe9, 0xed, 0xe0, 0xef, 0xe3, 0xe3, 0xe5, 0xe5, 0xe6, 0xe8, 0xeb,
			/* [0x3e80] */ 0x5d, 0x51, 0x52, 0x5f, 0x58, 0x5d, 0x54, 0x58, 0x56, 0x5a, 0x5f, 0x53, 0x5b, 0x57, 0x51, 0x54,
			/* [0x3e90] */ 0x5a, 0x5c, 0x59, 0x55, 0x53, 0x56, 0x5e, 0x5b, 0x55, 0x50, 0x50, 0x5e, 0x5c, 0x59, 0x57, 0x52,
			/* [0x3ea0] */ 0x57, 0x52, 0x5b, 0x51, 0x54, 0x5e, 0x51, 0x57, 0x59, 0x54, 0x5c, 0x5a, 0x5e, 0x58, 0x52, 0x5d,
			/* [0x3eb0] */ 0x50, 0x5f, 0x56, 0x5c, 0x5a, 0x59, 0x5d, 0x50, 0x5f, 0x53, 0x53, 0x55, 0x55, 0x56, 0x58, 0x5b,
			/* [0x3ec0] */ 0x2d, 0x21, 0x22, 0x2f, 0x28, 0x2d, 0x24, 0x28, 0x26, 0x2a, 0x2f, 0x23, 0x2b, 0x27, 0x21, 0x24,
			/* [0x3ed0] */ 0x2a, 0x2c, 0x29, 0x25, 0x23, 0x26, 0x2e, 0x2b, 0x25, 0x20, 0x20, 0x2e, 0x2c, 0x29, 0x27, 0x22,
			/* [0x3ee0] */ 0x27, 0x22, 0x2b, 0x21, 0x24, 0x2e, 0x21, 0x27, 0x29, 0x24, 0x2c, 0x2a, 0x2e, 0x28, 0x22, 0x2d,
			/* [0x3ef0] */ 0x20, 0x2f, 0x26, 0x2c, 0x2a, 0x29, 0x2d, 0x20, 0x2f, 0x23, 0x23, 0x25, 0x25, 0x26, 0x28, 0x2b,
			/* [0x3f00] */ 0x9d, 0x91, 0x92, 0x9f, 0x98, 0x9d, 0x94, 0x98, 0x96, 0x9a, 0x9f, 0x93, 0x9b, 0x97, 0x91, 0x94,
			/* [0x3f10] */ 0x9a, 0x9c, 0x99, 0x95, 0x93, 0x96, 0x9e, 0x9b, 0x95, 0x90, 0x90, 0x9e, 0x9c, 0x99, 0x97, 0x92,
			/* [0x3f20] */ 0x97, 0x92, 0x9b, 0x91, 0x94, 0x9e, 0x91, 0x97, 0x99, 0x94, 0x9c, 0x9a, 0x9e, 0x98, 0x92, 0x9d,
			/* [0x3f30] */ 0x90, 0x9f, 0x96, 0x9c, 0x9a, 0x99, 0x9d, 0x90, 0x9f, 0x93, 0x93, 0x95, 0x95, 0x96, 0x98, 0x9b,
			/* [0x3f40] */ 0x3d, 0x31, 0x32, 0x3f, 0x38, 0x3d, 0x34, 0x38, 0x36, 0x3a, 0x3f, 0x33, 0x3b, 0x37, 0x31, 0x34,
			/* [0x3f50] */ 0x3a, 0x3c, 0x39, 0x35, 0x33, 0x36, 0x3e, 0x3b, 0x35, 0x30, 0x30, 0x3e, 0x3c, 0x39, 0x37, 0x32,
			/* [0x3f60] */ 0x37, 0x32, 0x3b, 0x31, 0x34, 0x3e, 0x31, 0x37, 0x39, 0x34, 0x3c, 0x3a, 0x3e, 0x38, 0x32, 0x3d,
			/* [0x3f70] */ 0x30, 0x3f, 0x36, 0x3c, 0x3a, 0x39, 0x3d, 0x30, 0x3f, 0x33, 0x33, 0x35, 0x35, 0x36, 0x38, 0x3b,
			/* [0x3f80] */ 0x2d, 0x21, 0x22, 0x2f, 0x28, 0x2d, 0x24, 0x28, 0x26, 0x2a, 0x2f, 0x23, 0x2b, 0x27, 0x21, 0x24,
			/* [0x3f90] */ 0x2a, 0x2c, 0x29, 0x25, 0x23, 0x26, 0x2e, 0x2b, 0x25, 0x20, 0x20, 0x2e, 0x2c, 0x29, 0x27, 0x22,
			/* [0x3fa0] */ 0x27, 0x22, 0x2b, 0x21, 0x24, 0x2e, 0x21, 0x27, 0x29, 0x24, 0x2c, 0x2a, 0x2e, 0x28, 0x22, 0x2d,
			/* [0x3fb0] */ 0x20, 0x2f, 0x26, 0x2c, 0x2a, 0x29, 0x2d, 0x20, 0x2f, 0x23, 0x23, 0x25, 0x25, 0x26, 0x28, 0x2b,
			/* [0x3fc0] */ 0xcd, 0xc1, 0xc2, 0xcf, 0xc8, 0xcd, 0xc4, 0xc8, 0xc6, 0xca, 0xcf, 0xc3, 0xcb, 0xc7, 0xc1, 0xc4,
			/* [0x3fd0] */ 0xca, 0xcc, 0xc9, 0xc5, 0xc3, 0xc6, 0xce, 0xcb, 0xc5, 0xc0, 0xc0, 0xce, 0xcc, 0xc9, 0xc7, 0xc2,
			/* [0x3fe0] */ 0xc7, 0xc2, 0xcb, 0xc1, 0xc4, 0xce, 0xc1, 0xc7, 0xc9, 0xc4, 0xcc, 0xca, 0xce, 0xc8, 0xc2, 0xcd,
			/* [0x3ff0] */ 0xc0, 0xcf, 0xc6, 0xcc, 0xca, 0xc9, 0xcd, 0xc0, 0xcf, 0xc3, 0xc3, 0xc5, 0xc5, 0xc6, 0xc8, 0xcb
		} ; // Ende s_anS
		static unsigned char s_anP32 [4096] = {
			/* [0x0000] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00,
			/* [0x0010] */ 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x40, 0x10, 0x40, 0x00, 0x00, 0x10, 0x40, 0x00, 0x40, 0x10,
			/* [0x0020] */ 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x40, 0x00, 0x40, 0x08, 0x00, 0x00, 0x40, 0x08, 0x40, 0x00,
			/* [0x0030] */ 0x00, 0x08, 0x00, 0x10, 0x00, 0x08, 0x40, 0x10, 0x40, 0x08, 0x00, 0x10, 0x40, 0x08, 0x40, 0x10,
			/* [0x0040] */ 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x40, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x40, 0x02,
			/* [0x0050] */ 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x40, 0x12, 0x40, 0x00, 0x00, 0x12, 0x40, 0x00, 0x40, 0x12,
			/* [0x0060] */ 0x00, 0x08, 0x00, 0x02, 0x00, 0x08, 0x40, 0x02, 0x40, 0x08, 0x00, 0x02, 0x40, 0x08, 0x40, 0x02,
			/* [0x0070] */ 0x00, 0x08, 0x00, 0x12, 0x00, 0x08, 0x40, 0x12, 0x40, 0x08, 0x00, 0x12, 0x40, 0x08, 0x40, 0x12,
			/* [0x0080] */ 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x42, 0x00, 0x40, 0x00, 0x02, 0x00, 0x40, 0x00, 0x42, 0x00,
			/* [0x0090] */ 0x00, 0x00, 0x02, 0x10, 0x00, 0x00, 0x42, 0x10, 0x40, 0x00, 0x02, 0x10, 0x40, 0x00, 0x42, 0x10,
			/* [0x00a0] */ 0x00, 0x08, 0x02, 0x00, 0x00, 0x08, 0x42, 0x00, 0x40, 0x08, 0x02, 0x00, 0x40, 0x08, 0x42, 0x00,
			/* [0x00b0] */ 0x00, 0x08, 0x02, 0x10, 0x00, 0x08, 0x42, 0x10, 0x40, 0x08, 0x02, 0x10, 0x40, 0x08, 0x42, 0x10,
			/* [0x00c0] */ 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x42, 0x02, 0x40, 0x00, 0x02, 0x02, 0x40, 0x00, 0x42, 0x02,
			/* [0x00d0] */ 0x00, 0x00, 0x02, 0x12, 0x00, 0x00, 0x42, 0x12, 0x40, 0x00, 0x02, 0x12, 0x40, 0x00, 0x42, 0x12,
			/* [0x00e0] */ 0x00, 0x08, 0x02, 0x02, 0x00, 0x08, 0x42, 0x02, 0x40, 0x08, 0x02, 0x02, 0x40, 0x08, 0x42, 0x02,
			/* [0x00f0] */ 0x00, 0x08, 0x02, 0x12, 0x00, 0x08, 0x42, 0x12, 0x40, 0x08, 0x02, 0x12, 0x40, 0x08, 0x42, 0x12,
			/* [0x0100] */ 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x40, 0x00, 0x80, 0x00, 0x40, 0x00, 0xc0, 0x00,
			/* [0x0110] */ 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0xc0, 0x10, 0x40, 0x00, 0x80, 0x10, 0x40, 0x00, 0xc0, 0x10,
			/* [0x0120] */ 0x00, 0x08, 0x80, 0x00, 0x00, 0x08, 0xc0, 0x00, 0x40, 0x08, 0x80, 0x00, 0x40, 0x08, 0xc0, 0x00,
			/* [0x0130] */ 0x00, 0x08, 0x80, 0x10, 0x00, 0x08, 0xc0, 0x10, 0x40, 0x08, 0x80, 0x10, 0x40, 0x08, 0xc0, 0x10,
			/* [0x0140] */ 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0xc0, 0x02, 0x40, 0x00, 0x80, 0x02, 0x40, 0x00, 0xc0, 0x02,
			/* [0x0150] */ 0x00, 0x00, 0x80, 0x12, 0x00, 0x00, 0xc0, 0x12, 0x40, 0x00, 0x80, 0x12, 0x40, 0x00, 0xc0, 0x12,
			/* [0x0160] */ 0x00, 0x08, 0x80, 0x02, 0x00, 0x08, 0xc0, 0x02, 0x40, 0x08, 0x80, 0x02, 0x40, 0x08, 0xc0, 0x02,
			/* [0x0170] */ 0x00, 0x08, 0x80, 0x12, 0x00, 0x08, 0xc0, 0x12, 0x40, 0x08, 0x80, 0x12, 0x40, 0x08, 0xc0, 0x12,
			/* [0x0180] */ 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x40, 0x00, 0x82, 0x00, 0x40, 0x00, 0xc2, 0x00,
			/* [0x0190] */ 0x00, 0x00, 0x82, 0x10, 0x00, 0x00, 0xc2, 0x10, 0x40, 0x00, 0x82, 0x10, 0x40, 0x00, 0xc2, 0x10,
			/* [0x01a0] */ 0x00, 0x08, 0x82, 0x00, 0x00, 0x08, 0xc2, 0x00, 0x40, 0x08, 0x82, 0x00, 0x40, 0x08, 0xc2, 0x00,
			/* [0x01b0] */ 0x00, 0x08, 0x82, 0x10, 0x00, 0x08, 0xc2, 0x10, 0x40, 0x08, 0x82, 0x10, 0x40, 0x08, 0xc2, 0x10,
			/* [0x01c0] */ 0x00, 0x00, 0x82, 0x02, 0x00, 0x00, 0xc2, 0x02, 0x40, 0x00, 0x82, 0x02, 0x40, 0x00, 0xc2, 0x02,
			/* [0x01d0] */ 0x00, 0x00, 0x82, 0x12, 0x00, 0x00, 0xc2, 0x12, 0x40, 0x00, 0x82, 0x12, 0x40, 0x00, 0xc2, 0x12,
			/* [0x01e0] */ 0x00, 0x08, 0x82, 0x02, 0x00, 0x08, 0xc2, 0x02, 0x40, 0x08, 0x82, 0x02, 0x40, 0x08, 0xc2, 0x02,
			/* [0x01f0] */ 0x00, 0x08, 0x82, 0x12, 0x00, 0x08, 0xc2, 0x12, 0x40, 0x08, 0x82, 0x12, 0x40, 0x08, 0xc2, 0x12,
			/* [0x0200] */ 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x40, 0x00, 0x40, 0x80, 0x00, 0x00, 0x40, 0x80, 0x40, 0x00,
			/* [0x0210] */ 0x00, 0x80, 0x00, 0x10, 0x00, 0x80, 0x40, 0x10, 0x40, 0x80, 0x00, 0x10, 0x40, 0x80, 0x40, 0x10,
			/* [0x0220] */ 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x40, 0x00, 0x40, 0x88, 0x00, 0x00, 0x40, 0x88, 0x40, 0x00,
			/* [0x0230] */ 0x00, 0x88, 0x00, 0x10, 0x00, 0x88, 0x40, 0x10, 0x40, 0x88, 0x00, 0x10, 0x40, 0x88, 0x40, 0x10,
			/* [0x0240] */ 0x00, 0x80, 0x00, 0x02, 0x00, 0x80, 0x40, 0x02, 0x40, 0x80, 0x00, 0x02, 0x40, 0x80, 0x40, 0x02,
			/* [0x0250] */ 0x00, 0x80, 0x00, 0x12, 0x00, 0x80, 0x40, 0x12, 0x40, 0x80, 0x00, 0x12, 0x40, 0x80, 0x40, 0x12,
			/* [0x0260] */ 0x00, 0x88, 0x00, 0x02, 0x00, 0x88, 0x40, 0x02, 0x40, 0x88, 0x00, 0x02, 0x40, 0x88, 0x40, 0x02,
			/* [0x0270] */ 0x00, 0x88, 0x00, 0x12, 0x00, 0x88, 0x40, 0x12, 0x40, 0x88, 0x00, 0x12, 0x40, 0x88, 0x40, 0x12,
			/* [0x0280] */ 0x00, 0x80, 0x02, 0x00, 0x00, 0x80, 0x42, 0x00, 0x40, 0x80, 0x02, 0x00, 0x40, 0x80, 0x42, 0x00,
			/* [0x0290] */ 0x00, 0x80, 0x02, 0x10, 0x00, 0x80, 0x42, 0x10, 0x40, 0x80, 0x02, 0x10, 0x40, 0x80, 0x42, 0x10,
			/* [0x02a0] */ 0x00, 0x88, 0x02, 0x00, 0x00, 0x88, 0x42, 0x00, 0x40, 0x88, 0x02, 0x00, 0x40, 0x88, 0x42, 0x00,
			/* [0x02b0] */ 0x00, 0x88, 0x02, 0x10, 0x00, 0x88, 0x42, 0x10, 0x40, 0x88, 0x02, 0x10, 0x40, 0x88, 0x42, 0x10,
			/* [0x02c0] */ 0x00, 0x80, 0x02, 0x02, 0x00, 0x80, 0x42, 0x02, 0x40, 0x80, 0x02, 0x02, 0x40, 0x80, 0x42, 0x02,
			/* [0x02d0] */ 0x00, 0x80, 0x02, 0x12, 0x00, 0x80, 0x42, 0x12, 0x40, 0x80, 0x02, 0x12, 0x40, 0x80, 0x42, 0x12,
			/* [0x02e0] */ 0x00, 0x88, 0x02, 0x02, 0x00, 0x88, 0x42, 0x02, 0x40, 0x88, 0x02, 0x02, 0x40, 0x88, 0x42, 0x02,
			/* [0x02f0] */ 0x00, 0x88, 0x02, 0x12, 0x00, 0x88, 0x42, 0x12, 0x40, 0x88, 0x02, 0x12, 0x40, 0x88, 0x42, 0x12,
			/* [0x0300] */ 0x00, 0x80, 0x80, 0x00, 0x00, 0x80, 0xc0, 0x00, 0x40, 0x80, 0x80, 0x00, 0x40, 0x80, 0xc0, 0x00,
			/* [0x0310] */ 0x00, 0x80, 0x80, 0x10, 0x00, 0x80, 0xc0, 0x10, 0x40, 0x80, 0x80, 0x10, 0x40, 0x80, 0xc0, 0x10,
			/* [0x0320] */ 0x00, 0x88, 0x80, 0x00, 0x00, 0x88, 0xc0, 0x00, 0x40, 0x88, 0x80, 0x00, 0x40, 0x88, 0xc0, 0x00,
			/* [0x0330] */ 0x00, 0x88, 0x80, 0x10, 0x00, 0x88, 0xc0, 0x10, 0x40, 0x88, 0x80, 0x10, 0x40, 0x88, 0xc0, 0x10,
			/* [0x0340] */ 0x00, 0x80, 0x80, 0x02, 0x00, 0x80, 0xc0, 0x02, 0x40, 0x80, 0x80, 0x02, 0x40, 0x80, 0xc0, 0x02,
			/* [0x0350] */ 0x00, 0x80, 0x80, 0x12, 0x00, 0x80, 0xc0, 0x12, 0x40, 0x80, 0x80, 0x12, 0x40, 0x80, 0xc0, 0x12,
			/* [0x0360] */ 0x00, 0x88, 0x80, 0x02, 0x00, 0x88, 0xc0, 0x02, 0x40, 0x88, 0x80, 0x02, 0x40, 0x88, 0xc0, 0x02,
			/* [0x0370] */ 0x00, 0x88, 0x80, 0x12, 0x00, 0x88, 0xc0, 0x12, 0x40, 0x88, 0x80, 0x12, 0x40, 0x88, 0xc0, 0x12,
			/* [0x0380] */ 0x00, 0x80, 0x82, 0x00, 0x00, 0x80, 0xc2, 0x00, 0x40, 0x80, 0x82, 0x00, 0x40, 0x80, 0xc2, 0x00,
			/* [0x0390] */ 0x00, 0x80, 0x82, 0x10, 0x00, 0x80, 0xc2, 0x10, 0x40, 0x80, 0x82, 0x10, 0x40, 0x80, 0xc2, 0x10,
			/* [0x03a0] */ 0x00, 0x88, 0x82, 0x00, 0x00, 0x88, 0xc2, 0x00, 0x40, 0x88, 0x82, 0x00, 0x40, 0x88, 0xc2, 0x00,
			/* [0x03b0] */ 0x00, 0x88, 0x82, 0x10, 0x00, 0x88, 0xc2, 0x10, 0x40, 0x88, 0x82, 0x10, 0x40, 0x88, 0xc2, 0x10,
			/* [0x03c0] */ 0x00, 0x80, 0x82, 0x02, 0x00, 0x80, 0xc2, 0x02, 0x40, 0x80, 0x82, 0x02, 0x40, 0x80, 0xc2, 0x02,
			/* [0x03d0] */ 0x00, 0x80, 0x82, 0x12, 0x00, 0x80, 0xc2, 0x12, 0x40, 0x80, 0x82, 0x12, 0x40, 0x80, 0xc2, 0x12,
			/* [0x03e0] */ 0x00, 0x88, 0x82, 0x02, 0x00, 0x88, 0xc2, 0x02, 0x40, 0x88, 0x82, 0x02, 0x40, 0x88, 0xc2, 0x02,
			/* [0x03f0] */ 0x00, 0x88, 0x82, 0x12, 0x00, 0x88, 0xc2, 0x12, 0x40, 0x88, 0x82, 0x12, 0x40, 0x88, 0xc2, 0x12,
			/* [0x0400] */ 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x80, 0x40, 0x00, 0x00,
			/* [0x0410] */ 0x00, 0x00, 0x10, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x40, 0x10, 0x00, 0x80, 0x40, 0x10, 0x00,
			/* [0x0420] */ 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x80, 0x40, 0x00, 0x40,
			/* [0x0430] */ 0x00, 0x00, 0x10, 0x40, 0x80, 0x00, 0x10, 0x40, 0x00, 0x40, 0x10, 0x40, 0x80, 0x40, 0x10, 0x40,
			/* [0x0440] */ 0x04, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x84, 0x40, 0x00, 0x00,
			/* [0x0450] */ 0x04, 0x00, 0x10, 0x00, 0x84, 0x00, 0x10, 0x00, 0x04, 0x40, 0x10, 0x00, 0x84, 0x40, 0x10, 0x00,
			/* [0x0460] */ 0x04, 0x00, 0x00, 0x40, 0x84, 0x00, 0x00, 0x40, 0x04, 0x40, 0x00, 0x40, 0x84, 0x40, 0x00, 0x40,
			/* [0x0470] */ 0x04, 0x00, 0x10, 0x40, 0x84, 0x00, 0x10, 0x40, 0x04, 0x40, 0x10, 0x40, 0x84, 0x40, 0x10, 0x40,
			/* [0x0480] */ 0x00, 0x00, 0x00, 0x04, 0x80, 0x00, 0x00, 0x04, 0x00, 0x40, 0x00, 0x04, 0x80, 0x40, 0x00, 0x04,
			/* [0x0490] */ 0x00, 0x00, 0x10, 0x04, 0x80, 0x00, 0x10, 0x04, 0x00, 0x40, 0x10, 0x04, 0x80, 0x40, 0x10, 0x04,
			/* [0x04a0] */ 0x00, 0x00, 0x00, 0x44, 0x80, 0x00, 0x00, 0x44, 0x00, 0x40, 0x00, 0x44, 0x80, 0x40, 0x00, 0x44,
			/* [0x04b0] */ 0x00, 0x00, 0x10, 0x44, 0x80, 0x00, 0x10, 0x44, 0x00, 0x40, 0x10, 0x44, 0x80, 0x40, 0x10, 0x44,
			/* [0x04c0] */ 0x04, 0x00, 0x00, 0x04, 0x84, 0x00, 0x00, 0x04, 0x04, 0x40, 0x00, 0x04, 0x84, 0x40, 0x00, 0x04,
			/* [0x04d0] */ 0x04, 0x00, 0x10, 0x04, 0x84, 0x00, 0x10, 0x04, 0x04, 0x40, 0x10, 0x04, 0x84, 0x40, 0x10, 0x04,
			/* [0x04e0] */ 0x04, 0x00, 0x00, 0x44, 0x84, 0x00, 0x00, 0x44, 0x04, 0x40, 0x00, 0x44, 0x84, 0x40, 0x00, 0x44,
			/* [0x04f0] */ 0x04, 0x00, 0x10, 0x44, 0x84, 0x00, 0x10, 0x44, 0x04, 0x40, 0x10, 0x44, 0x84, 0x40, 0x10, 0x44,
			/* [0x0500] */ 0x00, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x80, 0x41, 0x00, 0x00,
			/* [0x0510] */ 0x00, 0x01, 0x10, 0x00, 0x80, 0x01, 0x10, 0x00, 0x00, 0x41, 0x10, 0x00, 0x80, 0x41, 0x10, 0x00,
			/* [0x0520] */ 0x00, 0x01, 0x00, 0x40, 0x80, 0x01, 0x00, 0x40, 0x00, 0x41, 0x00, 0x40, 0x80, 0x41, 0x00, 0x40,
			/* [0x0530] */ 0x00, 0x01, 0x10, 0x40, 0x80, 0x01, 0x10, 0x40, 0x00, 0x41, 0x10, 0x40, 0x80, 0x41, 0x10, 0x40,
			/* [0x0540] */ 0x04, 0x01, 0x00, 0x00, 0x84, 0x01, 0x00, 0x00, 0x04, 0x41, 0x00, 0x00, 0x84, 0x41, 0x00, 0x00,
			/* [0x0550] */ 0x04, 0x01, 0x10, 0x00, 0x84, 0x01, 0x10, 0x00, 0x04, 0x41, 0x10, 0x00, 0x84, 0x41, 0x10, 0x00,
			/* [0x0560] */ 0x04, 0x01, 0x00, 0x40, 0x84, 0x01, 0x00, 0x40, 0x04, 0x41, 0x00, 0x40, 0x84, 0x41, 0x00, 0x40,
			/* [0x0570] */ 0x04, 0x01, 0x10, 0x40, 0x84, 0x01, 0x10, 0x40, 0x04, 0x41, 0x10, 0x40, 0x84, 0x41, 0x10, 0x40,
			/* [0x0580] */ 0x00, 0x01, 0x00, 0x04, 0x80, 0x01, 0x00, 0x04, 0x00, 0x41, 0x00, 0x04, 0x80, 0x41, 0x00, 0x04,
			/* [0x0590] */ 0x00, 0x01, 0x10, 0x04, 0x80, 0x01, 0x10, 0x04, 0x00, 0x41, 0x10, 0x04, 0x80, 0x41, 0x10, 0x04,
			/* [0x05a0] */ 0x00, 0x01, 0x00, 0x44, 0x80, 0x01, 0x00, 0x44, 0x00, 0x41, 0x00, 0x44, 0x80, 0x41, 0x00, 0x44,
			/* [0x05b0] */ 0x00, 0x01, 0x10, 0x44, 0x80, 0x01, 0x10, 0x44, 0x00, 0x41, 0x10, 0x44, 0x80, 0x41, 0x10, 0x44,
			/* [0x05c0] */ 0x04, 0x01, 0x00, 0x04, 0x84, 0x01, 0x00, 0x04, 0x04, 0x41, 0x00, 0x04, 0x84, 0x41, 0x00, 0x04,
			/* [0x05d0] */ 0x04, 0x01, 0x10, 0x04, 0x84, 0x01, 0x10, 0x04, 0x04, 0x41, 0x10, 0x04, 0x84, 0x41, 0x10, 0x04,
			/* [0x05e0] */ 0x04, 0x01, 0x00, 0x44, 0x84, 0x01, 0x00, 0x44, 0x04, 0x41, 0x00, 0x44, 0x84, 0x41, 0x00, 0x44,
			/* [0x05f0] */ 0x04, 0x01, 0x10, 0x44, 0x84, 0x01, 0x10, 0x44, 0x04, 0x41, 0x10, 0x44, 0x84, 0x41, 0x10, 0x44,
			/* [0x0600] */ 0x00, 0x00, 0x01, 0x00, 0x80, 0x00, 0x01, 0x00, 0x00, 0x40, 0x01, 0x00, 0x80, 0x40, 0x01, 0x00,
			/* [0x0610] */ 0x00, 0x00, 0x11, 0x00, 0x80, 0x00, 0x11, 0x00, 0x00, 0x40, 0x11, 0x00, 0x80, 0x40, 0x11, 0x00,
			/* [0x0620] */ 0x00, 0x00, 0x01, 0x40, 0x80, 0x00, 0x01, 0x40, 0x00, 0x40, 0x01, 0x40, 0x80, 0x40, 0x01, 0x40,
			/* [0x0630] */ 0x00, 0x00, 0x11, 0x40, 0x80, 0x00, 0x11, 0x40, 0x00, 0x40, 0x11, 0x40, 0x80, 0x40, 0x11, 0x40,
			/* [0x0640] */ 0x04, 0x00, 0x01, 0x00, 0x84, 0x00, 0x01, 0x00, 0x04, 0x40, 0x01, 0x00, 0x84, 0x40, 0x01, 0x00,
			/* [0x0650] */ 0x04, 0x00, 0x11, 0x00, 0x84, 0x00, 0x11, 0x00, 0x04, 0x40, 0x11, 0x00, 0x84, 0x40, 0x11, 0x00,
			/* [0x0660] */ 0x04, 0x00, 0x01, 0x40, 0x84, 0x00, 0x01, 0x40, 0x04, 0x40, 0x01, 0x40, 0x84, 0x40, 0x01, 0x40,
			/* [0x0670] */ 0x04, 0x00, 0x11, 0x40, 0x84, 0x00, 0x11, 0x40, 0x04, 0x40, 0x11, 0x40, 0x84, 0x40, 0x11, 0x40,
			/* [0x0680] */ 0x00, 0x00, 0x01, 0x04, 0x80, 0x00, 0x01, 0x04, 0x00, 0x40, 0x01, 0x04, 0x80, 0x40, 0x01, 0x04,
			/* [0x0690] */ 0x00, 0x00, 0x11, 0x04, 0x80, 0x00, 0x11, 0x04, 0x00, 0x40, 0x11, 0x04, 0x80, 0x40, 0x11, 0x04,
			/* [0x06a0] */ 0x00, 0x00, 0x01, 0x44, 0x80, 0x00, 0x01, 0x44, 0x00, 0x40, 0x01, 0x44, 0x80, 0x40, 0x01, 0x44,
			/* [0x06b0] */ 0x00, 0x00, 0x11, 0x44, 0x80, 0x00, 0x11, 0x44, 0x00, 0x40, 0x11, 0x44, 0x80, 0x40, 0x11, 0x44,
			/* [0x06c0] */ 0x04, 0x00, 0x01, 0x04, 0x84, 0x00, 0x01, 0x04, 0x04, 0x40, 0x01, 0x04, 0x84, 0x40, 0x01, 0x04,
			/* [0x06d0] */ 0x04, 0x00, 0x11, 0x04, 0x84, 0x00, 0x11, 0x04, 0x04, 0x40, 0x11, 0x04, 0x84, 0x40, 0x11, 0x04,
			/* [0x06e0] */ 0x04, 0x00, 0x01, 0x44, 0x84, 0x00, 0x01, 0x44, 0x04, 0x40, 0x01, 0x44, 0x84, 0x40, 0x01, 0x44,
			/* [0x06f0] */ 0x04, 0x00, 0x11, 0x44, 0x84, 0x00, 0x11, 0x44, 0x04, 0x40, 0x11, 0x44, 0x84, 0x40, 0x11, 0x44,
			/* [0x0700] */ 0x00, 0x01, 0x01, 0x00, 0x80, 0x01, 0x01, 0x00, 0x00, 0x41, 0x01, 0x00, 0x80, 0x41, 0x01, 0x00,
			/* [0x0710] */ 0x00, 0x01, 0x11, 0x00, 0x80, 0x01, 0x11, 0x00, 0x00, 0x41, 0x11, 0x00, 0x80, 0x41, 0x11, 0x00,
			/* [0x0720] */ 0x00, 0x01, 0x01, 0x40, 0x80, 0x01, 0x01, 0x40, 0x00, 0x41, 0x01, 0x40, 0x80, 0x41, 0x01, 0x40,
			/* [0x0730] */ 0x00, 0x01, 0x11, 0x40, 0x80, 0x01, 0x11, 0x40, 0x00, 0x41, 0x11, 0x40, 0x80, 0x41, 0x11, 0x40,
			/* [0x0740] */ 0x04, 0x01, 0x01, 0x00, 0x84, 0x01, 0x01, 0x00, 0x04, 0x41, 0x01, 0x00, 0x84, 0x41, 0x01, 0x00,
			/* [0x0750] */ 0x04, 0x01, 0x11, 0x00, 0x84, 0x01, 0x11, 0x00, 0x04, 0x41, 0x11, 0x00, 0x84, 0x41, 0x11, 0x00,
			/* [0x0760] */ 0x04, 0x01, 0x01, 0x40, 0x84, 0x01, 0x01, 0x40, 0x04, 0x41, 0x01, 0x40, 0x84, 0x41, 0x01, 0x40,
			/* [0x0770] */ 0x04, 0x01, 0x11, 0x40, 0x84, 0x01, 0x11, 0x40, 0x04, 0x41, 0x11, 0x40, 0x84, 0x41, 0x11, 0x40,
			/* [0x0780] */ 0x00, 0x01, 0x01, 0x04, 0x80, 0x01, 0x01, 0x04, 0x00, 0x41, 0x01, 0x04, 0x80, 0x41, 0x01, 0x04,
			/* [0x0790] */ 0x00, 0x01, 0x11, 0x04, 0x80, 0x01, 0x11, 0x04, 0x00, 0x41, 0x11, 0x04, 0x80, 0x41, 0x11, 0x04,
			/* [0x07a0] */ 0x00, 0x01, 0x01, 0x44, 0x80, 0x01, 0x01, 0x44, 0x00, 0x41, 0x01, 0x44, 0x80, 0x41, 0x01, 0x44,
			/* [0x07b0] */ 0x00, 0x01, 0x11, 0x44, 0x80, 0x01, 0x11, 0x44, 0x00, 0x41, 0x11, 0x44, 0x80, 0x41, 0x11, 0x44,
			/* [0x07c0] */ 0x04, 0x01, 0x01, 0x04, 0x84, 0x01, 0x01, 0x04, 0x04, 0x41, 0x01, 0x04, 0x84, 0x41, 0x01, 0x04,
			/* [0x07d0] */ 0x04, 0x01, 0x11, 0x04, 0x84, 0x01, 0x11, 0x04, 0x04, 0x41, 0x11, 0x04, 0x84, 0x41, 0x11, 0x04,
			/* [0x07e0] */ 0x04, 0x01, 0x01, 0x44, 0x84, 0x01, 0x01, 0x44, 0x04, 0x41, 0x01, 0x44, 0x84, 0x41, 0x01, 0x44,
			/* [0x07f0] */ 0x04, 0x01, 0x11, 0x44, 0x84, 0x01, 0x11, 0x44, 0x04, 0x41, 0x11, 0x44, 0x84, 0x41, 0x11, 0x44,
			/* [0x0800] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x20, 0x00,
			/* [0x0810] */ 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x20, 0x08, 0x00, 0x20, 0x00, 0x08, 0x00, 0x20, 0x20, 0x08,
			/* [0x0820] */ 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x20, 0x00, 0x10, 0x20, 0x00, 0x00, 0x10, 0x20, 0x20, 0x00,
			/* [0x0830] */ 0x10, 0x00, 0x00, 0x08, 0x10, 0x00, 0x20, 0x08, 0x10, 0x20, 0x00, 0x08, 0x10, 0x20, 0x20, 0x08,
			/* [0x0840] */ 0x20, 0x00, 0x00, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x20, 0x00, 0x00, 0x20, 0x20, 0x20, 0x00,
			/* [0x0850] */ 0x20, 0x00, 0x00, 0x08, 0x20, 0x00, 0x20, 0x08, 0x20, 0x20, 0x00, 0x08, 0x20, 0x20, 0x20, 0x08,
			/* [0x0860] */ 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x20, 0x00, 0x30, 0x20, 0x00, 0x00, 0x30, 0x20, 0x20, 0x00,
			/* [0x0870] */ 0x30, 0x00, 0x00, 0x08, 0x30, 0x00, 0x20, 0x08, 0x30, 0x20, 0x00, 0x08, 0x30, 0x20, 0x20, 0x08,
			/* [0x0880] */ 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x20, 0x80, 0x00, 0x20, 0x00, 0x80, 0x00, 0x20, 0x20, 0x80,
			/* [0x0890] */ 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x20, 0x88, 0x00, 0x20, 0x00, 0x88, 0x00, 0x20, 0x20, 0x88,
			/* [0x08a0] */ 0x10, 0x00, 0x00, 0x80, 0x10, 0x00, 0x20, 0x80, 0x10, 0x20, 0x00, 0x80, 0x10, 0x20, 0x20, 0x80,
			/* [0x08b0] */ 0x10, 0x00, 0x00, 0x88, 0x10, 0x00, 0x20, 0x88, 0x10, 0x20, 0x00, 0x88, 0x10, 0x20, 0x20, 0x88,
			/* [0x08c0] */ 0x20, 0x00, 0x00, 0x80, 0x20, 0x00, 0x20, 0x80, 0x20, 0x20, 0x00, 0x80, 0x20, 0x20, 0x20, 0x80,
			/* [0x08d0] */ 0x20, 0x00, 0x00, 0x88, 0x20, 0x00, 0x20, 0x88, 0x20, 0x20, 0x00, 0x88, 0x20, 0x20, 0x20, 0x88,
			/* [0x08e0] */ 0x30, 0x00, 0x00, 0x80, 0x30, 0x00, 0x20, 0x80, 0x30, 0x20, 0x00, 0x80, 0x30, 0x20, 0x20, 0x80,
			/* [0x08f0] */ 0x30, 0x00, 0x00, 0x88, 0x30, 0x00, 0x20, 0x88, 0x30, 0x20, 0x00, 0x88, 0x30, 0x20, 0x20, 0x88,
			/* [0x0900] */ 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x20, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x24, 0x20, 0x00,
			/* [0x0910] */ 0x00, 0x04, 0x00, 0x08, 0x00, 0x04, 0x20, 0x08, 0x00, 0x24, 0x00, 0x08, 0x00, 0x24, 0x20, 0x08,
			/* [0x0920] */ 0x10, 0x04, 0x00, 0x00, 0x10, 0x04, 0x20, 0x00, 0x10, 0x24, 0x00, 0x00, 0x10, 0x24, 0x20, 0x00,
			/* [0x0930] */ 0x10, 0x04, 0x00, 0x08, 0x10, 0x04, 0x20, 0x08, 0x10, 0x24, 0x00, 0x08, 0x10, 0x24, 0x20, 0x08,
			/* [0x0940] */ 0x20, 0x04, 0x00, 0x00, 0x20, 0x04, 0x20, 0x00, 0x20, 0x24, 0x00, 0x00, 0x20, 0x24, 0x20, 0x00,
			/* [0x0950] */ 0x20, 0x04, 0x00, 0x08, 0x20, 0x04, 0x20, 0x08, 0x20, 0x24, 0x00, 0x08, 0x20, 0x24, 0x20, 0x08,
			/* [0x0960] */ 0x30, 0x04, 0x00, 0x00, 0x30, 0x04, 0x20, 0x00, 0x30, 0x24, 0x00, 0x00, 0x30, 0x24, 0x20, 0x00,
			/* [0x0970] */ 0x30, 0x04, 0x00, 0x08, 0x30, 0x04, 0x20, 0x08, 0x30, 0x24, 0x00, 0x08, 0x30, 0x24, 0x20, 0x08,
			/* [0x0980] */ 0x00, 0x04, 0x00, 0x80, 0x00, 0x04, 0x20, 0x80, 0x00, 0x24, 0x00, 0x80, 0x00, 0x24, 0x20, 0x80,
			/* [0x0990] */ 0x00, 0x04, 0x00, 0x88, 0x00, 0x04, 0x20, 0x88, 0x00, 0x24, 0x00, 0x88, 0x00, 0x24, 0x20, 0x88,
			/* [0x09a0] */ 0x10, 0x04, 0x00, 0x80, 0x10, 0x04, 0x20, 0x80, 0x10, 0x24, 0x00, 0x80, 0x10, 0x24, 0x20, 0x80,
			/* [0x09b0] */ 0x10, 0x04, 0x00, 0x88, 0x10, 0x04, 0x20, 0x88, 0x10, 0x24, 0x00, 0x88, 0x10, 0x24, 0x20, 0x88,
			/* [0x09c0] */ 0x20, 0x04, 0x00, 0x80, 0x20, 0x04, 0x20, 0x80, 0x20, 0x24, 0x00, 0x80, 0x20, 0x24, 0x20, 0x80,
			/* [0x09d0] */ 0x20, 0x04, 0x00, 0x88, 0x20, 0x04, 0x20, 0x88, 0x20, 0x24, 0x00, 0x88, 0x20, 0x24, 0x20, 0x88,
			/* [0x09e0] */ 0x30, 0x04, 0x00, 0x80, 0x30, 0x04, 0x20, 0x80, 0x30, 0x24, 0x00, 0x80, 0x30, 0x24, 0x20, 0x80,
			/* [0x09f0] */ 0x30, 0x04, 0x00, 0x88, 0x30, 0x04, 0x20, 0x88, 0x30, 0x24, 0x00, 0x88, 0x30, 0x24, 0x20, 0x88,
			/* [0x0a00] */ 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x01, 0x20, 0x00, 0x00, 0x01, 0x20, 0x20, 0x00,
			/* [0x0a10] */ 0x01, 0x00, 0x00, 0x08, 0x01, 0x00, 0x20, 0x08, 0x01, 0x20, 0x00, 0x08, 0x01, 0x20, 0x20, 0x08,
			/* [0x0a20] */ 0x11, 0x00, 0x00, 0x00, 0x11, 0x00, 0x20, 0x00, 0x11, 0x20, 0x00, 0x00, 0x11, 0x20, 0x20, 0x00,
			/* [0x0a30] */ 0x11, 0x00, 0x00, 0x08, 0x11, 0x00, 0x20, 0x08, 0x11, 0x20, 0x00, 0x08, 0x11, 0x20, 0x20, 0x08,
			/* [0x0a40] */ 0x21, 0x00, 0x00, 0x00, 0x21, 0x00, 0x20, 0x00, 0x21, 0x20, 0x00, 0x00, 0x21, 0x20, 0x20, 0x00,
			/* [0x0a50] */ 0x21, 0x00, 0x00, 0x08, 0x21, 0x00, 0x20, 0x08, 0x21, 0x20, 0x00, 0x08, 0x21, 0x20, 0x20, 0x08,
			/* [0x0a60] */ 0x31, 0x00, 0x00, 0x00, 0x31, 0x00, 0x20, 0x00, 0x31, 0x20, 0x00, 0x00, 0x31, 0x20, 0x20, 0x00,
			/* [0x0a70] */ 0x31, 0x00, 0x00, 0x08, 0x31, 0x00, 0x20, 0x08, 0x31, 0x20, 0x00, 0x08, 0x31, 0x20, 0x20, 0x08,
			/* [0x0a80] */ 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x20, 0x80, 0x01, 0x20, 0x00, 0x80, 0x01, 0x20, 0x20, 0x80,
			/* [0x0a90] */ 0x01, 0x00, 0x00, 0x88, 0x01, 0x00, 0x20, 0x88, 0x01, 0x20, 0x00, 0x88, 0x01, 0x20, 0x20, 0x88,
			/* [0x0aa0] */ 0x11, 0x00, 0x00, 0x80, 0x11, 0x00, 0x20, 0x80, 0x11, 0x20, 0x00, 0x80, 0x11, 0x20, 0x20, 0x80,
			/* [0x0ab0] */ 0x11, 0x00, 0x00, 0x88, 0x11, 0x00, 0x20, 0x88, 0x11, 0x20, 0x00, 0x88, 0x11, 0x20, 0x20, 0x88,
			/* [0x0ac0] */ 0x21, 0x00, 0x00, 0x80, 0x21, 0x00, 0x20, 0x80, 0x21, 0x20, 0x00, 0x80, 0x21, 0x20, 0x20, 0x80,
			/* [0x0ad0] */ 0x21, 0x00, 0x00, 0x88, 0x21, 0x00, 0x20, 0x88, 0x21, 0x20, 0x00, 0x88, 0x21, 0x20, 0x20, 0x88,
			/* [0x0ae0] */ 0x31, 0x00, 0x00, 0x80, 0x31, 0x00, 0x20, 0x80, 0x31, 0x20, 0x00, 0x80, 0x31, 0x20, 0x20, 0x80,
			/* [0x0af0] */ 0x31, 0x00, 0x00, 0x88, 0x31, 0x00, 0x20, 0x88, 0x31, 0x20, 0x00, 0x88, 0x31, 0x20, 0x20, 0x88,
			/* [0x0b00] */ 0x01, 0x04, 0x00, 0x00, 0x01, 0x04, 0x20, 0x00, 0x01, 0x24, 0x00, 0x00, 0x01, 0x24, 0x20, 0x00,
			/* [0x0b10] */ 0x01, 0x04, 0x00, 0x08, 0x01, 0x04, 0x20, 0x08, 0x01, 0x24, 0x00, 0x08, 0x01, 0x24, 0x20, 0x08,
			/* [0x0b20] */ 0x11, 0x04, 0x00, 0x00, 0x11, 0x04, 0x20, 0x00, 0x11, 0x24, 0x00, 0x00, 0x11, 0x24, 0x20, 0x00,
			/* [0x0b30] */ 0x11, 0x04, 0x00, 0x08, 0x11, 0x04, 0x20, 0x08, 0x11, 0x24, 0x00, 0x08, 0x11, 0x24, 0x20, 0x08,
			/* [0x0b40] */ 0x21, 0x04, 0x00, 0x00, 0x21, 0x04, 0x20, 0x00, 0x21, 0x24, 0x00, 0x00, 0x21, 0x24, 0x20, 0x00,
			/* [0x0b50] */ 0x21, 0x04, 0x00, 0x08, 0x21, 0x04, 0x20, 0x08, 0x21, 0x24, 0x00, 0x08, 0x21, 0x24, 0x20, 0x08,
			/* [0x0b60] */ 0x31, 0x04, 0x00, 0x00, 0x31, 0x04, 0x20, 0x00, 0x31, 0x24, 0x00, 0x00, 0x31, 0x24, 0x20, 0x00,
			/* [0x0b70] */ 0x31, 0x04, 0x00, 0x08, 0x31, 0x04, 0x20, 0x08, 0x31, 0x24, 0x00, 0x08, 0x31, 0x24, 0x20, 0x08,
			/* [0x0b80] */ 0x01, 0x04, 0x00, 0x80, 0x01, 0x04, 0x20, 0x80, 0x01, 0x24, 0x00, 0x80, 0x01, 0x24, 0x20, 0x80,
			/* [0x0b90] */ 0x01, 0x04, 0x00, 0x88, 0x01, 0x04, 0x20, 0x88, 0x01, 0x24, 0x00, 0x88, 0x01, 0x24, 0x20, 0x88,
			/* [0x0ba0] */ 0x11, 0x04, 0x00, 0x80, 0x11, 0x04, 0x20, 0x80, 0x11, 0x24, 0x00, 0x80, 0x11, 0x24, 0x20, 0x80,
			/* [0x0bb0] */ 0x11, 0x04, 0x00, 0x88, 0x11, 0x04, 0x20, 0x88, 0x11, 0x24, 0x00, 0x88, 0x11, 0x24, 0x20, 0x88,
			/* [0x0bc0] */ 0x21, 0x04, 0x00, 0x80, 0x21, 0x04, 0x20, 0x80, 0x21, 0x24, 0x00, 0x80, 0x21, 0x24, 0x20, 0x80,
			/* [0x0bd0] */ 0x21, 0x04, 0x00, 0x88, 0x21, 0x04, 0x20, 0x88, 0x21, 0x24, 0x00, 0x88, 0x21, 0x24, 0x20, 0x88,
			/* [0x0be0] */ 0x31, 0x04, 0x00, 0x80, 0x31, 0x04, 0x20, 0x80, 0x31, 0x24, 0x00, 0x80, 0x31, 0x24, 0x20, 0x80,
			/* [0x0bf0] */ 0x31, 0x04, 0x00, 0x88, 0x31, 0x04, 0x20, 0x88, 0x31, 0x24, 0x00, 0x88, 0x31, 0x24, 0x20, 0x88,
			/* [0x0c00] */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x08, 0x00,
			/* [0x0c10] */ 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x08, 0x20, 0x00, 0x02, 0x00, 0x20, 0x00, 0x02, 0x08, 0x20,
			/* [0x0c20] */ 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x02, 0x00, 0x00, 0x08, 0x02, 0x08, 0x00,
			/* [0x0c30] */ 0x08, 0x00, 0x00, 0x20, 0x08, 0x00, 0x08, 0x20, 0x08, 0x02, 0x00, 0x20, 0x08, 0x02, 0x08, 0x20,
			/* [0x0c40] */ 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x08, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x08, 0x00,
			/* [0x0c50] */ 0x02, 0x00, 0x00, 0x20, 0x02, 0x00, 0x08, 0x20, 0x02, 0x02, 0x00, 0x20, 0x02, 0x02, 0x08, 0x20,
			/* [0x0c60] */ 0x0a, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x0a, 0x02, 0x00, 0x00, 0x0a, 0x02, 0x08, 0x00,
			/* [0x0c70] */ 0x0a, 0x00, 0x00, 0x20, 0x0a, 0x00, 0x08, 0x20, 0x0a, 0x02, 0x00, 0x20, 0x0a, 0x02, 0x08, 0x20,
			/* [0x0c80] */ 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x02, 0x0c, 0x00,
			/* [0x0c90] */ 0x00, 0x00, 0x04, 0x20, 0x00, 0x00, 0x0c, 0x20, 0x00, 0x02, 0x04, 0x20, 0x00, 0x02, 0x0c, 0x20,
			/* [0x0ca0] */ 0x08, 0x00, 0x04, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x08, 0x02, 0x04, 0x00, 0x08, 0x02, 0x0c, 0x00,
			/* [0x0cb0] */ 0x08, 0x00, 0x04, 0x20, 0x08, 0x00, 0x0c, 0x20, 0x08, 0x02, 0x04, 0x20, 0x08, 0x02, 0x0c, 0x20,
			/* [0x0cc0] */ 0x02, 0x00, 0x04, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x02, 0x02, 0x04, 0x00, 0x02, 0x02, 0x0c, 0x00,
			/* [0x0cd0] */ 0x02, 0x00, 0x04, 0x20, 0x02, 0x00, 0x0c, 0x20, 0x02, 0x02, 0x04, 0x20, 0x02, 0x02, 0x0c, 0x20,
			/* [0x0ce0] */ 0x0a, 0x00, 0x04, 0x00, 0x0a, 0x00, 0x0c, 0x00, 0x0a, 0x02, 0x04, 0x00, 0x0a, 0x02, 0x0c, 0x00,
			/* [0x0cf0] */ 0x0a, 0x00, 0x04, 0x20, 0x0a, 0x00, 0x0c, 0x20, 0x0a, 0x02, 0x04, 0x20, 0x0a, 0x02, 0x0c, 0x20,
			/* [0x0d00] */ 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x12, 0x08, 0x00,
			/* [0x0d10] */ 0x00, 0x10, 0x00, 0x20, 0x00, 0x10, 0x08, 0x20, 0x00, 0x12, 0x00, 0x20, 0x00, 0x12, 0x08, 0x20,
			/* [0x0d20] */ 0x08, 0x10, 0x00, 0x00, 0x08, 0x10, 0x08, 0x00, 0x08, 0x12, 0x00, 0x00, 0x08, 0x12, 0x08, 0x00,
			/* [0x0d30] */ 0x08, 0x10, 0x00, 0x20, 0x08, 0x10, 0x08, 0x20, 0x08, 0x12, 0x00, 0x20, 0x08, 0x12, 0x08, 0x20,
			/* [0x0d40] */ 0x02, 0x10, 0x00, 0x00, 0x02, 0x10, 0x08, 0x00, 0x02, 0x12, 0x00, 0x00, 0x02, 0x12, 0x08, 0x00,
			/* [0x0d50] */ 0x02, 0x10, 0x00, 0x20, 0x02, 0x10, 0x08, 0x20, 0x02, 0x12, 0x00, 0x20, 0x02, 0x12, 0x08, 0x20,
			/* [0x0d60] */ 0x0a, 0x10, 0x00, 0x00, 0x0a, 0x10, 0x08, 0x00, 0x0a, 0x12, 0x00, 0x00, 0x0a, 0x12, 0x08, 0x00,
			/* [0x0d70] */ 0x0a, 0x10, 0x00, 0x20, 0x0a, 0x10, 0x08, 0x20, 0x0a, 0x12, 0x00, 0x20, 0x0a, 0x12, 0x08, 0x20,
			/* [0x0d80] */ 0x00, 0x10, 0x04, 0x00, 0x00, 0x10, 0x0c, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x12, 0x0c, 0x00,
			/* [0x0d90] */ 0x00, 0x10, 0x04, 0x20, 0x00, 0x10, 0x0c, 0x20, 0x00, 0x12, 0x04, 0x20, 0x00, 0x12, 0x0c, 0x20,
			/* [0x0da0] */ 0x08, 0x10, 0x04, 0x00, 0x08, 0x10, 0x0c, 0x00, 0x08, 0x12, 0x04, 0x00, 0x08, 0x12, 0x0c, 0x00,
			/* [0x0db0] */ 0x08, 0x10, 0x04, 0x20, 0x08, 0x10, 0x0c, 0x20, 0x08, 0x12, 0x04, 0x20, 0x08, 0x12, 0x0c, 0x20,
			/* [0x0dc0] */ 0x02, 0x10, 0x04, 0x00, 0x02, 0x10, 0x0c, 0x00, 0x02, 0x12, 0x04, 0x00, 0x02, 0x12, 0x0c, 0x00,
			/* [0x0dd0] */ 0x02, 0x10, 0x04, 0x20, 0x02, 0x10, 0x0c, 0x20, 0x02, 0x12, 0x04, 0x20, 0x02, 0x12, 0x0c, 0x20,
			/* [0x0de0] */ 0x0a, 0x10, 0x04, 0x00, 0x0a, 0x10, 0x0c, 0x00, 0x0a, 0x12, 0x04, 0x00, 0x0a, 0x12, 0x0c, 0x00,
			/* [0x0df0] */ 0x0a, 0x10, 0x04, 0x20, 0x0a, 0x10, 0x0c, 0x20, 0x0a, 0x12, 0x04, 0x20, 0x0a, 0x12, 0x0c, 0x20,
			/* [0x0e00] */ 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x08, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x02, 0x08, 0x01,
			/* [0x0e10] */ 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x08, 0x21, 0x00, 0x02, 0x00, 0x21, 0x00, 0x02, 0x08, 0x21,
			/* [0x0e20] */ 0x08, 0x00, 0x00, 0x01, 0x08, 0x00, 0x08, 0x01, 0x08, 0x02, 0x00, 0x01, 0x08, 0x02, 0x08, 0x01,
			/* [0x0e30] */ 0x08, 0x00, 0x00, 0x21, 0x08, 0x00, 0x08, 0x21, 0x08, 0x02, 0x00, 0x21, 0x08, 0x02, 0x08, 0x21,
			/* [0x0e40] */ 0x02, 0x00, 0x00, 0x01, 0x02, 0x00, 0x08, 0x01, 0x02, 0x02, 0x00, 0x01, 0x02, 0x02, 0x08, 0x01,
			/* [0x0e50] */ 0x02, 0x00, 0x00, 0x21, 0x02, 0x00, 0x08, 0x21, 0x02, 0x02, 0x00, 0x21, 0x02, 0x02, 0x08, 0x21,
			/* [0x0e60] */ 0x0a, 0x00, 0x00, 0x01, 0x0a, 0x00, 0x08, 0x01, 0x0a, 0x02, 0x00, 0x01, 0x0a, 0x02, 0x08, 0x01,
			/* [0x0e70] */ 0x0a, 0x00, 0x00, 0x21, 0x0a, 0x00, 0x08, 0x21, 0x0a, 0x02, 0x00, 0x21, 0x0a, 0x02, 0x08, 0x21,
			/* [0x0e80] */ 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x02, 0x04, 0x01, 0x00, 0x02, 0x0c, 0x01,
			/* [0x0e90] */ 0x00, 0x00, 0x04, 0x21, 0x00, 0x00, 0x0c, 0x21, 0x00, 0x02, 0x04, 0x21, 0x00, 0x02, 0x0c, 0x21,
			/* [0x0ea0] */ 0x08, 0x00, 0x04, 0x01, 0x08, 0x00, 0x0c, 0x01, 0x08, 0x02, 0x04, 0x01, 0x08, 0x02, 0x0c, 0x01,
			/* [0x0eb0] */ 0x08, 0x00, 0x04, 0x21, 0x08, 0x00, 0x0c, 0x21, 0x08, 0x02, 0x04, 0x21, 0x08, 0x02, 0x0c, 0x21,
			/* [0x0ec0] */ 0x02, 0x00, 0x04, 0x01, 0x02, 0x00, 0x0c, 0x01, 0x02, 0x02, 0x04, 0x01, 0x02, 0x02, 0x0c, 0x01,
			/* [0x0ed0] */ 0x02, 0x00, 0x04, 0x21, 0x02, 0x00, 0x0c, 0x21, 0x02, 0x02, 0x04, 0x21, 0x02, 0x02, 0x0c, 0x21,
			/* [0x0ee0] */ 0x0a, 0x00, 0x04, 0x01, 0x0a, 0x00, 0x0c, 0x01, 0x0a, 0x02, 0x04, 0x01, 0x0a, 0x02, 0x0c, 0x01,
			/* [0x0ef0] */ 0x0a, 0x00, 0x04, 0x21, 0x0a, 0x00, 0x0c, 0x21, 0x0a, 0x02, 0x04, 0x21, 0x0a, 0x02, 0x0c, 0x21,
			/* [0x0f00] */ 0x00, 0x10, 0x00, 0x01, 0x00, 0x10, 0x08, 0x01, 0x00, 0x12, 0x00, 0x01, 0x00, 0x12, 0x08, 0x01,
			/* [0x0f10] */ 0x00, 0x10, 0x00, 0x21, 0x00, 0x10, 0x08, 0x21, 0x00, 0x12, 0x00, 0x21, 0x00, 0x12, 0x08, 0x21,
			/* [0x0f20] */ 0x08, 0x10, 0x00, 0x01, 0x08, 0x10, 0x08, 0x01, 0x08, 0x12, 0x00, 0x01, 0x08, 0x12, 0x08, 0x01,
			/* [0x0f30] */ 0x08, 0x10, 0x00, 0x21, 0x08, 0x10, 0x08, 0x21, 0x08, 0x12, 0x00, 0x21, 0x08, 0x12, 0x08, 0x21,
			/* [0x0f40] */ 0x02, 0x10, 0x00, 0x01, 0x02, 0x10, 0x08, 0x01, 0x02, 0x12, 0x00, 0x01, 0x02, 0x12, 0x08, 0x01,
			/* [0x0f50] */ 0x02, 0x10, 0x00, 0x21, 0x02, 0x10, 0x08, 0x21, 0x02, 0x12, 0x00, 0x21, 0x02, 0x12, 0x08, 0x21,
			/* [0x0f60] */ 0x0a, 0x10, 0x00, 0x01, 0x0a, 0x10, 0x08, 0x01, 0x0a, 0x12, 0x00, 0x01, 0x0a, 0x12, 0x08, 0x01,
			/* [0x0f70] */ 0x0a, 0x10, 0x00, 0x21, 0x0a, 0x10, 0x08, 0x21, 0x0a, 0x12, 0x00, 0x21, 0x0a, 0x12, 0x08, 0x21,
			/* [0x0f80] */ 0x00, 0x10, 0x04, 0x01, 0x00, 0x10, 0x0c, 0x01, 0x00, 0x12, 0x04, 0x01, 0x00, 0x12, 0x0c, 0x01,
			/* [0x0f90] */ 0x00, 0x10, 0x04, 0x21, 0x00, 0x10, 0x0c, 0x21, 0x00, 0x12, 0x04, 0x21, 0x00, 0x12, 0x0c, 0x21,
			/* [0x0fa0] */ 0x08, 0x10, 0x04, 0x01, 0x08, 0x10, 0x0c, 0x01, 0x08, 0x12, 0x04, 0x01, 0x08, 0x12, 0x0c, 0x01,
			/* [0x0fb0] */ 0x08, 0x10, 0x04, 0x21, 0x08, 0x10, 0x0c, 0x21, 0x08, 0x12, 0x04, 0x21, 0x08, 0x12, 0x0c, 0x21,
			/* [0x0fc0] */ 0x02, 0x10, 0x04, 0x01, 0x02, 0x10, 0x0c, 0x01, 0x02, 0x12, 0x04, 0x01, 0x02, 0x12, 0x0c, 0x01,
			/* [0x0fd0] */ 0x02, 0x10, 0x04, 0x21, 0x02, 0x10, 0x0c, 0x21, 0x02, 0x12, 0x04, 0x21, 0x02, 0x12, 0x0c, 0x21,
			/* [0x0fe0] */ 0x0a, 0x10, 0x04, 0x01, 0x0a, 0x10, 0x0c, 0x01, 0x0a, 0x12, 0x04, 0x01, 0x0a, 0x12, 0x0c, 0x01,
			/* [0x0ff0] */ 0x0a, 0x10, 0x04, 0x21, 0x0a, 0x10, 0x0c, 0x21, 0x0a, 0x12, 0x04, 0x21, 0x0a, 0x12, 0x0c, 0x21
		} ; // Ende s_anP32
	/*----------------------------------------------------------------------------*/
	/* des_static_first.h	- Ende                                                */
	/*----------------------------------------------------------------------------*/

	// file: des.cpp

	/******************************************************************************
	*									      *
	*  Projekt	     :	Hashfunktion für 8 Byte mit  'single length hash code'*
	*									      *
	*  Dateiname	     :	DES.C						      *
	*									      *
	*  Autor/Bearbeiter :	Berghausen					      *
	*									      *
	*  Änderungshistorie:	Version 1.0 - 15.08.1994 Ersterstellung 	      *
	*                      Version 1.1 - 15.09.1994 VAX/VMS-Anpassung (ga/DO)    *
	*                      Version 1.2 - 24.11.1998 ALPHA-Anpassung (ul/DO)      *
	*						 Makro VMS -> _VMS            *
	*			Version 2.0 - 23.10.2001 Portierung SUN und NT        *
	*						 dSh GEI (ul)		      *
	*			Version 2.1 - 10.01.2005 statische Initialisierung    *
	*						 T-Systems (ul)		      *
	*									      *
	*									      *
	*  (C) 1994	  debis Systemhaus GEI					      *
	*		  Geschäftsstelle Bonn					      *
	*		  Oxfordstrasse 12-16					      *
	*		  53111 Bonn 1						      *
	*									      *
	******************************************************************************
	*									      *
	*  Kurzbeschreibung: C-Quellkode für die DES-Ver-/Entschlüsselungsroutinen   *
	*									      *
	******************************************************************************/

	#include <stdio.h>
	#include <stdlib.h>
	#include <string.h>

	//#include "des.h"
	#define _ENCR 1

	//-------------------------------------------------------------------------------
	// nur fuer Ausgabe der Variablen, die beim ersten Mal initialisiert werden
	//-------------------------------------------------------------------------------

	// #define DO_PRINT_FIRST

	//-------------------------------------------------------------------------------

	void /*___LINKAGE___*/ des(unsigned char *inblock, unsigned char *outblock);
	void /*___LINKAGE___*/ deszero(void);
	void /*___LINKAGE___*/ desks(unsigned char *key, short EDF);
	void /*___LINKAGE___*/ desks_static(unsigned char *key, short EDF);

	static void init_permutation(unsigned char (*)[16][8],unsigned char *);
	static void do_permutation(unsigned char *, unsigned char (*)[16][8], unsigned char *);

	static void init_s(void);
	static short  do_s(short ,short );

	static void init_key(unsigned char *);

	static void init_perm_32(void);
	static void do_perm_32(unsigned char *,unsigned char *);

	static void iterat4(short ,unsigned char *,unsigned char *);
	static void iterat4_des_f(unsigned char *,short ,unsigned char *);
	static void iterat4_expand(unsigned char *,unsigned char *);
	static void iterat4_shrink(unsigned char *,unsigned char *);

	//-----------------------------------------------------------------------------
	//static void print_permutation ( const char *, unsigned char [16][16][8] ) ;
	//static void print_s ( void ) ;
	//static void print_perm_32 ( void ) ;
	//static void print_static_first ( void ) ;
	//-----------------------------------------------------------------------------

	static unsigned char ip[] =
		{
		58, 50, 42, 34, 26, 18, 10,	2,
		60, 52, 44, 36, 28, 20, 12,	4,
		62, 54, 46, 38, 30, 22, 14,	6,
		64, 56, 48, 40, 32, 24, 16,	8,
		57, 49, 41, 33, 25, 17,  9,	1,
		59, 51, 43, 35, 27, 19, 11,	3,
		61, 53, 45, 37, 29, 21, 13,	5,
		63, 55, 47, 39, 31, 23, 15,	7
		};

	static unsigned char fp[] =
		{
		40,	8, 48, 16, 56, 24, 64, 32,
		39,	7, 47, 15, 55, 23, 63, 31,
		38,	6, 46, 14, 54, 22, 62, 30,
		37,	5, 45, 13, 53, 21, 61, 29,
		36,	4, 44, 12, 52, 20, 60, 28,
		35,	3, 43, 11, 51, 19, 59, 27,
		34,	2, 42, 10, 50, 18, 58, 26,
		33,	1, 41,	9, 49, 17, 57, 25
		};

	static unsigned char pc1[] =
		{
		57, 49, 41, 33, 25, 17,  9,
			1, 58, 50, 42, 34, 26, 18,
		10,	2, 59, 51, 43, 35, 27,
		19, 11,  3, 60, 52, 44, 36,

		63, 55, 47, 39, 31, 23, 15,
			7, 62, 54, 46, 38, 30, 22,
		14,	6, 61, 53, 45, 37, 29,
		21, 13,  5, 28, 20, 12,  4
		};

	static unsigned char totrot[] =
		{ 1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28 };

	static unsigned char pc1m[56];
	static unsigned char pcr[56];

	static unsigned char pc2[] =
		{
		14, 17, 11, 24,  1,	5,
			3, 28, 15,	6, 21, 10,
		23, 19, 12,	4, 26,	8,
		16,	7, 27, 20, 13,	2,
		41, 52, 31, 37, 47, 55,
		30, 40, 51, 45, 33, 48,
		44, 49, 39, 56, 34, 53,
		46, 42, 50, 36, 29, 32
		};

	static unsigned char si[8][64] =
		{
		14,	4, 13,	1,  2, 15, 11,	8,  3, 10,  6, 12,  5,	9,  0,	7,
			0, 15,  7,	4, 14,	2, 13,	1, 10,	6, 12, 11,  9,	5,  3,	8,
			4,	1, 14,	8, 13,	6,  2, 11, 15, 12,  9,	7,  3, 10,  5,	0,
		15, 12,  8,	2,  4,	9,  1,	7,  5, 11,  3, 14, 10,	0,  6, 13,

		15,	1,  8, 14,  6, 11,  3,	4,  9,	7,  2, 13, 12,	0,  5, 10,
			3, 13,  4,	7, 15,	2,  8, 14, 12,	0,  1, 10,  6,	9, 11,	5,
			0, 14,  7, 11, 10,	4, 13,	1,  5,	8, 12,	6,  9,	3,  2, 15,
		13,	8, 10,	1,  3, 15,  4,	2, 11,	6,  7, 12,  0,	5, 14,	9,

		10,	0,  9, 14,  6,	3, 15,	5,  1, 13, 12,	7, 11,	4,  2,	8,
		13,	7,  0,	9,  3,	4,  6, 10,  2,	8,  5, 14, 12, 11, 15,	1,
		13,	6,  4,	9,  8, 15,  3,	0, 11,	1,  2, 12,  5, 10, 14,	7,
			1, 10, 13,	0,  6,	9,  8,	7,  4, 15, 14,	3, 11,	5,  2, 12,

			7, 13, 14,	3,  0,	6,  9, 10,  1,	2,  8,	5, 11, 12,  4, 15,
		13,	8, 11,	5,  6, 15,  0,	3,  4,	7,  2, 12,  1, 10, 14,	9,
		10,	6,  9,	0, 12, 11,  7, 13, 15,	1,  3, 14,  5,	2,  8,	4,
			3, 15,  0,	6, 10,	1, 13,	8,  9,	4,  5, 11, 12,	7,  2, 14,

			2, 12,  4,	1,  7, 10, 11,	6,  8,	5,  3, 15, 13,	0, 14,	9,
		14, 11,  2, 12,  4,	7, 13,	1,  5,	0, 15, 10,  3,	9,  8,	6,
			4,	2,  1, 11, 10, 13,  7,	8, 15,	9, 12,	5,  6,	3,  0, 14,
		11,	8, 12,	7,  1, 14,  2, 13,  6, 15,  0,	9, 10,	4,  5,	3,

		12,	1, 10, 15,  9,	2,  6,	8,  0, 13,  3,	4, 14,	7,  5, 11,
		10, 15,  4,	2,  7, 12,  9,	5,  6,	1, 13, 14,  0, 11,  3,	8,
			9, 14, 15,	5,  2,	8, 12,	3,  7,	0,  4, 10,  1, 13, 11,	6,
			4,	3,  2, 12,  9,	5, 15, 10, 11, 14,  1,	7,  6,	0,  8, 13,

			4, 11,  2, 14, 15,	0,  8, 13,  3, 12,  9,	7,  5, 10,  6,	1,
		13,	0, 11,	7,  4,	9,  1, 10, 14,	3,  5, 12,  2, 15,  8,	6,
			1,	4, 11, 13, 12,	3,  7, 14, 10, 15,  6,	8,  0,	5,  9,	2,
			6, 11, 13,	8,  1,	4, 10,	7,  9,	5,  0, 15, 14,	2,  3, 12,

		13,	2,  8,	4,  6, 15, 11,	1, 10,	9,  3, 14,  5,	0, 12,	7,
			1, 15, 13,	8, 10,	3,  7,	4, 12,	5,  6, 11,  0, 14,  9,	2,
			7, 11,  4,	1,  9, 12, 14,	2,  0,	6, 10, 13, 15,	3,  5,	8,
			2,	1, 14,	7,  4, 10,  8, 13, 15, 12,  9,	0,  3,	5,  6, 11
		};

	static unsigned char p32i[] =
		{
		16,	7, 20, 21,
		29, 12, 28, 17,
			1, 15, 23, 26,
			5, 18, 31, 10,
			2,	8, 24, 14,
		32, 27,  3,	9,
		19, 13, 30,	6,
		22, 11,  4, 25
		};


	//-----------------------------------------------------------------------------
	// static unsigned char iperm[16][16][8],fperm[16][16][8];

	//# include "des_static_first.h"
	//-----------------------------------------------------------------------------

	static unsigned char *s[4] = { 0L , 0L , 0L , 0L };
	static unsigned char *p32;

	static short EFLAG;

	static unsigned char kn[16][6];

	#define MEM8COPY(dest, src)				 \
				{						 \
				*(dest)   = *(src);				 \
				*(dest+1) = *(src+1);				 \
				*(dest+2) = *(src+2);				 \
				*(dest+3) = *(src+3);				 \
				*(dest+4) = *(src+4);				 \
				*(dest+5) = *(src+5);				 \
				*(dest+6) = *(src+6);				 \
				*(dest+7) = *(src+7);				 \
				}

	//-----------------------------------------------------------------------------
	// static void print_permutation ( const char * pszName, unsigned char paPermutation [16][16][8]  )
	// 		{
	// 	int nLimit_0 = 16 ;
	// 	int nIndex_0 = 0 ;

	// 	printf ( "\tstatic unsigned char %s [16] [16] [8] = {", pszName ) ;

	// 	for ( ; nIndex_0 < nLimit_0 ; nIndex_0 ++ ) {
	// 			int nLimit_1 = 16 ;
	// 			int nIndex_1 = 0 ;

	// 			if (nIndex_0 != 0) {
	// 		printf ( "," ) ;
	// 			}

	// 			printf ( "\n\t\t{ /* [0x%04x] */ ", nIndex_0 ) ;

	// 			for ( ; nIndex_1  < nLimit_1 ; nIndex_1 ++ ) {
	// 		int nLimit_2 = 8 ;
	// 		int nIndex_2 = 0 ;

	// 		if (nIndex_1 != 0) {
	// 				printf ( "," ) ;
	// 		}

	// 		printf ( "\n\t\t\t{ /* [0x%04x] */ ", nIndex_1 ) ;

	// 		for ( ; nIndex_2 < nLimit_2 ; nIndex_2 ++ ) {

	// 				if (nIndex_2 != 0) {
	// 			printf ( ", " ) ;
	// 				}

	// 				printf ( "0x%02x", paPermutation[nIndex_0] [nIndex_1] [nIndex_2] ) ;
	// 		}

	// 		printf ( " }" ) ;

	// 			}

	// 			printf ( "\n\t\t}" ) ;
	// 	}

	// 	printf ( "\n\t} ; // Ende %s\n", pszName ) ;

	// 	return ;
	// 		} /* of print_permutation */

	// static void print_s ( void )
	// 		{
	// 	unsigned char * panS = s[0] ;

	// 	int nLimit = 0x4000 ;
	// 	int nIndex = 0 ;

	// 	printf ( "\tstatic unsigned char s_anS [0x%x] = {", nLimit ) ;

	// 	for ( ; nIndex < nLimit ; nIndex ++ ) {

	// 			if (nIndex != 0) {
	// 		printf ( ", " ) ;
	// 			}

	// 			if (nIndex % 0x10 == 0) {
	// 		printf ( "\n\t\t/* [0x%04x] */ ", nIndex ) ;
	// 			}

	// 			printf ( "0x%02x", panS[nIndex] ) ;
	// 	}

	// 	printf ( "\n\t} ; // Ende s_anS\n" ) ;

	// 	return ;
	// 		} /* of prints_s */

	// static void print_perm_32 ( void )
	// 		{
	// 	int nLimit = 4096 ;
	// 	int nIndex = 0 ;

	// 	printf ( "\tstatic unsigned char s_anP32 [%d] = {", nLimit ) ;

	// 	for ( ; nIndex < nLimit ; nIndex ++ ) {

	// 			if (nIndex != 0) {
	// 		printf ( ", " ) ;
	// 			}

	// 			if (nIndex % 0x10 == 0) {
	// 		printf ( "\n\t\t/* [0x%04x] */ ", nIndex ) ;
	// 			}

	// 			printf ( "0x%02x", p32[nIndex] ) ;
	// 	}

	// 	printf ( "\n\t} ; // Ende s_anP32\n" ) ;

	// 	return ;
	// 		} /* of print_perm_32 */

	// static void print_static_first ( void )
	// 		{
	// 	printf ( "/*-----------------------------------------------------------------------------*/\n" ) ;
	// 	printf ( "/* des_static_first.h                                                          */\n" ) ;
	// 	printf ( "/*                                                                             */\n" ) ;
	// 	printf ( "/* statische Initialisierung der Variablen                                     */\n" ) ;
	// 	printf ( "/* die normalerweise beim ersten Aufruf von desks initialisiert werden         */\n" ) ;
	// 	printf ( "/*                                                                             */\n" ) ;
	// 	printf ( "/* automatisch generiert                                                       */\n" ) ;
	// 	printf ( "/* dafur muss das Makro DO_PRINT_FIRST in des.c definiert sein                 */\n" ) ;
	// 	printf ( "/* (Kommentarzeichen bei #define DO_PRINT_FIRST entfernen)                     */\n" ) ;
	// 	printf ( "/*-----------------------------------------------------------------------------*/\n" ) ;

	// 	print_permutation ( "iperm", iperm ) ;
	// 	print_permutation ( "fperm", fperm ) ;

	// 	print_s () ;

	// 	print_perm_32 () ;

	// 	printf ( "/*----------------------------------------------------------------------------*/\n" ) ;
	// 	printf ( "/* des_static_first.h	- Ende                                                  */\n" ) ;
	// 	printf ( "/*----------------------------------------------------------------------------*/\n" ) ;

	// 	return ;
	// 		} /* of print_static_first */

	//-----------------------------------------------------------------------------

	void /*___LINKAGE___*/ des(unsigned char *inblock, unsigned char *outblock)
		{
		unsigned char iters[17][8];
		unsigned char swap[8];
		short i;
		unsigned char *s, *t;

		if (EFLAG == _ENCR)
				{/* encrypt */

				do_permutation(inblock,iperm,iters[0]);
	/*    MEM8COPY(iters[0],inblock);  */
				for (i=0; i<16; i++)
		iterat4(i,iters[i],iters[i+1]);

				s = swap; t = &iters[16][4];
				*s++ = *t++; *s++ = *t++; *s++ = *t++; *s++ = *t++;
				t = &iters[16][0];
				*s++ = *t++; *s++ = *t++; *s++ = *t++; *s++ = *t++;
				do_permutation(swap,fperm,outblock);
	/*    MEM8COPY(outblock,swap);	 */

				}/* of encrypt */
		else
				{/* decrypt */

				do_permutation(inblock,iperm,iters[0]);
	/*    MEM8COPY(iters[0],inblock);   */
				for (i=0; i<16; i++)

					/*--------------------------------------------------------------------
			* ul - Version 2.0 - Ende
						*--------------------------------------------------------------------
			*  iterat4(15-i,iters[i],iters[i+1]);
			*/

		iterat4((short)(15-i),iters[i],iters[i+1] );

		/*--------------------------------------------------------------------
						* ul - Version 2.0 - Ende
						*--------------------------------------------------------------------
						*/

				s = swap; t = &iters[16][4];
				*s++ = *t++; *s++ = *t++; *s++ = *t++; *s++ = *t++;
				t = &iters[16][0];
				*s++ = *t++; *s++ = *t++; *s++ = *t++; *s++ = *t++;
				do_permutation(swap,fperm,outblock);
	/*    MEM8COPY(outblock,swap);	 */
				}/* of decrypt */

		} /* of des() */

	static void do_permutation(unsigned char *inblock,
					unsigned char perm[16][16][8],
					unsigned char *outblock)
		{
		short i,j;
		unsigned char *ib, *ob;
		unsigned char *p, *q;

		for (i=0, ob = outblock; i<8; i++)
			*ob++ = 0;
		ib = inblock;
		for (j = 0; j < 16; j += 2, ib++)
				{
				ob = outblock;
				p  = perm[j][(*ib >> 4) & 017];
				q  = perm[j + 1][*ib & 017];
				for (i = 0; i < 8; i++)
					*ob++ |= *p++ | *q++;
				}/* of for(j) */
		}/* of do_permutation() */

	void /*___LINKAGE___*/ deszero()
		{
		if ( s[0] != 0L )
				{
				free ((unsigned char *)s[0]);
				s[0] = 0L;
				free ((unsigned char *)p32);
				}
		}/* of deszero() */

	#define ERR_MALLOC
	#define NO_ERR_MALLOC

	void /*___LINKAGE___*/ desks(unsigned char *key, short EDF)
		{
	/*   short     i; nicht benutzt */
		unsigned char first;

	#  ifdef SINIX
				void   *malloc();
	#  endif

		EFLAG = EDF;

		if ( s[0] == 0L )
				{
				if ( ( s[0] = (unsigned char *) malloc(0x4000) ) == 0L )
			return ERR_MALLOC;
				else
		{
		s[1] = s[0] + 0x1000;
		s[2] = s[1] + 0x1000;
		s[3] = s[2] + 0x1000;
				}

				if ( ( p32 = (unsigned char *) malloc(4096) ) == 0L )
			return ERR_MALLOC;
				first = 1;
				}/* of if() */
		else
				first = 0;

		if ( first )
				{
				init_permutation(iperm,ip);
				init_permutation(fperm,fp);
				}
		init_key(key);
		if ( first )
				{
				init_s();
				init_perm_32();

				//--------------------------------------------------------------------------
				// Variablen ausgeben, die beim ersten Mal initialisiert werden
				#ifdef DO_PRINT_FIRST
				print_static_first () ;
				#endif
				}

		return NO_ERR_MALLOC;
		}/* of desks() */

	//-----------------------------------------------------------------------------
	void /*___LINKAGE___*/ desks_static(unsigned char *key, short EDF)
		{
		unsigned char first;

		EFLAG = EDF;

		if ( s[0] == 0L )
				{
		s[0] = s_anS ;

		s[1] = s[0] + 0x1000;
		s[2] = s[1] + 0x1000;
		s[3] = s[2] + 0x1000;

		p32 = s_anP32 ;

		first = 1;
				}/* of if() */
		else
				first = 0;

		if ( first )
				{
				// init_permutation(iperm,ip);
				// init_permutation(fperm,fp);
				}
		init_key(key);
		if ( first )
				{
				// init_s();
				// init_perm_32();

				//--------------------------------------------------------------------------
				// Variablen ausgeben, die beim ersten Mal initialisiert werden
				#ifdef DO_PRINT_FIRST
				print_static_first () ;
				#endif
				}

		return NO_ERR_MALLOC;
		}/* of desks_static() */

	//-----------------------------------------------------------------------------

	static short bytebit[] =
		{ 0200,0100,040,020,010,04,02,01};

	static short nibblebit[] = { 010,04,02,01 };

	static void init_s(void)
		{
		short i,j;

		for (i=0; i<4; i++)
				for (j=0; j<4096; j++)

			/*--------------------------------------------------------------------
			* ul - Version 2.0
			*--------------------------------------------------------------------
			* s[i][j]=(do_s(i*2,j>>6)<<4) | (017&do_s(i*2+1,j&077));
			*/

		s[i][j]=
				(do_s((short)(i*2),(short)(j>>6))<<4) |
			(017&do_s((short)(i*2+1),(short)(j&077)));

			/*--------------------------------------------------------------------
			* ul - Version 2.0 - Ende
			*--------------------------------------------------------------------
			*/

		}/* of init_s() */

	static short do_s(short k,short v)
		{
		short i,j;

		i=((v&040)>>4)|(v&1);
		j=(v&037)>>1;
		return ((short) si[k][(i<<4)+j]);
		}/* of do_s() */

	static void init_key(unsigned char *key)
		{
		short i,j,l;
		short m;

		for (j=0; j<56; j++)
				{
				l      = pc1[j]-1;
				m      = l & 07;
				pc1m[j]=(key[l>>3] &  bytebit[m]) ? 1 : 0;
				}/* of for(j) */

		memset (&kn[0][0],0,6*16);

		for (i=0; i<16; i++)
				{

				for (j=0; j<56; j++)
		pcr[j] = pc1m[(l=j+totrot[i])<(j<28? 28 : 56) ? l: l-28];

				for (j=0; j<48; j++)
		if (pcr[pc2[j]-1])
			{
			l= j & 07;
			kn[i][j>>3] |= bytebit[l];
			}/* of if() */
				}/* of for(i) */
		}/* init_key() */

	static void init_perm_32(void)
		{
		short l, j, k;
		short i,m;

		for (i=0; i<4; i++)
				for (j=0; j<256; j++)
				for (k=0; k<4; k++)
				p32[i*1024+j*4+k]=0;

		for (i=0; i<4; i++)
				for (j=0; j<256; j++)
			for (k=0; k<32; k++)
				{
				l=p32i[k]-1;
				if ((l>>3)!=i)
					continue;
				if (!(j&bytebit[l&07]))
					continue;
				m = k & 07;
				p32[i*1024+j*4+(k>>3)] |= bytebit[m];
				}/* of for(k) */

		}/*of init_perm() */

	static void init_permutation(unsigned char perm[16][16][8], unsigned char p[64])
		{
		short l, j, k;
		short i,m;

		memset (&perm[0][0][0],0,16*16*8);
		for (i=0; i<16; i++)
				for (j = 0; j < 16; j++)
		for (k = 0; k < 64; k++)
				{
				l = p[k] - 1;
				if ((l >> 2) != i)
					continue;
				if (!(j & nibblebit[l & 3]))
					continue;
				m = k & 07;
				perm[i][j][k>>3] |= bytebit[m];
				}/* of for(k) */

		}/* of init_permutation() */

	static void iterat4( short num, unsigned char *inblock, unsigned char *outblock)
		{
		unsigned char fret[4];
		unsigned char *ib, *ob, *fb;

		ob = outblock; ib = &inblock[4];
		iterat4_des_f(ib, num, fret);
		*ob++ = *ib++;
		*ob++ = *ib++;
		*ob++ = *ib++;
		*ob++ = *ib++;
		ib = inblock; fb = fret;
		*ob++ = *ib++ ^ *fb++;
		*ob++ = *ib++ ^ *fb++;
		*ob++ = *ib++ ^ *fb++;
		*ob++ = *ib++ ^ *fb++;

		}/* of iterat4() */

	static void iterat4_des_f(unsigned char *right, short num, unsigned char *fret)
		{
		unsigned char *kb, *rb, *bb;
		unsigned char bigright[6];
		unsigned char result[6];
		unsigned char preout[4];

		kb = kn[num];
		bb = bigright;
		rb = result;
		iterat4_expand(right,bb);
		*rb++ = *bb++ ^ *kb++;
		*rb++ = *bb++ ^ *kb++;
		*rb++ = *bb++ ^ *kb++;
		*rb++ = *bb++ ^ *kb++;
		*rb++ = *bb++ ^ *kb++;
		*rb++ = *bb++ ^ *kb++;
		iterat4_shrink(result,preout);
		do_perm_32(preout,fret);

		}/* of iterat4_des_f() */

	static void do_perm_32( unsigned char *inblock,unsigned char *outblock)
		{
		short j;
		unsigned char *ib, *ob;

	#  if defined UNIX || defined SINIX || defined __OS2__ || defined _VMS
				unsigned char *q;
	#  else
				unsigned char /*far*/ *q;
	#  endif

		ob = outblock;
		*ob++ = 0; *ob++ = 0; *ob++ = 0; *ob++ = 0;
		ib=inblock;
		for (j=0; j<4; j++, ib++)
				{

	#  if defined UNIX || defined SINIX || defined __OS2__ || defined _VMS
				q = (unsigned char *) &p32[j*1024+(*ib & 0377)*4];
	#  else
				q = (unsigned char /*far*/ *) &p32[j*1024+(*ib & 0377)*4];
	#endif
				ob = outblock;
				*ob++ |= *q++;
				*ob++ |= *q++;
				*ob++ |= *q++;
				*ob++ |= *q++;
				}/* of for(j) */
		}/* of do_perm_32() */

	static void iterat4_expand(unsigned char *right, unsigned char *bigright)
		{
		unsigned char *bb, *r, r0, r1, r2, r3;

		bb = bigright;
		r = right; r0 = *r++; r1 = *r++; r2 = *r++; r3 = *r++;
		*bb++ = ((r3 & 0001) << 7) |
			((r0 & 0370) >> 1) |
			((r0 & 0030) >> 3);
		*bb++ = ((r0 & 0007) << 5) |
			((r1 & 0200) >> 3) |
			((r0 & 0001) << 3) |
			((r1 & 0340) >> 5);
		*bb++ = ((r1 & 0030) << 3) |
			((r1 & 0037) << 1) |
			((r2 & 0200) >> 7);
		*bb++ = ((r1 & 0001) << 7) |
			((r2 & 0370) >> 1) |
			((r2 & 0030) >> 3);
		*bb++ = ((r2 & 0007) << 5) |
			((r3 & 0200) >> 3) |
			((r2 & 0001) << 3) |
			((r3 & 0340) >> 5);
		*bb++ = ((r3 & 0030) << 3) |
			((r3 & 0037) << 1) |
			((r0 & 0200) >> 7);
		}/* of iterat4_expand() */

	static void iterat4_shrink(unsigned char *in48,unsigned char *out32)
		{
		unsigned char *c;
		unsigned char *i;
		short i0, i1, i2, i3, i4, i5;

		i = in48;
		i0 = *i++; i1 = *i++; i2 = *i++; i3 = *i++; i4 = *i++; i5 = *i++;
		c = out32;
		*c++ = s[0][07777 & ((i0 << 4) | ((i1 >> 4) & 017  ))];
		*c++ = s[1][07777 & ((i1 << 8) | ( i2   & 0377 ))];
		*c++ = s[2][07777 & ((i3 << 4) | ((i4 >> 4) & 017  ))];
		*c++ = s[3][07777 & ((i4 << 8) | ( i5   & 0377 ))];
		}

	// file: iso_hash.cpp
	typedef unsigned short USHORT;
	typedef unsigned char  UCHAR;

	/* Modul interne Variable */
	static UCHAR iv[8]={ 0xAA, 0x55, 0xED, 0X47,
					0x11, 0x08, 0x15, 0x07 };

	#define MEM8COPY(dest, src )				 \
				{						 \
				*(dest)   = *(src);				 \
				*(dest+1) = *(src+1);				 \
				*(dest+2) = *(src+2);				 \
				*(dest+3) = *(src+3);				 \
				*(dest+4) = *(src+4);				 \
				*(dest+5) = *(src+5);				 \
				*(dest+6) = *(src+6);				 \
				*(dest+7) = *(src+7);				 \
				}

	void iso_hash ( unsigned char *input, unsigned char *output )
		{
		/*register*/ USHORT i;
	#  define h output    /* benutzte *output zum Rechnen */

		/* h Initialisieren */
		MEM8COPY( h, iv);

		/* Input (8 Bytes) veschluesseln:	       */

		/* Schluessel fuer DES uebernehmen	       */
		desks( h, _ENCR);

		/* data mit DES verschluesseln	       */
		des( input, h);

		/* Speicher freigeben                       */
		/* deszero (); +++ 05.05.1999 ul +++        */

		/* das DES-Ergebnis mittels XOR mit data    */
		/* verknuepfen			       */
		for ( i = 0; i < 8; i++)
				h[i] ^= input[i];

		/* Das Ergebnis steht schon in output */
		return;
		}/* of iso_hash() */

	/*---------------------------------------------------------------------------*/

	void iso_hash_static ( unsigned char *input, unsigned char *output )
		{
		/*register*/ USHORT i;
	#  define h output    /* benutzte *output zum Rechnen */

		/* h Initialisieren */
		MEM8COPY( h, iv);

		/* Input (8 Bytes) veschluesseln:	       */

		/* Schluessel fuer DES uebernehmen	       */
		desks_static( h, _ENCR);

		/* data mit DES verschluesseln	       */
		des( input, h);

		/* Speicher freigeben                       */
		/* deszero (); +++ 05.05.1999 ul +++        */

		/* das DES-Ergebnis mittels XOR mit data    */
		/* verknuepfen			       */
		for ( i = 0; i < 8; i++)
				h[i] ^= input[i];

		/* Das Ergebnis steht schon in output */
		return;
		}/* of iso_hash() */

	// file: dwh_encode.h

	//==============================================================================
	//
	//  DWH_ENCODE.H
	//
	//  Schnittstellen-Definition des Moduls DWH_ENCODE
	//
	//  Modul DWH_ENCODE: Verschluesselung fuer das Data Warehouse
	//
	//==============================================================================
	//
	//  Aenderungshistorie:
	//
	//  Datum:	Autor:		    Beschreibung:
	//
	//  21.09.2004	T-Systems (ul)	    geschrieben
	//  29.09.2004	T-Systems (ul)	    max. Anzahl Bloecke auf 5 erhoeht
	//				    d. h 40 Zeichen
	//  10.01.2005	T-Systems (ul)	    Variante mit statischer Initialisierung
	//
	//==============================================================================

	//==============================================================================
	//  Interne Kennungen
	//==============================================================================

	// keine

	//==============================================================================
	//  Include Files
	//==============================================================================

	# include <stdio.h>

	//==============================================================================
	//  Konstanten
	//==============================================================================

	typedef enum _DWH_ENCODE_nConst {

			// fest

			DWH_ENCODE_nConst_Size_Block	= 8,	// Anzahl Bytes pro Block

			// kann modifiziert werden

			DWH_ENCODE_nConst_Count_Block_Max	= 5,	// Anzahl Bloecke,
							// die maximal verschluesselt werden

			// berechnet

			DWH_ENCODE_nConst_Size_Max		=	// Anzahl Bytes,
							// die maximal verschluesselt werden
							// zur Zeit: 40
		DWH_ENCODE_nConst_Size_Block * DWH_ENCODE_nConst_Count_Block_Max

	} DWH_ENCODE_nConst  ;

	// String, der zurueckgegeben wird, wenn ein Fehler aufgetreten ist.

	# define DWH_ENCODE_ERROR		"--- ERROR ---"


	// file: dwh_encode.cpp

	//==============================================================================
	//
	//  DWH_ENCODE.C
	//
	//  Implementierung des Moduls DWH_ENCODE
	//
	//  Modul DWH_ENCODE: Verschluesselung fuer das Data Warehouse
	//
	//==============================================================================
	//
	//  Aenderungshistorie:
	//
	//  Datum:	Autor:		    Beschreibung:
	//
	//  21.09.2004	T-Systems (ul)	    geschrieben
	//  10.01.2005	T-Systems (ul)	    Variante mit statischer Initialisierung
	//
	//==============================================================================

	//==============================================================================
	//  Interne Kennungen
	//==============================================================================

	// keine

	//==============================================================================
	//  Include Files
	//==============================================================================

	# include <assert.h>
	# include <stdio.h>
	# include <stdlib.h>
	# include <string.h>

	//# include "iso_hash.h"

	//# include "dwh_encode_private.h"
	# define DWH_ENCODE_FILL		'#'

	# define DWH_ENCODE_FMT_HEX		"%02X"

	//==============================================================================
	//  typedef's
	//==============================================================================

	// keine

	//==============================================================================
	//  Konstanten
	//==============================================================================

	// keine

	//==============================================================================
	//  statische Variablen
	//==============================================================================

	// keine

	//==============================================================================
	//  globale Variablen
	//==============================================================================

	// keine

	//==============================================================================
	//  vorwaerts Deklarationen
	//==============================================================================

	// keine

	//==============================================================================
	//  lokale Funktionen
	//==============================================================================

	// keine

	//==============================================================================
	//  DWH_ENCODE_Encode_Char
	//==============================================================================
	//
	//  Do:     Diese Funktion verschluesselt ein Array vom Typ Char
	//
	//	    Das Array wird in Bloecke zu acht Byte aufgeteilt,
	//	    unvollstaendige Bloecke werden dabei aufgefuellt.
	//	    Die Bloecke werden dann mit dem ISO-Hash-Algorithmus verschluesselt.
	//	    Die verschuesselten Bloecke werden abschliessend in einen String
	//	    umgewandelt, in dem jedes Byte mit zwei Hexadezimal-Zahlen
	//	    dargestellt wird.
	//	    Der String hat die Laenge
	//		2 * ((i_nSize_Data + 7)/8) * 8
	//
	//	    Es werden hoechsten DWH_ENCODE_nConst_Size_Max Zeichen verschluesselt,
	//	    ist das Array groesser, werden nur die ersten Zeichen verschluesselt.
	//
	//	    Der Wert, den die Funtkion zurueckgibt, ist nur bis zum naechsten
	//	    Aufruf gueltig und muss in der aufrufenden Funktion gesichert werden,
	//	    wenn er laenger benoetigt wird.
	//
	//	    Tritt waerend der Verarbeitung in der Funktion ein Fehler auf,
	//	    wird der String "--- ERROR ---" zurueckgegeben.
	//
	//  Arg:    IN	i_pacData			: zu verschuessende Daten
	//          IN  i_nSize_Data			: Anzahl Zeichen im Array
	//
	//  Ret:    Zeiger auf verschluesselte Daten	: kein Fehler bei der Verarbeitung
	//          Zeiger auf String "--- ERROR ---"	: sonst
	//
	//==============================================================================

	extern char *
	DWH_ENCODE_Encode_Char ( char * i_pacData, size_t i_nSize_Data )

	{
			//-------------------------------------------------------------------------
			// lokale Variablen
			//-------------------------------------------------------------------------

			int fOk = 1	;    // TRUE

			//-------------------------------------------------------------------------
			// statische Variablen
			//-------------------------------------------------------------------------

			static char s_szHex_Out [2 * DWH_ENCODE_nConst_Size_Max + 1] = "" ;

			//-------------------------------------------------------------------------
			// Code
			//-------------------------------------------------------------------------

			//--------------------------------------------------------------------------
			//  Pruefen: Aufrufparameter

			fOk = (i_pacData != NULL) ;		// Zeiger nicht NULL

			if (fOk) {
		fOk = (0 < i_nSize_Data) ;	// Laenge groesser Null
			}

			//--------------------------------------------------------------------------
			//	Wenn Aufruf in Ordnung
			//	    Daten verschuesseln
			//	sonst
			//	    String fuer Fehler zurueckgeben

			if (fOk) {
		unsigned char acData_In  [DWH_ENCODE_nConst_Size_Max] ;
		unsigned char acData_Out [DWH_ENCODE_nConst_Size_Max] ;

		size_t nSize_In	    = 0 ;
					size_t nSize_Out    = 0 ;

		int nCount_Blocks   = 0 ;

		//----------------------------------------------------------------------
		//  Daten auf Blockgrenzen auffuellen

		if (i_nSize_Data < DWH_ENCODE_nConst_Size_Max) {
				nSize_In = i_nSize_Data ;
		} else {
				nSize_In = DWH_ENCODE_nConst_Size_Max ;
		}

		nCount_Blocks =
				(nSize_In + DWH_ENCODE_nConst_Size_Block - 1) / DWH_ENCODE_nConst_Size_Block ;


		nSize_Out = nCount_Blocks * DWH_ENCODE_nConst_Size_Block ;

		memcpy ( acData_In, i_pacData, nSize_In ) ;

		if (nSize_In < nSize_Out) {
				memset ( acData_In + nSize_In, DWH_ENCODE_FILL, nSize_Out - nSize_In ) ;
		}

		//----------------------------------------------------------------------
		//  Bloecke verschluesseln

		{
				int nBlock = 0 ;

				for ( ; nBlock < nCount_Blocks ; nBlock ++ ) {
			unsigned char * pacByte_In  = acData_In  + nBlock * DWH_ENCODE_nConst_Size_Block ;
			unsigned char * pacByte_Out = acData_Out + nBlock * DWH_ENCODE_nConst_Size_Block ;

			iso_hash( pacByte_In, pacByte_Out ) ;
				}
		}
		//----------------------------------------------------------------------
		//  Verschluesselten Wert in Hex-ASCII umwandeln

		{
				size_t nByte = 0 ;

				for ( ; nByte < nSize_Out ; nByte ++ ) {
			unsigned char * pcByte_Out  = acData_Out  +     nByte ;
			char *          pszHex_Out  = s_szHex_Out + 2 * nByte ;

			sprintf ( pszHex_Out, DWH_ENCODE_FMT_HEX, * pcByte_Out ) ;
				}
		}

			} else {

		//----------------------------------------------------------------------
		// Fehler aufgetreten

		strcpy ( s_szHex_Out, DWH_ENCODE_ERROR ) ;
			}


			//-------------------------------------------------------------------------
			// Ruecksprung zur aufrufenden Funktion
			//-------------------------------------------------------------------------

			return s_szHex_Out ;
	}

	//==============================================================================
	//  DWH_ENCODE_Encode_Char - ENDE
	//==============================================================================

	//==============================================================================
	//  DWH_ENCODE_Encode_Char_Static
	//==============================================================================
	//
	//  Do:     Diese Funktion verschluesselt ein Array vom Typ Char
	//
	//	    Das Array wird in Bloecke zu acht Byte aufgeteilt,
	//	    unvollstaendige Bloecke werden dabei aufgefuellt.
	//	    Die Bloecke werden dann mit dem ISO-Hash-Algorithmus verschluesselt.
	//	    Die verschuesselten Bloecke werden abschliessend in einen String
	//	    umgewandelt, in dem jedes Byte mit zwei Hexadezimal-Zahlen
	//	    dargestellt wird.
	//	    Der String hat die Laenge
	//		2 * ((i_nSize_Data + 7)/8) * 8
	//
	//	    Es werden hoechsten DWH_ENCODE_nConst_Size_Max Zeichen verschluesselt,
	//	    ist das Array groesser, werden nur die ersten Zeichen verschluesselt.
	//
	//	    Der Wert, den die Funtkion zurueckgibt, ist nur bis zum naechsten
	//	    Aufruf gueltig und muss in der aufrufenden Funktion gesichert werden,
	//	    wenn er laenger benoetigt wird.
	//
	//	    Tritt waerend der Verarbeitung in der Funktion ein Fehler auf,
	//	    wird der String "--- ERROR ---" zurueckgegeben.
	//
	//	    Im Unterschied zu DWH_ENCODE_Encode_Char wird hier aus
	//	    Gruenden der Performance auf statisch initialisierte
	//	    Variablen zugegriffen.
	//
	//  Arg:    IN	i_pacData			: zu verschuessende Daten
	//          IN  i_nSize_Data			: Anzahl Zeichen im Array
	//
	//  Ret:    Zeiger auf verschluesselte Daten	: kein Fehler bei der Verarbeitung
	//          Zeiger auf String "--- ERROR ---"	: sonst
	//
	//==============================================================================

	extern char *
	DWH_ENCODE_Encode_Char_Static ( const char * i_pacData, size_t i_nSize_Data )

	{
			//-------------------------------------------------------------------------
			// lokale Variablen
			//-------------------------------------------------------------------------

			int fOk = 1	;    // TRUE

			//-------------------------------------------------------------------------
			// statische Variablen
			//-------------------------------------------------------------------------

			static char s_szHex_Out [2 * DWH_ENCODE_nConst_Size_Max + 1] = "" ;

			//-------------------------------------------------------------------------
			// Code
			//-------------------------------------------------------------------------

			//--------------------------------------------------------------------------
			//  Pruefen: Aufrufparameter

			fOk = (i_pacData != NULL) ;		// Zeiger nicht NULL

			if (fOk) {
		fOk = (0 < i_nSize_Data) ;	// Laenge groesser Null
			}

			//--------------------------------------------------------------------------
			//	Wenn Aufruf in Ordnung
			//	    Daten verschuesseln
			//	sonst
			//	    String fuer Fehler zurueckgeben

			if (fOk) {
		unsigned char acData_In  [DWH_ENCODE_nConst_Size_Max] ;
		unsigned char acData_Out [DWH_ENCODE_nConst_Size_Max] ;

		size_t nSize_In	    = 0 ;
					size_t nSize_Out    = 0 ;

		int nCount_Blocks   = 0 ;

		//----------------------------------------------------------------------
		//  Daten auf Blockgrenzen auffuellen

		if (i_nSize_Data < DWH_ENCODE_nConst_Size_Max) {
				nSize_In = i_nSize_Data ;
		} else {
				nSize_In = DWH_ENCODE_nConst_Size_Max ;
		}

		nCount_Blocks =
				(nSize_In + DWH_ENCODE_nConst_Size_Block - 1) / DWH_ENCODE_nConst_Size_Block ;


		nSize_Out = nCount_Blocks * DWH_ENCODE_nConst_Size_Block ;

		memcpy ( acData_In, i_pacData, nSize_In ) ;

		if (nSize_In < nSize_Out) {
				memset ( acData_In + nSize_In, DWH_ENCODE_FILL, nSize_Out - nSize_In ) ;
		}

		//----------------------------------------------------------------------
		//  Bloecke verschluesseln

		{
				int nBlock = 0 ;

				for ( ; nBlock < nCount_Blocks ; nBlock ++ ) {
			unsigned char * pacByte_In  = acData_In  + nBlock * DWH_ENCODE_nConst_Size_Block ;
			unsigned char * pacByte_Out = acData_Out + nBlock * DWH_ENCODE_nConst_Size_Block ;

			iso_hash_static ( pacByte_In, pacByte_Out ) ;
				}
		}
		//----------------------------------------------------------------------
		//  Verschluesselten Wert in Hex-ASCII umwandeln

		{
				size_t nByte = 0 ;

				for ( ; nByte < nSize_Out ; nByte ++ ) {
			unsigned char * pcByte_Out  = acData_Out  +     nByte ;
			char *          pszHex_Out  = s_szHex_Out + 2 * nByte ;

			sprintf ( pszHex_Out, DWH_ENCODE_FMT_HEX, * pcByte_Out ) ;
				}
		}

			} else {

		//----------------------------------------------------------------------
		// Fehler aufgetreten

		strcpy ( s_szHex_Out, DWH_ENCODE_ERROR ) ;
			}


			//-------------------------------------------------------------------------
			// Ruecksprung zur aufrufenden Funktion
			//-------------------------------------------------------------------------

			return s_szHex_Out ;
	}

	//==============================================================================
	//  DWH_ENCODE_Encode_Char_Static - ENDE
	//==============================================================================

	//==============================================================================
	//  DWH_ENCODE_Encode_String
	//==============================================================================
	//
	//  Do:     Diese Funktion verschluesselt einen zero-terminated String
	//
	//	    Der String wird in Bloecke zu acht Byte aufgeteilt,
	//	    unvollstaendige Bloecke werden dabei aufgefuellt.
	//	    Die Bloecke werden dann mit dem ISO-Hash-Algorithmus verschluesselt.
	//	    Die verschuesseltn Bloecke werden abschliessend in einen String
	//	    umgewandelt, in dem jedes Byte mit zwei Hexadezimal-Zahlen
	//	    dargestellt wird.
	//	    Der String hat die Laenge
	//		2 * ((strlen () + 7)/8) * 8
	//
	//	    Es werden hoechsten DWH_ENCODE_nConst_Size_Max Zeichen verschluesselt,
	//	    ist der String laenger, werden nur die ersten Zeichen verschluesselt.
	//
	//	    Der Wert, den die Funtkion zurueckgibt, ist nur bis zum naechsten
	//	    Aufruf gueltig und muss in der aufrufenden Funktion gesichert werden,
	//	    wenn er laenger benoetigt wird.
	//
	//	    Tritt waerend der Verarbeitung in der Funktion ein Fehler auf,
	//	    wird der String "--- ERROR ---" zurueckgegeben.
	//
	//  Arg:    IN	i_pszData			: zu verschuessender String
	//
	//  Ret:    Zeiger auf verschluesselte Daten	: kein Fehler bei der Verarbeitung
	//          Zeiger auf String "--- ERROR ---"	: sonst
	//
	//==============================================================================

	extern char *
	DWH_ENCODE_Encode_String ( char * i_pszData )

	{
			//-------------------------------------------------------------------------
			// lokale Variablen
			//-------------------------------------------------------------------------

			int fOk = 1	;    // TRUE

			size_t nSize_Data  = 0 ;

			//-------------------------------------------------------------------------
			// statische Variablen
			//-------------------------------------------------------------------------

			// keine

			//-------------------------------------------------------------------------
			// Code
			//-------------------------------------------------------------------------

			//--------------------------------------------------------------------------
			//  Pruefen: Aufrufparameter

			fOk = (i_pszData != NULL) ;		// Zeiger nicht NULL

			//--------------------------------------------------------------------------
			//	Wenn Aufruf in Ordnung
			//	    Laenge des Strings ermitteln

			if (fOk) {
		nSize_Data = strlen ( i_pszData ) ;
			}


			//-------------------------------------------------------------------------
			// Berechnung an  delegieren
			// Ruecksprung zur aufrufenden Funktion
			//-------------------------------------------------------------------------

			return DWH_ENCODE_Encode_Char ( i_pszData, nSize_Data )  ;
	}

	//==============================================================================
	//  DWH_ENCODE_Encode_String - ENDE
	//==============================================================================

	//==============================================================================
	//  DWH_ENCODE_Encode_String_Static
	//==============================================================================
	//
	//  Do:     Diese Funktion verschluesselt einen zero-terminated String
	//
	//	    Der String wird in Bloecke zu acht Byte aufgeteilt,
	//	    unvollstaendige Bloecke werden dabei aufgefuellt.
	//	    Die Bloecke werden dann mit dem ISO-Hash-Algorithmus verschluesselt.
	//	    Die verschuesseltn Bloecke werden abschliessend in einen String
	//	    umgewandelt, in dem jedes Byte mit zwei Hexadezimal-Zahlen
	//	    dargestellt wird.
	//	    Der String hat die Laenge
	//		2 * ((strlen () + 7)/8) * 8
	//
	//	    Es werden hoechsten DWH_ENCODE_nConst_Size_Max Zeichen verschluesselt,
	//	    ist der String laenger, werden nur die ersten Zeichen verschluesselt.
	//
	//	    Der Wert, den die Funtkion zurueckgibt, ist nur bis zum naechsten
	//	    Aufruf gueltig und muss in der aufrufenden Funktion gesichert werden,
	//	    wenn er laenger benoetigt wird.
	//
	//	    Tritt waerend der Verarbeitung in der Funktion ein Fehler auf,
	//	    wird der String "--- ERROR ---" zurueckgegeben.
	//
	//	    Im Unterschied zu DWH_ENCODE_Encode_String wird hier aus
	//	    Gruenden der Performance auf statisch initialisierte
	//	    Variablen zugegriffen.
	//
	//  Arg:    IN	i_pszData			: zu verschuessender String
	//
	//  Ret:    Zeiger auf verschluesselte Daten	: kein Fehler bei der Verarbeitung
	//          Zeiger auf String "--- ERROR ---"	: sonst
	//
	//==============================================================================

	extern char *
	DWH_ENCODE_Encode_String_Static ( char * i_pszData )
	{
			//-------------------------------------------------------------------------
			// lokale Variablen
			//-------------------------------------------------------------------------

			int fOk = 1	;    // TRUE

			size_t nSize_Data  = 0 ;

			//-------------------------------------------------------------------------
			// statische Variablen
			//-------------------------------------------------------------------------

			// keine

			//-------------------------------------------------------------------------
			// Code
			//-------------------------------------------------------------------------

			//--------------------------------------------------------------------------
			//  Pruefen: Aufrufparameter

			fOk = (i_pszData != NULL) ;		// Zeiger nicht NULL

			//--------------------------------------------------------------------------
			//	Wenn Aufruf in Ordnung
			//	    Laenge des Strings ermitteln

			if (fOk) {
		nSize_Data = strlen ( i_pszData ) ;
			}


			//-------------------------------------------------------------------------
			// Berechnung an  delegieren
			// Ruecksprung zur aufrufenden Funktion
			//-------------------------------------------------------------------------

			return DWH_ENCODE_Encode_Char_Static ( i_pszData, nSize_Data )  ;
	}

	//==============================================================================
	//  DWH_ENCODE_Encode_String_Static - ENDE
	//==============================================================================

	//==============================================================================
	//  DWH_ENCODE.C - ENDE
	//==============================================================================

	//std::string encode_msisdn(const std::string& msisdn)
	//{
//		return std::string(DWH_ENCODE_Encode_Char_Static(msisdn.data(), msisdn.size()));
	//}
int main(int argc, char *argv[])
{ 
    FILE * fp;
    char * line = NULL;
    size_t len = 0;
    ssize_t read;

    fp = fopen(argv[1], "r");
    if (fp == NULL)
        return 1;

    while ((read = getline(&line, &len, fp)) != -1) {

        char *converted = DWH_ENCODE_Encode_Char_Static(line, strlen(line));
        printf("%s,%s",converted,line);

        //printf("Retrieved line of length %zu:\n", read);
        //printf("%s", line);
    }

    fclose(fp);
    if (line)
        free(line);

  	return 0;
}